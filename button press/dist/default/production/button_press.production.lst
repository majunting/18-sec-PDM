

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Wed Jan 03 19:12:21 2018

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F45K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49  0000                     
    50                           ; Version 1.42
    51                           ; Generated 13/04/2017 GMT
    52                           ; 
    53                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F45K80 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     
    85                           	psect	nvCOMRAM
    86  000048                     __pnvCOMRAM:
    87                           	opt stack 0
    88  000048                     _timer1ReloadVal:
    89                           	opt stack 0
    90  000048                     	ds	2
    91                           
    92                           	psect	nvBANK0
    93  000089                     __pnvBANK0:
    94                           	opt stack 0
    95  000089                     _INT0_InterruptHandler:
    96                           	opt stack 0
    97  000089                     	ds	2
    98  00008B                     _INT1_InterruptHandler:
    99                           	opt stack 0
   100  00008B                     	ds	2
   101  00008D                     _TMR1_InterruptHandler:
   102                           	opt stack 0
   103  00008D                     	ds	2
   104  0000                     _BRGCON3	set	3653
   105  0000                     _BRGCON2	set	3652
   106  0000                     _BRGCON1	set	3651
   107  0000                     _RXF5SIDL	set	3829
   108  0000                     _RXF5SIDH	set	3828
   109  0000                     _RXF5EIDL	set	3831
   110  0000                     _RXF5EIDH	set	3830
   111  0000                     _RXF4SIDL	set	3825
   112  0000                     _RXF4SIDH	set	3824
   113  0000                     _RXF4EIDL	set	3827
   114  0000                     _RXF4EIDH	set	3826
   115  0000                     _RXF3SIDL	set	3821
   116  0000                     _RXF3SIDH	set	3820
   117  0000                     _RXF3EIDL	set	3823
   118  0000                     _RXF3EIDH	set	3822
   119  0000                     _RXF2SIDL	set	3817
   120  0000                     _RXF2SIDH	set	3816
   121  0000                     _RXF2EIDL	set	3819
   122  0000                     _RXF2EIDH	set	3818
   123  0000                     _RXF1SIDL	set	3813
   124  0000                     _RXF1SIDH	set	3812
   125  0000                     _RXF1EIDL	set	3815
   126  0000                     _RXF1EIDH	set	3814
   127  0000                     _RXF0SIDL	set	3809
   128  0000                     _RXF0SIDH	set	3808
   129  0000                     _RXF0EIDL	set	3811
   130  0000                     _RXF0EIDH	set	3810
   131  0000                     _RXM1SIDL	set	3837
   132  0000                     _RXM1SIDH	set	3836
   133  0000                     _RXM1EIDL	set	3839
   134  0000                     _RXM1EIDH	set	3838
   135  0000                     _RXM0SIDL	set	3833
   136  0000                     _RXM0SIDH	set	3832
   137  0000                     _RXM0EIDL	set	3835
   138  0000                     _RXM0EIDH	set	3834
   139  0000                     _CCPR2H	set	3922
   140  0000                     _CCPR2L	set	3921
   141  0000                     _CCP2CON	set	3920
   142  0000                     _WPUB	set	3931
   143  0000                     _ANCON1	set	3932
   144  0000                     _ANCON0	set	3933
   145  0000                     _RXB1D7	set	3901
   146  0000                     _RXB1D6	set	3900
   147  0000                     _RXB1D5	set	3899
   148  0000                     _RXB1D4	set	3898
   149  0000                     _RXB1D3	set	3897
   150  0000                     _RXB1D2	set	3896
   151  0000                     _RXB1D1	set	3895
   152  0000                     _RXB1D0	set	3894
   153  0000                     _RXB1DLC	set	3893
   154  0000                     _RXB1SIDH	set	3889
   155  0000                     _RXB1EIDL	set	3892
   156  0000                     _RXB1EIDH	set	3891
   157  0000                     _RXB1SIDL	set	3890
   158  0000                     _RXB1CONbits	set	3888
   159  0000                     _TXB2D7	set	3853
   160  0000                     _TXB2D6	set	3852
   161  0000                     _TXB2D5	set	3851
   162  0000                     _TXB2D4	set	3850
   163  0000                     _TXB2D3	set	3849
   164  0000                     _TXB2D2	set	3848
   165  0000                     _TXB2D1	set	3847
   166  0000                     _TXB2D0	set	3846
   167  0000                     _TXB2DLC	set	3845
   168  0000                     _TXB2SIDL	set	3842
   169  0000                     _TXB2SIDH	set	3841
   170  0000                     _TXB2EIDL	set	3844
   171  0000                     _TXB2EIDH	set	3843
   172  0000                     _TXB2CONbits	set	3840
   173  0000                     _TXB1D7	set	3869
   174  0000                     _TXB1D6	set	3868
   175  0000                     _TXB1D5	set	3867
   176  0000                     _TXB1D4	set	3866
   177  0000                     _TXB1D3	set	3865
   178  0000                     _TXB1D2	set	3864
   179  0000                     _TXB1D1	set	3863
   180  0000                     _TXB1D0	set	3862
   181  0000                     _TXB1DLC	set	3861
   182  0000                     _TXB1SIDL	set	3858
   183  0000                     _TXB1SIDH	set	3857
   184  0000                     _TXB1EIDL	set	3860
   185  0000                     _TXB1EIDH	set	3859
   186  0000                     _TXB1CONbits	set	3856
   187  0000                     _TXB0D7	set	3885
   188  0000                     _TXB0D6	set	3884
   189  0000                     _TXB0D5	set	3883
   190  0000                     _TXB0D4	set	3882
   191  0000                     _TXB0D3	set	3881
   192  0000                     _TXB0D2	set	3880
   193  0000                     _TXB0D1	set	3879
   194  0000                     _TXB0D0	set	3878
   195  0000                     _TXB0DLC	set	3877
   196  0000                     _TXB0SIDL	set	3874
   197  0000                     _TXB0SIDH	set	3873
   198  0000                     _TXB0EIDL	set	3876
   199  0000                     _TXB0EIDH	set	3875
   200  0000                     _TXB0CONbits	set	3872
   201  0000                     _CIOCONbits	set	3952
   202  0000                     _INTCON2bits	set	4081
   203  0000                     _PORTBbits	set	3969
   204  0000                     _SSPBUF	set	4041
   205  0000                     _SSPCON2bits	set	4037
   206  0000                     _SSPCON1bits	set	4038
   207  0000                     _SSPADD	set	4040
   208  0000                     _SSPCON1	set	4038
   209  0000                     _SSPSTAT	set	4039
   210  0000                     _T1GCONbits	set	4010
   211  0000                     _T1CONbits	set	4045
   212  0000                     _TMR1L	set	4046
   213  0000                     _TMR1H	set	4047
   214  0000                     _T1GCON	set	4010
   215  0000                     _T1CON	set	4045
   216  0000                     _PIR1bits	set	3998
   217  0000                     _PIE1bits	set	3997
   218  0000                     _PIR2bits	set	4001
   219  0000                     _PIE2bits	set	4000
   220  0000                     _INTCON3bits	set	4080
   221  0000                     _RCONbits	set	4048
   222  0000                     _PIE3bits	set	4003
   223  0000                     _PIR3bits	set	4004
   224  0000                     _CCPTMRSbits	set	3993
   225  0000                     _PIR4bits	set	4023
   226  0000                     _EEDATA	set	3955
   227  0000                     _EEADR	set	3956
   228  0000                     _EEADRH	set	3957
   229  0000                     _EECON2	set	3966
   230  0000                     _EECON1bits	set	3967
   231  0000                     _INTCONbits	set	4082
   232  0000                     _TABLAT	set	4085
   233  0000                     _TBLPTRL	set	4086
   234  0000                     _TBLPTRH	set	4087
   235  0000                     _TBLPTRU	set	4088
   236  0000                     _ADCON0bits	set	4034
   237  0000                     _ADRESL	set	4035
   238  0000                     _ADRESH	set	4036
   239  0000                     _ADCON2	set	4032
   240  0000                     _ADCON1	set	4033
   241  0000                     _ADCON0	set	4034
   242  0000                     _TRISD	set	3989
   243  0000                     _TRISC	set	3988
   244  0000                     _TRISB	set	3987
   245  0000                     _TRISA	set	3986
   246  0000                     _TRISE	set	3990
   247  0000                     _LATC	set	3979
   248  0000                     _LATB	set	3978
   249  0000                     _LATA	set	3977
   250  0000                     _LATD	set	3980
   251  0000                     _LATE	set	3981
   252  0000                     _COMSTATbits	set	3953
   253  0000                     _RXB0D7	set	3949
   254  0000                     _RXB0D6	set	3948
   255  0000                     _RXB0D5	set	3947
   256  0000                     _RXB0D4	set	3946
   257  0000                     _RXB0D3	set	3945
   258  0000                     _RXB0D2	set	3944
   259  0000                     _RXB0D1	set	3943
   260  0000                     _RXB0D0	set	3942
   261  0000                     _RXB0DLC	set	3941
   262  0000                     _RXB0SIDH	set	3937
   263  0000                     _RXB0EIDL	set	3940
   264  0000                     _RXB0EIDH	set	3939
   265  0000                     _RXB0SIDL	set	3938
   266  0000                     _RXB0CONbits	set	3936
   267  0000                     _PIE5bits	set	3958
   268  0000                     _PIR5bits	set	3959
   269  0000                     _ECANCON	set	3954
   270  0000                     _CANSTAT	set	3950
   271  0000                     _CANCON	set	3951
   272  0000                     _REFOCON	set	3994
   273  0000                     _OSCTUNE	set	3995
   274  0000                     _OSCCON2	set	4050
   275  0000                     _OSCCON	set	4051
   276  0000                     _RB4	set	31756
   277  0000                     _RA1	set	31745
   278                           
   279                           ; #config settings
   280  0000                     
   281                           	psect	cinit
   282  000AC8                     __pcinit:
   283                           	opt stack 0
   284  000AC8                     start_initialization:
   285                           	opt stack 0
   286  000AC8                     __initialization:
   287                           	opt stack 0
   288                           
   289                           ; Clear objects allocated to BANK0 (20 bytes)
   290  000AC8  EE00  F075         	lfsr	0,__pbssBANK0
   291  000ACC  0E14               	movlw	20
   292  000ACE                     clear_0:
   293  000ACE  6AEE               	clrf	postinc0,c
   294  000AD0  06E8               	decf	wreg,f,c
   295  000AD2  E1FD               	bnz	clear_0
   296                           
   297                           ; Clear objects allocated to COMRAM (31 bytes)
   298  000AD4  EE00  F029         	lfsr	0,__pbssCOMRAM
   299  000AD8  0E1F               	movlw	31
   300  000ADA                     clear_1:
   301  000ADA  6AEE               	clrf	postinc0,c
   302  000ADC  06E8               	decf	wreg,f,c
   303  000ADE  E1FD               	bnz	clear_1
   304  000AE0                     end_of_initialization:
   305                           	opt stack 0
   306  000AE0                     __end_of__initialization:
   307                           	opt stack 0
   308  000AE0  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   309  000AE2  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   310  000AE4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   311  000AE6  6EF8               	movwf	tblptru,c
   312  000AE8  0100               	movlb	0
   313  000AEA  EF67  F004         	goto	_main	;jump to C main() function
   314                           tblptru	equ	0xFF8
   315                           postinc0	equ	0xFEE
   316                           wreg	equ	0xFE8
   317                           
   318                           	psect	bssCOMRAM
   319  000029                     __pbssCOMRAM:
   320                           	opt stack 0
   321  000029                     _i2c_object:
   322                           	opt stack 0
   323  000029                     	ds	7
   324  000030                     _ext_int1_timer:
   325                           	opt stack 0
   326  000030                     	ds	2
   327  000032                     I2C_ISR@pi2c_buf_ptr:
   328                           	opt stack 0
   329  000032                     	ds	2
   330  000034                     _p_i2c_current:
   331                           	opt stack 0
   332  000034                     	ds	2
   333  000036                     _p_i2c_trb_current:
   334                           	opt stack 0
   335  000036                     	ds	2
   336  000038                     _prev_reading:
   337                           	opt stack 0
   338  000038                     	ds	2
   339  00003A                     _time_diff:
   340                           	opt stack 0
   341  00003A                     	ds	2
   342  00003C                     _ext_int0_cur_state:
   343                           	opt stack 0
   344  00003C                     	ds	1
   345  00003D                     _ext_int1_cur_state:
   346                           	opt stack 0
   347  00003D                     	ds	1
   348  00003E                     _ext_int0_timing:
   349                           	opt stack 0
   350  00003E                     	ds	1
   351  00003F                     _ext_int1_timing:
   352                           	opt stack 0
   353  00003F                     	ds	1
   354  000040                     I2C_ISR@i2c_10bit_address_restart:
   355                           	opt stack 0
   356  000040                     	ds	1
   357  000041                     I2C_ISR@i2c_bytes_left:
   358                           	opt stack 0
   359  000041                     	ds	1
   360  000042                     _i2c_trb_count:
   361                           	opt stack 0
   362  000042                     	ds	1
   363  000043                     _i2c_state:
   364                           	opt stack 0
   365  000043                     	ds	1
   366  000044                     _read_available:
   367                           	opt stack 0
   368  000044                     	ds	1
   369  000045                     _cycle_num:
   370                           	opt stack 0
   371  000045                     	ds	1
   372  000046                     I2C_ISR@i2c_address:
   373                           	opt stack 0
   374  000046                     	ds	2
   375                           tblptru	equ	0xFF8
   376                           postinc0	equ	0xFEE
   377                           wreg	equ	0xFE8
   378                           
   379                           	psect	bssBANK0
   380  000075                     __pbssBANK0:
   381                           	opt stack 0
   382  000075                     _ext_int0_timer:
   383                           	opt stack 0
   384  000075                     	ds	2
   385  000077                     I2C_MasterRead@trBlock:
   386                           	opt stack 0
   387  000077                     	ds	6
   388  00007D                     I2C_MasterWrite@trBlock:
   389                           	opt stack 0
   390  00007D                     	ds	6
   391  000083                     _i2c_tr_queue:
   392                           	opt stack 0
   393  000083                     	ds	6
   394                           tblptru	equ	0xFF8
   395                           postinc0	equ	0xFEE
   396                           wreg	equ	0xFE8
   397                           
   398                           	psect	cstackBANK0
   399  000060                     __pcstackBANK0:
   400                           	opt stack 0
   401  000060                     CAN_transmit@returnValue:
   402                           	opt stack 0
   403                           
   404                           ; 1 bytes @ 0x0
   405  000060                     	ds	1
   406  000061                     CAN_transmit@tempEIDH:
   407                           	opt stack 0
   408                           
   409                           ; 1 bytes @ 0x1
   410  000061                     	ds	1
   411  000062                     CAN_transmit@tempEIDL:
   412                           	opt stack 0
   413                           
   414                           ; 1 bytes @ 0x2
   415  000062                     	ds	1
   416  000063                     CAN_transmit@tempSIDH:
   417                           	opt stack 0
   418                           
   419                           ; 1 bytes @ 0x3
   420  000063                     	ds	1
   421  000064                     CAN_transmit@tempSIDL:
   422                           	opt stack 0
   423                           
   424                           ; 1 bytes @ 0x4
   425  000064                     	ds	1
   426  000065                     main@int1_state:
   427                           	opt stack 0
   428                           
   429                           ; 1 bytes @ 0x5
   430  000065                     	ds	1
   431  000066                     main@message:
   432                           	opt stack 0
   433                           
   434                           ; 1 bytes @ 0x6
   435  000066                     	ds	1
   436  000067                     main@test:
   437                           	opt stack 0
   438                           
   439                           ; 14 bytes @ 0x7
   440  000067                     	ds	14
   441                           tblptru	equ	0xFF8
   442                           postinc0	equ	0xFEE
   443                           wreg	equ	0xFE8
   444                           
   445                           	psect	cstackCOMRAM
   446  000001                     __pcstackCOMRAM:
   447                           	opt stack 0
   448  000001                     ??_I2C_ISR:
   449  000001                     ??_CCP2_CaptureISR:
   450  000001                     ?_TMR1_ReadTimer:
   451                           	opt stack 0
   452  000001                     
   453                           ; 1 bytes @ 0x0
   454  000001                     	ds	2
   455  000003                     ??_TMR1_ReadTimer:
   456  000003                     CCP2_CaptureISR@module:
   457                           	opt stack 0
   458                           
   459                           ; 2 bytes @ 0x2
   460  000003                     	ds	2
   461  000005                     TMR1_ReadTimer@readVal:
   462                           	opt stack 0
   463                           
   464                           ; 2 bytes @ 0x4
   465  000005                     	ds	2
   466  000007                     ??_INTERRUPT_InterruptManager:
   467                           
   468                           ; 1 bytes @ 0x6
   469  000007                     	ds	14
   470  000015                     ??_ECAN_Initialize:
   471  000015                     TMR1_SetInterruptHandler@InterruptHandler:
   472                           	opt stack 0
   473  000015                     INT1_SetInterruptHandler@InterruptHandler:
   474                           	opt stack 0
   475  000015                     INT0_SetInterruptHandler@InterruptHandler:
   476                           	opt stack 0
   477  000015                     convertCANid2Reg@tempPassedInID:
   478                           	opt stack 0
   479                           
   480                           ; 4 bytes @ 0x14
   481  000015                     	ds	2
   482  000017                     ??_TMR1_Initialize:
   483  000017                     
   484                           ; 1 bytes @ 0x16
   485  000017                     	ds	2
   486  000019                     convertCANid2Reg@canIdType:
   487                           	opt stack 0
   488                           
   489                           ; 1 bytes @ 0x18
   490  000019                     	ds	1
   491  00001A                     convertCANid2Reg@passedInEIDH:
   492                           	opt stack 0
   493                           
   494                           ; 2 bytes @ 0x19
   495  00001A                     	ds	2
   496  00001C                     convertCANid2Reg@passedInEIDL:
   497                           	opt stack 0
   498                           
   499                           ; 2 bytes @ 0x1B
   500  00001C                     	ds	2
   501  00001E                     convertCANid2Reg@passedInSIDH:
   502                           	opt stack 0
   503                           
   504                           ; 2 bytes @ 0x1D
   505  00001E                     	ds	2
   506  000020                     convertCANid2Reg@passedInSIDL:
   507                           	opt stack 0
   508                           
   509                           ; 2 bytes @ 0x1F
   510  000020                     	ds	2
   511  000022                     ??_convertCANid2Reg:
   512                           
   513                           ; 1 bytes @ 0x21
   514  000022                     	ds	4
   515  000026                     convertCANid2Reg@wipSIDL:
   516                           	opt stack 0
   517                           
   518                           ; 1 bytes @ 0x25
   519  000026                     	ds	1
   520  000027                     CAN_transmit@tempCanMsg:
   521                           	opt stack 0
   522                           
   523                           ; 2 bytes @ 0x26
   524  000027                     	ds	2
   525  000029                     tblptru	equ	0xFF8
   526                           postinc0	equ	0xFEE
   527                           wreg	equ	0xFE8
   528                           
   529                           ; 1 bytes @ 0x28
   530 ;;
   531 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   532 ;;
   533 ;; *************** function _main *****************
   534 ;; Defined at:
   535 ;;		line 50 in file "main.c"
   536 ;; Parameters:    Size  Location     Type
   537 ;;		None
   538 ;; Auto vars:     Size  Location     Type
   539 ;;  test           14    7[BANK0 ] struct .
   540 ;;  message         1    6[BANK0 ] unsigned char 
   541 ;;  int1_state      1    5[BANK0 ] unsigned char 
   542 ;; Return value:  Size  Location     Type
   543 ;;                  1    wreg      void 
   544 ;; Registers used:
   545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   546 ;; Tracked objects:
   547 ;;		On entry : 0/0
   548 ;;		On exit  : 0/0
   549 ;;		Unchanged: 0/0
   550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   552 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   554 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   555 ;;Total ram usage:       16 bytes
   556 ;; Hardware stack levels required when called:    7
   557 ;; This function calls:
   558 ;;		_CAN_transmit
   559 ;;		_INT1_GetInterruptState
   560 ;;		_SYSTEM_Initialize
   561 ;; This function is called by:
   562 ;;		Startup code after reset
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           	psect	text0
   567  0008CE                     __ptext0:
   568                           	opt stack 0
   569  0008CE                     _main:
   570                           	opt stack 24
   571                           
   572                           ;main.c: 53: SYSTEM_Initialize();
   573                           
   574                           ;incstack = 0
   575  0008CE  EC77  F005         	call	_SYSTEM_Initialize	;wreg free
   576                           
   577                           ;main.c: 55: CIOCONbits.CLKSEL = 1;
   578  0008D2  8070               	bsf	3952,0,c	;volatile
   579                           
   580                           ;main.c: 56: CIOCONbits.ENDRHI = 1;
   581  0008D4  8A70               	bsf	3952,5,c	;volatile
   582                           
   583                           ;main.c: 57: CIOCONbits.TX2SRC = 0;
   584  0008D6  9E70               	bcf	3952,7,c	;volatile
   585                           
   586                           ;main.c: 58: CIOCONbits.TX2EN = 1;
   587  0008D8  8C70               	bsf	3952,6,c	;volatile
   588                           
   589                           ;main.c: 60: bool int1_state = 0;
   590  0008DA  0E00               	movlw	0
   591  0008DC  0100               	movlb	0	; () banked
   592  0008DE  6F65               	movwf	main@int1_state& (0+255),b
   593                           
   594                           ; BSR set to: 0
   595                           ;main.c: 61: uint8_t message = 0;
   596  0008E0  0E00               	movlw	0
   597  0008E2  0100               	movlb	0	; () banked
   598  0008E4  6F66               	movwf	main@message& (0+255),b
   599                           
   600                           ; BSR set to: 0
   601                           ;main.c: 62: RA1 = 1;
   602  0008E6  8280               	bsf	3968,1,c	;volatile
   603  0008E8                     l3161:
   604                           
   605                           ;main.c: 100: {
   606                           ;main.c: 105: int1_state = INT1_GetInterruptState();
   607  0008E8  EC1B  F006         	call	_INT1_GetInterruptState	;wreg free
   608  0008EC  0100               	movlb	0	; () banked
   609  0008EE  6F65               	movwf	main@int1_state& (0+255),b
   610                           
   611                           ; BSR set to: 0
   612                           ;main.c: 106: if(int1_state) {
   613  0008F0  0100               	movlb	0	; () banked
   614  0008F2  5165               	movf	main@int1_state& (0+255),w,b
   615  0008F4  0100               	movlb	0	; () banked
   616  0008F6  B4D8               	btfsc	status,2,c
   617  0008F8  D004               	goto	l3167
   618                           
   619                           ; BSR set to: 0
   620                           ;main.c: 107: message = 0xFF;
   621  0008FA  0100               	movlb	0	; () banked
   622  0008FC  6966               	setf	main@message& (0+255),b
   623                           
   624                           ;main.c: 108: RB4 = 0;
   625  0008FE  9881               	bcf	3969,4,c	;volatile
   626                           
   627                           ;main.c: 109: } else {
   628  000900  D004               	goto	l848
   629  000902                     l3167:
   630                           
   631                           ; BSR set to: 0
   632                           ;main.c: 110: message = 0x0;
   633  000902  0E00               	movlw	0
   634  000904  0100               	movlb	0	; () banked
   635  000906  6F66               	movwf	main@message& (0+255),b
   636                           
   637                           ; BSR set to: 0
   638                           ;main.c: 111: RB4 = 1;
   639  000908  8881               	bsf	3969,4,c	;volatile
   640  00090A                     l848:
   641                           
   642                           ; BSR set to: 0
   643                           ;main.c: 112: }
   644                           ;main.c: 113: uCAN_MSG test;
   645                           ;main.c: 114: test.frame.idType=1;
   646  00090A  0E01               	movlw	1
   647  00090C  0100               	movlb	0	; () banked
   648  00090E  6F67               	movwf	main@test& (0+255),b
   649                           
   650                           ;main.c: 115: test.frame.id=0x174;
   651  000910  0E74               	movlw	116
   652  000912  0100               	movlb	0	; () banked
   653  000914  6F68               	movwf	(main@test+1)& (0+255),b
   654  000916  0E01               	movlw	1
   655  000918  6F69               	movwf	(main@test+2)& (0+255),b
   656  00091A  0E00               	movlw	0
   657  00091C  6F6A               	movwf	(main@test+3)& (0+255),b
   658  00091E  0E00               	movlw	0
   659  000920  6F6B               	movwf	(main@test+4)& (0+255),b
   660                           
   661                           ;main.c: 116: test.frame.dlc=2;
   662  000922  0E02               	movlw	2
   663  000924  0100               	movlb	0	; () banked
   664  000926  6F6C               	movwf	(main@test+5)& (0+255),b
   665                           
   666                           ; BSR set to: 0
   667                           ;main.c: 117: test.frame.data0 = message;
   668  000928  C066  F06D         	movff	main@message,main@test+6
   669                           
   670                           ; BSR set to: 0
   671                           ;main.c: 118: test.frame.data1 = message;
   672  00092C  C066  F06E         	movff	main@message,main@test+7
   673                           
   674                           ; BSR set to: 0
   675                           ;main.c: 128: CAN_transmit(&test);
   676  000930  0E67               	movlw	low main@test
   677  000932  6E27               	movwf	CAN_transmit@tempCanMsg,c
   678  000934  0E00               	movlw	high main@test
   679  000936  6E28               	movwf	CAN_transmit@tempCanMsg+1,c
   680  000938  EC6B  F000         	call	_CAN_transmit	;wreg free
   681  00093C  D7D5               	goto	l3161
   682  00093E                     __end_of_main:
   683                           	opt stack 0
   684                           tblptru	equ	0xFF8
   685                           postinc0	equ	0xFEE
   686                           wreg	equ	0xFE8
   687                           status	equ	0xFD8
   688                           
   689 ;; *************** function _SYSTEM_Initialize *****************
   690 ;; Defined at:
   691 ;;		line 111 in file "mcc_generated_files/mcc.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;		None
   694 ;; Auto vars:     Size  Location     Type
   695 ;;		None
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      void 
   698 ;; Registers used:
   699 ;;		wreg, status,2, status,0, cstack
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   709 ;;Total ram usage:        0 bytes
   710 ;; Hardware stack levels used:    1
   711 ;; Hardware stack levels required when called:    6
   712 ;; This function calls:
   713 ;;		_ADC_Initialize
   714 ;;		_CCP2_Initialize
   715 ;;		_ECAN_Initialize
   716 ;;		_EXT_INT_Initialize
   717 ;;		_I2C_Initialize
   718 ;;		_INTERRUPT_Initialize
   719 ;;		_OSCILLATOR_Initialize
   720 ;;		_PIN_MANAGER_Initialize
   721 ;;		_TMR1_Initialize
   722 ;; This function is called by:
   723 ;;		_main
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727                           	psect	text1
   728  000AEE                     __ptext1:
   729                           	opt stack 0
   730  000AEE                     _SYSTEM_Initialize:
   731                           	opt stack 24
   732                           
   733                           ;mcc.c: 114: INTERRUPT_Initialize();
   734                           
   735                           ;incstack = 0
   736  000AEE  EC19  F006         	call	_INTERRUPT_Initialize	;wreg free
   737                           
   738                           ;mcc.c: 115: PIN_MANAGER_Initialize();
   739  000AF2  EC34  F005         	call	_PIN_MANAGER_Initialize	;wreg free
   740                           
   741                           ;mcc.c: 116: OSCILLATOR_Initialize();
   742  000AF6  ECF7  F005         	call	_OSCILLATOR_Initialize	;wreg free
   743                           
   744                           ;mcc.c: 117: I2C_Initialize();
   745  000AFA  EC4F  F005         	call	_I2C_Initialize	;wreg free
   746                           
   747                           ;mcc.c: 118: CCP2_Initialize();
   748  000AFE  ECD3  F005         	call	_CCP2_Initialize	;wreg free
   749                           
   750                           ;mcc.c: 119: ADC_Initialize();
   751  000B02  ECEC  F005         	call	_ADC_Initialize	;wreg free
   752                           
   753                           ;mcc.c: 120: TMR1_Initialize();
   754  000B06  EC17  F005         	call	_TMR1_Initialize	;wreg free
   755                           
   756                           ;mcc.c: 121: EXT_INT_Initialize();
   757  000B0A  EC8A  F005         	call	_EXT_INT_Initialize	;wreg free
   758                           
   759                           ;mcc.c: 122: ECAN_Initialize();
   760  000B0E  ECF0  F003         	call	_ECAN_Initialize	;wreg free
   761  000B12  0012               	return		;funcret
   762  000B14                     __end_of_SYSTEM_Initialize:
   763                           	opt stack 0
   764                           tblptru	equ	0xFF8
   765                           postinc0	equ	0xFEE
   766                           wreg	equ	0xFE8
   767                           status	equ	0xFD8
   768                           
   769 ;; *************** function _TMR1_Initialize *****************
   770 ;; Defined at:
   771 ;;		line 63 in file "mcc_generated_files/tmr1.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;		None
   776 ;; Return value:  Size  Location     Type
   777 ;;                  1    wreg      void 
   778 ;; Registers used:
   779 ;;		wreg, status,2, status,0, cstack
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   787 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   788 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   789 ;;Total ram usage:        2 bytes
   790 ;; Hardware stack levels used:    1
   791 ;; Hardware stack levels required when called:    5
   792 ;; This function calls:
   793 ;;		_TMR1_SetInterruptHandler
   794 ;;		_TMR1_StartTimer
   795 ;; This function is called by:
   796 ;;		_SYSTEM_Initialize
   797 ;; This function uses a non-reentrant model
   798 ;;
   799                           
   800                           	psect	text2
   801  000A2E                     __ptext2:
   802                           	opt stack 0
   803  000A2E                     _TMR1_Initialize:
   804                           	opt stack 24
   805                           
   806                           ;tmr1.c: 68: T1CON = 0x00;
   807                           
   808                           ;incstack = 0
   809  000A2E  0E00               	movlw	0
   810  000A30  6ECD               	movwf	4045,c	;volatile
   811                           
   812                           ;tmr1.c: 71: T1GCON = 0x00;
   813  000A32  0E00               	movlw	0
   814  000A34  6EAA               	movwf	4010,c	;volatile
   815                           
   816                           ;tmr1.c: 74: TMR1H = 0xFF;
   817  000A36  68CF               	setf	4047,c	;volatile
   818                           
   819                           ;tmr1.c: 77: TMR1L = 0xF0;
   820  000A38  0EF0               	movlw	240
   821  000A3A  6ECE               	movwf	4046,c	;volatile
   822                           
   823                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
   824  000A3C  50CE               	movf	4046,w,c	;volatile
   825  000A3E  CFCF F017          	movff	4047,??_TMR1_Initialize	;volatile
   826  000A42  6A18               	clrf	(??_TMR1_Initialize+1)& (0+255),c
   827  000A44  C017  F018         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
   828  000A48  6A17               	clrf	??_TMR1_Initialize,c
   829  000A4A  1017               	iorwf	??_TMR1_Initialize,w,c
   830  000A4C  6E48               	movwf	_timer1ReloadVal,c	;volatile
   831  000A4E  5018               	movf	??_TMR1_Initialize+1,w,c
   832  000A50  6E49               	movwf	_timer1ReloadVal+1,c	;volatile
   833                           
   834                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
   835  000A52  909E               	bcf	3998,0,c	;volatile
   836                           
   837                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
   838  000A54  809D               	bsf	3997,0,c	;volatile
   839                           
   840                           ;tmr1.c: 89: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
   841  000A56  0E3A               	movlw	low _TMR1_DefaultInterruptHandler
   842  000A58  6E15               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
   843  000A5A  0E0C               	movlw	high _TMR1_DefaultInterruptHandler
   844  000A5C  6E16               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
   845  000A5E  EC00  F006         	call	_TMR1_SetInterruptHandler	;wreg free
   846                           
   847                           ;tmr1.c: 92: TMR1_StartTimer();
   848  000A62  EC17  F006         	call	_TMR1_StartTimer	;wreg free
   849  000A66  0012               	return		;funcret
   850  000A68                     __end_of_TMR1_Initialize:
   851                           	opt stack 0
   852                           tblptru	equ	0xFF8
   853                           postinc0	equ	0xFEE
   854                           wreg	equ	0xFE8
   855                           status	equ	0xFD8
   856                           
   857 ;; *************** function _TMR1_StartTimer *****************
   858 ;; Defined at:
   859 ;;		line 95 in file "mcc_generated_files/tmr1.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;		None
   862 ;; Auto vars:     Size  Location     Type
   863 ;;		None
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		None
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   877 ;;Total ram usage:        0 bytes
   878 ;; Hardware stack levels used:    1
   879 ;; Hardware stack levels required when called:    4
   880 ;; This function calls:
   881 ;;		Nothing
   882 ;; This function is called by:
   883 ;;		_TMR1_Initialize
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887                           	psect	text3
   888  000C2E                     __ptext3:
   889                           	opt stack 0
   890  000C2E                     _TMR1_StartTimer:
   891                           	opt stack 24
   892                           
   893                           ;tmr1.c: 98: T1CONbits.TMR1ON = 1;
   894                           
   895                           ;incstack = 0
   896  000C2E  80CD               	bsf	4045,0,c	;volatile
   897  000C30  0012               	return		;funcret
   898  000C32                     __end_of_TMR1_StartTimer:
   899                           	opt stack 0
   900                           tblptru	equ	0xFF8
   901                           postinc0	equ	0xFEE
   902                           wreg	equ	0xFE8
   903                           status	equ	0xFD8
   904                           
   905 ;; *************** function _TMR1_SetInterruptHandler *****************
   906 ;; Defined at:
   907 ;;		line 173 in file "mcc_generated_files/tmr1.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;  InterruptHan    2   20[COMRAM] PTR void 
   910 ;;		 -> TMR1_DefaultInterruptHandler(1), 
   911 ;; Auto vars:     Size  Location     Type
   912 ;;		None
   913 ;; Return value:  Size  Location     Type
   914 ;;                  1    wreg      void 
   915 ;; Registers used:
   916 ;;		wreg, status,2, status,0
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   922 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   925 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   926 ;;Total ram usage:        2 bytes
   927 ;; Hardware stack levels used:    1
   928 ;; Hardware stack levels required when called:    4
   929 ;; This function calls:
   930 ;;		Nothing
   931 ;; This function is called by:
   932 ;;		_TMR1_Initialize
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           	psect	text4
   937  000C00                     __ptext4:
   938                           	opt stack 0
   939  000C00                     _TMR1_SetInterruptHandler:
   940                           	opt stack 24
   941                           
   942                           ;tmr1.c: 174: TMR1_InterruptHandler = InterruptHandler;
   943                           
   944                           ;incstack = 0
   945  000C00  C015  F08D         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
   946  000C04  C016  F08E         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
   947  000C08  0012               	return		;funcret
   948  000C0A                     __end_of_TMR1_SetInterruptHandler:
   949                           	opt stack 0
   950                           tblptru	equ	0xFF8
   951                           postinc0	equ	0xFEE
   952                           wreg	equ	0xFE8
   953                           status	equ	0xFD8
   954                           
   955 ;; *************** function _PIN_MANAGER_Initialize *****************
   956 ;; Defined at:
   957 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;		None
   960 ;; Auto vars:     Size  Location     Type
   961 ;;		None
   962 ;; Return value:  Size  Location     Type
   963 ;;                  1    wreg      void 
   964 ;; Registers used:
   965 ;;		wreg, status,2
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   975 ;;Total ram usage:        0 bytes
   976 ;; Hardware stack levels used:    1
   977 ;; Hardware stack levels required when called:    4
   978 ;; This function calls:
   979 ;;		Nothing
   980 ;; This function is called by:
   981 ;;		_SYSTEM_Initialize
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985                           	psect	text5
   986  000A68                     __ptext5:
   987                           	opt stack 0
   988  000A68                     _PIN_MANAGER_Initialize:
   989                           	opt stack 25
   990                           
   991                           ;pin_manager.c: 56: LATE = 0x00;
   992                           
   993                           ;incstack = 0
   994  000A68  0E00               	movlw	0
   995  000A6A  6E8D               	movwf	3981,c	;volatile
   996                           
   997                           ;pin_manager.c: 57: LATD = 0x00;
   998  000A6C  0E00               	movlw	0
   999  000A6E  6E8C               	movwf	3980,c	;volatile
  1000                           
  1001                           ;pin_manager.c: 58: LATA = 0x04;
  1002  000A70  0E04               	movlw	4
  1003  000A72  6E89               	movwf	3977,c	;volatile
  1004                           
  1005                           ;pin_manager.c: 59: LATB = 0x00;
  1006  000A74  0E00               	movlw	0
  1007  000A76  6E8A               	movwf	3978,c	;volatile
  1008                           
  1009                           ;pin_manager.c: 60: LATC = 0x00;
  1010  000A78  0E00               	movlw	0
  1011  000A7A  6E8B               	movwf	3979,c	;volatile
  1012                           
  1013                           ;pin_manager.c: 65: TRISE = 0x07;
  1014  000A7C  0E07               	movlw	7
  1015  000A7E  6E96               	movwf	3990,c	;volatile
  1016                           
  1017                           ;pin_manager.c: 66: TRISA = 0xED;
  1018  000A80  0EED               	movlw	237
  1019  000A82  6E92               	movwf	3986,c	;volatile
  1020                           
  1021                           ;pin_manager.c: 67: TRISB = 0xEB;
  1022  000A84  0EEB               	movlw	235
  1023  000A86  6E93               	movwf	3987,c	;volatile
  1024                           
  1025                           ;pin_manager.c: 68: TRISC = 0xFF;
  1026  000A88  6894               	setf	3988,c	;volatile
  1027                           
  1028                           ;pin_manager.c: 69: TRISD = 0xFF;
  1029  000A8A  6895               	setf	3989,c	;volatile
  1030                           
  1031                           ;pin_manager.c: 74: ANCON0 = 0xFB;
  1032  000A8C  0EFB               	movlw	251
  1033  000A8E  010F               	movlb	15	; () banked
  1034  000A90  6F5D               	movwf	93,b	;volatile
  1035                           
  1036                           ;pin_manager.c: 75: ANCON1 = 0x78;
  1037  000A92  0E78               	movlw	120
  1038  000A94  010F               	movlb	15	; () banked
  1039  000A96  6F5C               	movwf	92,b	;volatile
  1040                           
  1041                           ; BSR set to: 15
  1042                           ;pin_manager.c: 80: WPUB = 0xFF;
  1043  000A98  010F               	movlb	15	; () banked
  1044  000A9A  695B               	setf	91,b	;volatile
  1045                           
  1046                           ; BSR set to: 15
  1047  000A9C  0012               	return		;funcret
  1048  000A9E                     __end_of_PIN_MANAGER_Initialize:
  1049                           	opt stack 0
  1050                           tblptru	equ	0xFF8
  1051                           postinc0	equ	0xFEE
  1052                           wreg	equ	0xFE8
  1053                           status	equ	0xFD8
  1054                           
  1055 ;; *************** function _OSCILLATOR_Initialize *****************
  1056 ;; Defined at:
  1057 ;;		line 126 in file "mcc_generated_files/mcc.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;		None
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;		None
  1062 ;; Return value:  Size  Location     Type
  1063 ;;                  1    wreg      void 
  1064 ;; Registers used:
  1065 ;;		wreg, status,2
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1075 ;;Total ram usage:        0 bytes
  1076 ;; Hardware stack levels used:    1
  1077 ;; Hardware stack levels required when called:    4
  1078 ;; This function calls:
  1079 ;;		Nothing
  1080 ;; This function is called by:
  1081 ;;		_SYSTEM_Initialize
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           	psect	text6
  1086  000BEE                     __ptext6:
  1087                           	opt stack 0
  1088  000BEE                     _OSCILLATOR_Initialize:
  1089                           	opt stack 25
  1090                           
  1091                           ;mcc.c: 129: OSCCON = 0x60;
  1092                           
  1093                           ; BSR set to: 15
  1094                           ;incstack = 0
  1095  000BEE  0E60               	movlw	96
  1096  000BF0  6ED3               	movwf	4051,c	;volatile
  1097                           
  1098                           ;mcc.c: 131: OSCCON2 = 0x00;
  1099  000BF2  0E00               	movlw	0
  1100  000BF4  6ED2               	movwf	4050,c	;volatile
  1101                           
  1102                           ;mcc.c: 133: OSCTUNE = 0x40;
  1103  000BF6  0E40               	movlw	64
  1104  000BF8  6E9B               	movwf	3995,c	;volatile
  1105                           
  1106                           ;mcc.c: 135: REFOCON = 0x00;
  1107  000BFA  0E00               	movlw	0
  1108  000BFC  6E9A               	movwf	3994,c	;volatile
  1109  000BFE  0012               	return		;funcret
  1110  000C00                     __end_of_OSCILLATOR_Initialize:
  1111                           	opt stack 0
  1112                           tblptru	equ	0xFF8
  1113                           postinc0	equ	0xFEE
  1114                           wreg	equ	0xFE8
  1115                           status	equ	0xFD8
  1116                           
  1117 ;; *************** function _INTERRUPT_Initialize *****************
  1118 ;; Defined at:
  1119 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;		None
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;		None
  1124 ;; Return value:  Size  Location     Type
  1125 ;;                  1    wreg      void 
  1126 ;; Registers used:
  1127 ;;		None
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1137 ;;Total ram usage:        0 bytes
  1138 ;; Hardware stack levels used:    1
  1139 ;; Hardware stack levels required when called:    4
  1140 ;; This function calls:
  1141 ;;		Nothing
  1142 ;; This function is called by:
  1143 ;;		_SYSTEM_Initialize
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           	psect	text7
  1148  000C32                     __ptext7:
  1149                           	opt stack 0
  1150  000C32                     _INTERRUPT_Initialize:
  1151                           	opt stack 25
  1152                           
  1153                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1154                           
  1155                           ;incstack = 0
  1156  000C32  9ED0               	bcf	4048,7,c	;volatile
  1157  000C34  0012               	return		;funcret
  1158  000C36                     __end_of_INTERRUPT_Initialize:
  1159                           	opt stack 0
  1160                           tblptru	equ	0xFF8
  1161                           postinc0	equ	0xFEE
  1162                           wreg	equ	0xFE8
  1163                           status	equ	0xFD8
  1164                           
  1165 ;; *************** function _I2C_Initialize *****************
  1166 ;; Defined at:
  1167 ;;		line 198 in file "mcc_generated_files/i2c.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;		None
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;		None
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  1    wreg      void 
  1174 ;; Registers used:
  1175 ;;		wreg, status,2, status,0
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1185 ;;Total ram usage:        0 bytes
  1186 ;; Hardware stack levels used:    1
  1187 ;; Hardware stack levels required when called:    4
  1188 ;; This function calls:
  1189 ;;		Nothing
  1190 ;; This function is called by:
  1191 ;;		_SYSTEM_Initialize
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           	psect	text8
  1196  000A9E                     __ptext8:
  1197                           	opt stack 0
  1198  000A9E                     _I2C_Initialize:
  1199                           	opt stack 25
  1200                           
  1201                           ;i2c.c: 200: i2c_object.pTrHead = i2c_tr_queue;
  1202                           
  1203                           ;incstack = 0
  1204  000A9E  0E83               	movlw	low _i2c_tr_queue
  1205  000AA0  6E2B               	movwf	_i2c_object+2,c
  1206  000AA2  0E00               	movlw	high _i2c_tr_queue
  1207  000AA4  6E2C               	movwf	_i2c_object+3,c
  1208                           
  1209                           ;i2c.c: 201: i2c_object.pTrTail = i2c_tr_queue;
  1210  000AA6  0E83               	movlw	low _i2c_tr_queue
  1211  000AA8  6E29               	movwf	_i2c_object,c
  1212  000AAA  0E00               	movlw	high _i2c_tr_queue
  1213  000AAC  6E2A               	movwf	_i2c_object+1,c
  1214                           
  1215                           ;i2c.c: 202: i2c_object.trStatus.s.empty = 1;
  1216  000AAE  822D               	bsf	_i2c_object+4,1,c
  1217                           
  1218                           ;i2c.c: 203: i2c_object.trStatus.s.full = 0;
  1219  000AB0  902D               	bcf	_i2c_object+4,0,c
  1220                           
  1221                           ;i2c.c: 205: i2c_object.i2cErrors = 0;
  1222  000AB2  0E00               	movlw	0
  1223  000AB4  6E2F               	movwf	_i2c_object+6,c
  1224                           
  1225                           ;i2c.c: 208: SSPSTAT = 0x00;
  1226  000AB6  0E00               	movlw	0
  1227  000AB8  6EC7               	movwf	4039,c	;volatile
  1228                           
  1229                           ;i2c.c: 210: SSPCON1 = 0x28;
  1230  000ABA  0E28               	movlw	40
  1231  000ABC  6EC6               	movwf	4038,c	;volatile
  1232                           
  1233                           ;i2c.c: 212: SSPADD = 0x03;
  1234  000ABE  0E03               	movlw	3
  1235  000AC0  6EC8               	movwf	4040,c	;volatile
  1236                           
  1237                           ;i2c.c: 216: PIR1bits.SSPIF = 0;
  1238  000AC2  969E               	bcf	3998,3,c	;volatile
  1239                           
  1240                           ;i2c.c: 218: PIE1bits.SSPIE = 1;
  1241  000AC4  869D               	bsf	3997,3,c	;volatile
  1242  000AC6  0012               	return		;funcret
  1243  000AC8                     __end_of_I2C_Initialize:
  1244                           	opt stack 0
  1245                           tblptru	equ	0xFF8
  1246                           postinc0	equ	0xFEE
  1247                           wreg	equ	0xFE8
  1248                           status	equ	0xFD8
  1249                           
  1250 ;; *************** function _EXT_INT_Initialize *****************
  1251 ;; Defined at:
  1252 ;;		line 167 in file "mcc_generated_files/ext_int.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;		None
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;		None
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  1    wreg      void 
  1259 ;; Registers used:
  1260 ;;		wreg, status,2, status,0, cstack
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1270 ;;Total ram usage:        0 bytes
  1271 ;; Hardware stack levels used:    1
  1272 ;; Hardware stack levels required when called:    5
  1273 ;; This function calls:
  1274 ;;		_INT0_SetInterruptHandler
  1275 ;;		_INT1_SetInterruptHandler
  1276 ;; This function is called by:
  1277 ;;		_SYSTEM_Initialize
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281                           	psect	text9
  1282  000B14                     __ptext9:
  1283                           	opt stack 0
  1284  000B14                     _EXT_INT_Initialize:
  1285                           	opt stack 24
  1286                           
  1287                           ;ext_int.c: 176: (INTCON3bits.INT1IF = 0);
  1288                           
  1289                           ;incstack = 0
  1290  000B14  90F0               	bcf	intcon3,0,c	;volatile
  1291                           
  1292                           ;ext_int.c: 177: (INTCON2bits.INTEDG1 = 1);
  1293  000B16  8AF1               	bsf	intcon2,5,c	;volatile
  1294                           
  1295                           ;ext_int.c: 179: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  1296  000B18  0E3C               	movlw	low _INT1_DefaultInterruptHandler
  1297  000B1A  6E15               	movwf	INT1_SetInterruptHandler@InterruptHandler,c
  1298  000B1C  0E0C               	movlw	high _INT1_DefaultInterruptHandler
  1299  000B1E  6E16               	movwf	INT1_SetInterruptHandler@InterruptHandler+1,c
  1300  000B20  EC05  F006         	call	_INT1_SetInterruptHandler	;wreg free
  1301                           
  1302                           ;ext_int.c: 180: (INTCON3bits.INT1IE = 1);
  1303  000B24  86F0               	bsf	intcon3,3,c	;volatile
  1304                           
  1305                           ;ext_int.c: 189: (INTCONbits.INT0IF = 0);
  1306  000B26  92F2               	bcf	intcon,1,c	;volatile
  1307                           
  1308                           ;ext_int.c: 190: (INTCON2bits.INTEDG0 = 1);
  1309  000B28  8CF1               	bsf	intcon2,6,c	;volatile
  1310                           
  1311                           ;ext_int.c: 192: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
  1312  000B2A  0E3E               	movlw	low _INT0_DefaultInterruptHandler
  1313  000B2C  6E15               	movwf	INT0_SetInterruptHandler@InterruptHandler,c
  1314  000B2E  0E0C               	movlw	high _INT0_DefaultInterruptHandler
  1315  000B30  6E16               	movwf	INT0_SetInterruptHandler@InterruptHandler+1,c
  1316  000B32  EC0A  F006         	call	_INT0_SetInterruptHandler	;wreg free
  1317                           
  1318                           ;ext_int.c: 193: (INTCONbits.INT0IE = 1);
  1319  000B36  88F2               	bsf	intcon,4,c	;volatile
  1320  000B38  0012               	return		;funcret
  1321  000B3A                     __end_of_EXT_INT_Initialize:
  1322                           	opt stack 0
  1323                           tblptru	equ	0xFF8
  1324                           intcon	equ	0xFF2
  1325                           intcon2	equ	0xFF1
  1326                           intcon3	equ	0xFF0
  1327                           postinc0	equ	0xFEE
  1328                           wreg	equ	0xFE8
  1329                           status	equ	0xFD8
  1330                           
  1331 ;; *************** function _INT1_SetInterruptHandler *****************
  1332 ;; Defined at:
  1333 ;;		line 101 in file "mcc_generated_files/ext_int.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;  InterruptHan    2   20[COMRAM] PTR void 
  1336 ;;		 -> INT1_DefaultInterruptHandler(1), 
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;		None
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  1    wreg      void 
  1341 ;; Registers used:
  1342 ;;		wreg, status,2, status,0
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1348 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1351 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1352 ;;Total ram usage:        2 bytes
  1353 ;; Hardware stack levels used:    1
  1354 ;; Hardware stack levels required when called:    4
  1355 ;; This function calls:
  1356 ;;		Nothing
  1357 ;; This function is called by:
  1358 ;;		_EXT_INT_Initialize
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           	psect	text10
  1363  000C0A                     __ptext10:
  1364                           	opt stack 0
  1365  000C0A                     _INT1_SetInterruptHandler:
  1366                           	opt stack 24
  1367                           
  1368                           ;ext_int.c: 102: INT1_InterruptHandler = InterruptHandler;
  1369                           
  1370                           ;incstack = 0
  1371  000C0A  C015  F08B         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  1372  000C0E  C016  F08C         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  1373  000C12  0012               	return		;funcret
  1374  000C14                     __end_of_INT1_SetInterruptHandler:
  1375                           	opt stack 0
  1376                           tblptru	equ	0xFF8
  1377                           intcon	equ	0xFF2
  1378                           intcon2	equ	0xFF1
  1379                           intcon3	equ	0xFF0
  1380                           postinc0	equ	0xFEE
  1381                           wreg	equ	0xFE8
  1382                           status	equ	0xFD8
  1383                           
  1384 ;; *************** function _INT0_SetInterruptHandler *****************
  1385 ;; Defined at:
  1386 ;;		line 142 in file "mcc_generated_files/ext_int.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;  InterruptHan    2   20[COMRAM] PTR void 
  1389 ;;		 -> INT0_DefaultInterruptHandler(1), 
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;		None
  1392 ;; Return value:  Size  Location     Type
  1393 ;;                  1    wreg      void 
  1394 ;; Registers used:
  1395 ;;		wreg, status,2, status,0
  1396 ;; Tracked objects:
  1397 ;;		On entry : 0/0
  1398 ;;		On exit  : 0/0
  1399 ;;		Unchanged: 0/0
  1400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1401 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1404 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1405 ;;Total ram usage:        2 bytes
  1406 ;; Hardware stack levels used:    1
  1407 ;; Hardware stack levels required when called:    4
  1408 ;; This function calls:
  1409 ;;		Nothing
  1410 ;; This function is called by:
  1411 ;;		_EXT_INT_Initialize
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415                           	psect	text11
  1416  000C14                     __ptext11:
  1417                           	opt stack 0
  1418  000C14                     _INT0_SetInterruptHandler:
  1419                           	opt stack 24
  1420                           
  1421                           ;ext_int.c: 143: INT0_InterruptHandler = InterruptHandler;
  1422                           
  1423                           ;incstack = 0
  1424  000C14  C015  F089         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  1425  000C18  C016  F08A         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  1426  000C1C  0012               	return		;funcret
  1427  000C1E                     __end_of_INT0_SetInterruptHandler:
  1428                           	opt stack 0
  1429                           tblptru	equ	0xFF8
  1430                           intcon	equ	0xFF2
  1431                           intcon2	equ	0xFF1
  1432                           intcon3	equ	0xFF0
  1433                           postinc0	equ	0xFEE
  1434                           wreg	equ	0xFE8
  1435                           status	equ	0xFD8
  1436                           
  1437 ;; *************** function _ECAN_Initialize *****************
  1438 ;; Defined at:
  1439 ;;		line 63 in file "mcc_generated_files/ecan.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;		None
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;		None
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  1    wreg      void 
  1446 ;; Registers used:
  1447 ;;		wreg, status,2, status,0
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1455 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1456 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1457 ;;Total ram usage:        1 bytes
  1458 ;; Hardware stack levels used:    1
  1459 ;; Hardware stack levels required when called:    4
  1460 ;; This function calls:
  1461 ;;		Nothing
  1462 ;; This function is called by:
  1463 ;;		_SYSTEM_Initialize
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           	psect	text12
  1468  0007E0                     __ptext12:
  1469                           	opt stack 0
  1470  0007E0                     _ECAN_Initialize:
  1471                           	opt stack 25
  1472                           
  1473                           ;ecan.c: 65: CANCON = 0x80;
  1474                           
  1475                           ;incstack = 0
  1476  0007E0  0E80               	movlw	128
  1477  0007E2  6E6F               	movwf	3951,c	;volatile
  1478  0007E4                     l2973:
  1479  0007E4  506E               	movf	3950,w,c	;volatile
  1480  0007E6  0BE0               	andlw	224
  1481  0007E8  0A80               	xorlw	128
  1482  0007EA  A4D8               	btfss	status,2,c
  1483  0007EC  D7FB               	goto	l2973
  1484                           
  1485                           ;ecan.c: 71: ECANCON = 0x00;
  1486  0007EE  0E00               	movlw	0
  1487  0007F0  6E72               	movwf	3954,c	;volatile
  1488                           
  1489                           ;ecan.c: 88: RXM0EIDH = 0x00;
  1490  0007F2  0E00               	movlw	0
  1491  0007F4  010E               	movlb	14	; () banked
  1492  0007F6  6FFA               	movwf	250,b	;volatile
  1493                           
  1494                           ;ecan.c: 89: RXM0EIDL = 0x00;
  1495  0007F8  0E00               	movlw	0
  1496  0007FA  010E               	movlb	14	; () banked
  1497  0007FC  6FFB               	movwf	251,b	;volatile
  1498                           
  1499                           ;ecan.c: 90: RXM0SIDH = 0x00;
  1500  0007FE  0E00               	movlw	0
  1501  000800  010E               	movlb	14	; () banked
  1502  000802  6FF8               	movwf	248,b	;volatile
  1503                           
  1504                           ;ecan.c: 91: RXM0SIDL = 0x00;
  1505  000804  0E00               	movlw	0
  1506  000806  010E               	movlb	14	; () banked
  1507  000808  6FF9               	movwf	249,b	;volatile
  1508                           
  1509                           ; BSR set to: 14
  1510                           ;ecan.c: 93: RXM1EIDH = 0xFF;
  1511  00080A  010E               	movlb	14	; () banked
  1512  00080C  69FE               	setf	254,b	;volatile
  1513                           
  1514                           ; BSR set to: 14
  1515                           ;ecan.c: 94: RXM1EIDL = 0xFF;
  1516  00080E  010E               	movlb	14	; () banked
  1517  000810  69FF               	setf	255,b	;volatile
  1518                           
  1519                           ; BSR set to: 14
  1520                           ;ecan.c: 95: RXM1SIDH = 0xFF;
  1521  000812  010E               	movlb	14	; () banked
  1522  000814  69FC               	setf	252,b	;volatile
  1523                           
  1524                           ; BSR set to: 14
  1525                           ;ecan.c: 96: RXM1SIDL = 0xFF;
  1526  000816  010E               	movlb	14	; () banked
  1527  000818  69FD               	setf	253,b	;volatile
  1528                           
  1529                           ;ecan.c: 102: RXF0EIDH = 0x00;
  1530  00081A  0E00               	movlw	0
  1531  00081C  010E               	movlb	14	; () banked
  1532  00081E  6FE2               	movwf	226,b	;volatile
  1533                           
  1534                           ;ecan.c: 103: RXF0EIDL = 0x00;
  1535  000820  0E00               	movlw	0
  1536  000822  010E               	movlb	14	; () banked
  1537  000824  6FE3               	movwf	227,b	;volatile
  1538                           
  1539                           ;ecan.c: 104: RXF0SIDH = 0x88;
  1540  000826  0E88               	movlw	136
  1541  000828  010E               	movlb	14	; () banked
  1542  00082A  6FE0               	movwf	224,b	;volatile
  1543                           
  1544                           ;ecan.c: 105: RXF0SIDL = 0x80;
  1545  00082C  0E80               	movlw	128
  1546  00082E  010E               	movlb	14	; () banked
  1547  000830  6FE1               	movwf	225,b	;volatile
  1548                           
  1549                           ;ecan.c: 107: RXF1EIDH = 0x00;
  1550  000832  0E00               	movlw	0
  1551  000834  010E               	movlb	14	; () banked
  1552  000836  6FE6               	movwf	230,b	;volatile
  1553                           
  1554                           ;ecan.c: 108: RXF1EIDL = 0x00;
  1555  000838  0E00               	movlw	0
  1556  00083A  010E               	movlb	14	; () banked
  1557  00083C  6FE7               	movwf	231,b	;volatile
  1558                           
  1559                           ;ecan.c: 109: RXF1SIDH = 0xCC;
  1560  00083E  0ECC               	movlw	204
  1561  000840  010E               	movlb	14	; () banked
  1562  000842  6FE4               	movwf	228,b	;volatile
  1563                           
  1564                           ;ecan.c: 110: RXF1SIDL = 0xC0;
  1565  000844  0EC0               	movlw	192
  1566  000846  010E               	movlb	14	; () banked
  1567  000848  6FE5               	movwf	229,b	;volatile
  1568                           
  1569                           ;ecan.c: 112: RXF2EIDH = 0x00;
  1570  00084A  0E00               	movlw	0
  1571  00084C  010E               	movlb	14	; () banked
  1572  00084E  6FEA               	movwf	234,b	;volatile
  1573                           
  1574                           ;ecan.c: 113: RXF2EIDL = 0x00;
  1575  000850  0E00               	movlw	0
  1576  000852  010E               	movlb	14	; () banked
  1577  000854  6FEB               	movwf	235,b	;volatile
  1578                           
  1579                           ;ecan.c: 114: RXF2SIDH = 0x00;
  1580  000856  0E00               	movlw	0
  1581  000858  010E               	movlb	14	; () banked
  1582  00085A  6FE8               	movwf	232,b	;volatile
  1583                           
  1584                           ;ecan.c: 115: RXF2SIDL = 0x00;
  1585  00085C  0E00               	movlw	0
  1586  00085E  010E               	movlb	14	; () banked
  1587  000860  6FE9               	movwf	233,b	;volatile
  1588                           
  1589                           ;ecan.c: 117: RXF3EIDH = 0x00;
  1590  000862  0E00               	movlw	0
  1591  000864  010E               	movlb	14	; () banked
  1592  000866  6FEE               	movwf	238,b	;volatile
  1593                           
  1594                           ;ecan.c: 118: RXF3EIDL = 0x00;
  1595  000868  0E00               	movlw	0
  1596  00086A  010E               	movlb	14	; () banked
  1597  00086C  6FEF               	movwf	239,b	;volatile
  1598                           
  1599                           ;ecan.c: 119: RXF3SIDH = 0x00;
  1600  00086E  0E00               	movlw	0
  1601  000870  010E               	movlb	14	; () banked
  1602  000872  6FEC               	movwf	236,b	;volatile
  1603                           
  1604                           ;ecan.c: 120: RXF3SIDL = 0x00;
  1605  000874  0E00               	movlw	0
  1606  000876  010E               	movlb	14	; () banked
  1607  000878  6FED               	movwf	237,b	;volatile
  1608                           
  1609                           ;ecan.c: 122: RXF4EIDH = 0x00;
  1610  00087A  0E00               	movlw	0
  1611  00087C  010E               	movlb	14	; () banked
  1612  00087E  6FF2               	movwf	242,b	;volatile
  1613                           
  1614                           ;ecan.c: 123: RXF4EIDL = 0x00;
  1615  000880  0E00               	movlw	0
  1616  000882  010E               	movlb	14	; () banked
  1617  000884  6FF3               	movwf	243,b	;volatile
  1618                           
  1619                           ;ecan.c: 124: RXF4SIDH = 0x00;
  1620  000886  0E00               	movlw	0
  1621  000888  010E               	movlb	14	; () banked
  1622  00088A  6FF0               	movwf	240,b	;volatile
  1623                           
  1624                           ;ecan.c: 125: RXF4SIDL = 0x00;
  1625  00088C  0E00               	movlw	0
  1626  00088E  010E               	movlb	14	; () banked
  1627  000890  6FF1               	movwf	241,b	;volatile
  1628                           
  1629                           ;ecan.c: 127: RXF5EIDH = 0x00;
  1630  000892  0E00               	movlw	0
  1631  000894  010E               	movlb	14	; () banked
  1632  000896  6FF6               	movwf	246,b	;volatile
  1633                           
  1634                           ;ecan.c: 128: RXF5EIDL = 0x00;
  1635  000898  0E00               	movlw	0
  1636  00089A  010E               	movlb	14	; () banked
  1637  00089C  6FF7               	movwf	247,b	;volatile
  1638                           
  1639                           ;ecan.c: 129: RXF5SIDH = 0x00;
  1640  00089E  0E00               	movlw	0
  1641  0008A0  010E               	movlb	14	; () banked
  1642  0008A2  6FF4               	movwf	244,b	;volatile
  1643                           
  1644                           ;ecan.c: 130: RXF5SIDL = 0x00;
  1645  0008A4  0E00               	movlw	0
  1646  0008A6  010E               	movlb	14	; () banked
  1647  0008A8  6FF5               	movwf	245,b	;volatile
  1648                           
  1649                           ;ecan.c: 145: BRGCON1 = 0x03;
  1650  0008AA  0E03               	movlw	3
  1651  0008AC  010E               	movlb	14	; () banked
  1652  0008AE  6F43               	movwf	67,b	;volatile
  1653                           
  1654                           ;ecan.c: 146: BRGCON2 = 0x98;
  1655  0008B0  0E98               	movlw	152
  1656  0008B2  010E               	movlb	14	; () banked
  1657  0008B4  6F44               	movwf	68,b	;volatile
  1658                           
  1659                           ;ecan.c: 147: BRGCON3 = 0x01;
  1660  0008B6  0E01               	movlw	1
  1661  0008B8  010E               	movlb	14	; () banked
  1662  0008BA  6F45               	movwf	69,b	;volatile
  1663                           
  1664                           ;ecan.c: 149: CANCON = 0x00;
  1665  0008BC  0E00               	movlw	0
  1666  0008BE  6E6F               	movwf	3951,c	;volatile
  1667  0008C0                     l2985:
  1668  0008C0  CF6E F015          	movff	3950,??_ECAN_Initialize	;volatile
  1669  0008C4  0EE0               	movlw	224
  1670  0008C6  1615               	andwf	??_ECAN_Initialize,f,c
  1671  0008C8  B4D8               	btfsc	status,2,c
  1672  0008CA  0012               	return	
  1673  0008CC  D7F9               	goto	l2985
  1674  0008CE                     __end_of_ECAN_Initialize:
  1675                           	opt stack 0
  1676                           tblptru	equ	0xFF8
  1677                           intcon	equ	0xFF2
  1678                           intcon2	equ	0xFF1
  1679                           intcon3	equ	0xFF0
  1680                           postinc0	equ	0xFEE
  1681                           wreg	equ	0xFE8
  1682                           status	equ	0xFD8
  1683                           
  1684 ;; *************** function _CCP2_Initialize *****************
  1685 ;; Defined at:
  1686 ;;		line 57 in file "mcc_generated_files/ccp2.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;		None
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;		None
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  1    wreg      void 
  1693 ;; Registers used:
  1694 ;;		wreg, status,2
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1704 ;;Total ram usage:        0 bytes
  1705 ;; Hardware stack levels used:    1
  1706 ;; Hardware stack levels required when called:    4
  1707 ;; This function calls:
  1708 ;;		Nothing
  1709 ;; This function is called by:
  1710 ;;		_SYSTEM_Initialize
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           	psect	text13
  1715  000BA6                     __ptext13:
  1716                           	opt stack 0
  1717  000BA6                     _CCP2_Initialize:
  1718                           	opt stack 25
  1719                           
  1720                           ;ccp2.c: 62: CCP2CON = 0x07;
  1721                           
  1722                           ;incstack = 0
  1723  000BA6  0E07               	movlw	7
  1724  000BA8  010F               	movlb	15	; () banked
  1725  000BAA  6F50               	movwf	80,b	;volatile
  1726                           
  1727                           ;ccp2.c: 65: CCPR2L = 0x00;
  1728  000BAC  0E00               	movlw	0
  1729  000BAE  010F               	movlb	15	; () banked
  1730  000BB0  6F51               	movwf	81,b	;volatile
  1731                           
  1732                           ;ccp2.c: 68: CCPR2H = 0x00;
  1733  000BB2  0E00               	movlw	0
  1734  000BB4  010F               	movlb	15	; () banked
  1735  000BB6  6F52               	movwf	82,b	;volatile
  1736                           
  1737                           ; BSR set to: 15
  1738                           ;ccp2.c: 71: CCPTMRSbits.C2TSEL = 0x0;
  1739  000BB8  9299               	bcf	3993,1,c	;volatile
  1740                           
  1741                           ; BSR set to: 15
  1742                           ;ccp2.c: 74: PIR3bits.CCP2IF = 0;
  1743  000BBA  94A4               	bcf	4004,2,c	;volatile
  1744                           
  1745                           ; BSR set to: 15
  1746                           ;ccp2.c: 77: PIE3bits.CCP2IE = 1;
  1747  000BBC  84A3               	bsf	4003,2,c	;volatile
  1748                           
  1749                           ; BSR set to: 15
  1750  000BBE  0012               	return		;funcret
  1751  000BC0                     __end_of_CCP2_Initialize:
  1752                           	opt stack 0
  1753                           tblptru	equ	0xFF8
  1754                           intcon	equ	0xFF2
  1755                           intcon2	equ	0xFF1
  1756                           intcon3	equ	0xFF0
  1757                           postinc0	equ	0xFEE
  1758                           wreg	equ	0xFE8
  1759                           status	equ	0xFD8
  1760                           
  1761 ;; *************** function _ADC_Initialize *****************
  1762 ;; Defined at:
  1763 ;;		line 58 in file "mcc_generated_files/adc.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;		None
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;		None
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  1    wreg      void 
  1770 ;; Registers used:
  1771 ;;		wreg, status,2
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1781 ;;Total ram usage:        0 bytes
  1782 ;; Hardware stack levels used:    1
  1783 ;; Hardware stack levels required when called:    4
  1784 ;; This function calls:
  1785 ;;		Nothing
  1786 ;; This function is called by:
  1787 ;;		_SYSTEM_Initialize
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           	psect	text14
  1792  000BD8                     __ptext14:
  1793                           	opt stack 0
  1794  000BD8                     _ADC_Initialize:
  1795                           	opt stack 25
  1796                           
  1797                           ;adc.c: 63: ADCON0 = 0x01;
  1798                           
  1799                           ; BSR set to: 15
  1800                           ;incstack = 0
  1801  000BD8  0E01               	movlw	1
  1802  000BDA  6EC2               	movwf	4034,c	;volatile
  1803                           
  1804                           ;adc.c: 66: ADCON1 = 0x98;
  1805  000BDC  0E98               	movlw	152
  1806  000BDE  6EC1               	movwf	4033,c	;volatile
  1807                           
  1808                           ;adc.c: 69: ADCON2 = 0x8E;
  1809  000BE0  0E8E               	movlw	142
  1810  000BE2  6EC0               	movwf	4032,c	;volatile
  1811                           
  1812                           ;adc.c: 72: ADRESH = 0x00;
  1813  000BE4  0E00               	movlw	0
  1814  000BE6  6EC4               	movwf	4036,c	;volatile
  1815                           
  1816                           ;adc.c: 75: ADRESL = 0x00;
  1817  000BE8  0E00               	movlw	0
  1818  000BEA  6EC3               	movwf	4035,c	;volatile
  1819  000BEC  0012               	return		;funcret
  1820  000BEE                     __end_of_ADC_Initialize:
  1821                           	opt stack 0
  1822                           tblptru	equ	0xFF8
  1823                           intcon	equ	0xFF2
  1824                           intcon2	equ	0xFF1
  1825                           intcon3	equ	0xFF0
  1826                           postinc0	equ	0xFEE
  1827                           wreg	equ	0xFE8
  1828                           status	equ	0xFD8
  1829                           
  1830 ;; *************** function _INT1_GetInterruptState *****************
  1831 ;; Defined at:
  1832 ;;		line 154 in file "mcc_generated_files/ext_int.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;		None
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;		None
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  1    wreg      unsigned char 
  1839 ;; Registers used:
  1840 ;;		wreg, status,2
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1850 ;;Total ram usage:        0 bytes
  1851 ;; Hardware stack levels used:    1
  1852 ;; Hardware stack levels required when called:    4
  1853 ;; This function calls:
  1854 ;;		Nothing
  1855 ;; This function is called by:
  1856 ;;		_main
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           	psect	text15
  1861  000C36                     __ptext15:
  1862                           	opt stack 0
  1863  000C36                     _INT1_GetInterruptState:
  1864                           	opt stack 26
  1865                           
  1866                           ;ext_int.c: 155: return ext_int1_cur_state;
  1867                           
  1868                           ;incstack = 0
  1869  000C36  503D               	movf	_ext_int1_cur_state,w,c	;volatile
  1870  000C38  0012               	return	
  1871  000C3A                     __end_of_INT1_GetInterruptState:
  1872                           	opt stack 0
  1873                           tblptru	equ	0xFF8
  1874                           intcon	equ	0xFF2
  1875                           intcon2	equ	0xFF1
  1876                           intcon3	equ	0xFF0
  1877                           postinc0	equ	0xFEE
  1878                           wreg	equ	0xFE8
  1879                           status	equ	0xFD8
  1880                           
  1881 ;; *************** function _CAN_transmit *****************
  1882 ;; Defined at:
  1883 ;;		line 167 in file "mcc_generated_files/ecan.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;  tempCanMsg      2   38[COMRAM] PTR struct .
  1886 ;;		 -> main@test(14), 
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;  tempSIDL        1    4[BANK0 ] unsigned char 
  1889 ;;  tempSIDH        1    3[BANK0 ] unsigned char 
  1890 ;;  tempEIDL        1    2[BANK0 ] unsigned char 
  1891 ;;  tempEIDH        1    1[BANK0 ] unsigned char 
  1892 ;;  returnValue     1    0[BANK0 ] unsigned char 
  1893 ;; Return value:  Size  Location     Type
  1894 ;;                  1    wreg      unsigned char 
  1895 ;; Registers used:
  1896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1902 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1903 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1905 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1906 ;;Total ram usage:        7 bytes
  1907 ;; Hardware stack levels used:    1
  1908 ;; Hardware stack levels required when called:    5
  1909 ;; This function calls:
  1910 ;;		_convertCANid2Reg
  1911 ;; This function is called by:
  1912 ;;		_main
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           	psect	text16
  1917  0000D6                     __ptext16:
  1918                           	opt stack 0
  1919  0000D6                     _CAN_transmit:
  1920                           	opt stack 25
  1921                           
  1922                           ;ecan.c: 168: unsigned char tempEIDH = 0;
  1923                           
  1924                           ;incstack = 0
  1925  0000D6  0E00               	movlw	0
  1926  0000D8  0100               	movlb	0	; () banked
  1927  0000DA  6F61               	movwf	CAN_transmit@tempEIDH& (0+255),b
  1928                           
  1929                           ;ecan.c: 169: unsigned char tempEIDL = 0;
  1930  0000DC  0E00               	movlw	0
  1931  0000DE  0100               	movlb	0	; () banked
  1932  0000E0  6F62               	movwf	CAN_transmit@tempEIDL& (0+255),b
  1933                           
  1934                           ;ecan.c: 170: unsigned char tempSIDH = 0;
  1935  0000E2  0E00               	movlw	0
  1936  0000E4  0100               	movlb	0	; () banked
  1937  0000E6  6F63               	movwf	CAN_transmit@tempSIDH& (0+255),b
  1938                           
  1939                           ;ecan.c: 171: unsigned char tempSIDL = 0;
  1940  0000E8  0E00               	movlw	0
  1941  0000EA  0100               	movlb	0	; () banked
  1942  0000EC  6F64               	movwf	CAN_transmit@tempSIDL& (0+255),b
  1943                           
  1944                           ;ecan.c: 173: unsigned char returnValue = 0;
  1945  0000EE  0E00               	movlw	0
  1946  0000F0  0100               	movlb	0	; () banked
  1947  0000F2  6F60               	movwf	CAN_transmit@returnValue& (0+255),b
  1948                           
  1949                           ; BSR set to: 0
  1950                           ;ecan.c: 175: if (TXB0CONbits.TXREQ != 1) {
  1951  0000F4  010F               	movlb	15	; () banked
  1952  0000F6  B720               	btfsc	32,3,b	;volatile
  1953  0000F8  D085               	goto	l286
  1954                           
  1955                           ; BSR set to: 15
  1956                           ;ecan.c: 177: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  1957  0000FA  EE20 F001          	lfsr	2,1
  1958  0000FE  5027               	movf	CAN_transmit@tempCanMsg,w,c
  1959  000100  26D9               	addwf	fsr2l,f,c
  1960  000102  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  1961  000104  22DA               	addwfc	fsr2h,f,c
  1962  000106  CFDE F015          	movff	postinc2,convertCANid2Reg@tempPassedInID
  1963  00010A  CFDE F016          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  1964  00010E  CFDE F017          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  1965  000112  CFDE F018          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  1966  000116  C027  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  1967  00011A  C028  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  1968  00011E  50DF               	movf	indf2,w,c
  1969  000120  6E19               	movwf	convertCANid2Reg@canIdType,c
  1970  000122  0E61               	movlw	low CAN_transmit@tempEIDH
  1971  000124  6E1A               	movwf	convertCANid2Reg@passedInEIDH,c
  1972  000126  0E00               	movlw	high CAN_transmit@tempEIDH
  1973  000128  6E1B               	movwf	convertCANid2Reg@passedInEIDH+1,c
  1974  00012A  0E62               	movlw	low CAN_transmit@tempEIDL
  1975  00012C  6E1C               	movwf	convertCANid2Reg@passedInEIDL,c
  1976  00012E  0E00               	movlw	high CAN_transmit@tempEIDL
  1977  000130  6E1D               	movwf	convertCANid2Reg@passedInEIDL+1,c
  1978  000132  0E63               	movlw	low CAN_transmit@tempSIDH
  1979  000134  6E1E               	movwf	convertCANid2Reg@passedInSIDH,c
  1980  000136  0E00               	movlw	high CAN_transmit@tempSIDH
  1981  000138  6E1F               	movwf	convertCANid2Reg@passedInSIDH+1,c
  1982  00013A  0E64               	movlw	low CAN_transmit@tempSIDL
  1983  00013C  6E20               	movwf	convertCANid2Reg@passedInSIDL,c
  1984  00013E  0E00               	movlw	high CAN_transmit@tempSIDL
  1985  000140  6E21               	movwf	convertCANid2Reg@passedInSIDL+1,c
  1986  000142  EC21  F003         	call	_convertCANid2Reg	;wreg free
  1987                           
  1988                           ;ecan.c: 179: TXB0EIDH = tempEIDH;
  1989  000146  C061  FF23         	movff	CAN_transmit@tempEIDH,3875	;volatile
  1990                           
  1991                           ;ecan.c: 180: TXB0EIDL = tempEIDL;
  1992  00014A  C062  FF24         	movff	CAN_transmit@tempEIDL,3876	;volatile
  1993                           
  1994                           ;ecan.c: 181: TXB0SIDH = tempSIDH;
  1995  00014E  C063  FF21         	movff	CAN_transmit@tempSIDH,3873	;volatile
  1996                           
  1997                           ;ecan.c: 182: TXB0SIDL = tempSIDL;
  1998  000152  C064  FF22         	movff	CAN_transmit@tempSIDL,3874	;volatile
  1999                           
  2000                           ;ecan.c: 183: TXB0DLC = tempCanMsg->frame.dlc;
  2001  000156  EE20 F005          	lfsr	2,5
  2002  00015A  5027               	movf	CAN_transmit@tempCanMsg,w,c
  2003  00015C  26D9               	addwf	fsr2l,f,c
  2004  00015E  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  2005  000160  22DA               	addwfc	fsr2h,f,c
  2006  000162  50DF               	movf	indf2,w,c
  2007  000164  010F               	movlb	15	; () banked
  2008  000166  6F25               	movwf	37,b	;volatile
  2009                           
  2010                           ; BSR set to: 15
  2011                           ;ecan.c: 184: TXB0D0 = tempCanMsg->frame.data0;
  2012  000168  EE20 F006          	lfsr	2,6
  2013  00016C  5027               	movf	CAN_transmit@tempCanMsg,w,c
  2014  00016E  26D9               	addwf	fsr2l,f,c
  2015  000170  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  2016  000172  22DA               	addwfc	fsr2h,f,c
  2017  000174  50DF               	movf	indf2,w,c
  2018  000176  010F               	movlb	15	; () banked
  2019  000178  6F26               	movwf	38,b	;volatile
  2020                           
  2021                           ; BSR set to: 15
  2022                           ;ecan.c: 185: TXB0D1 = tempCanMsg->frame.data1;
  2023  00017A  EE20 F007          	lfsr	2,7
  2024  00017E  5027               	movf	CAN_transmit@tempCanMsg,w,c
  2025  000180  26D9               	addwf	fsr2l,f,c
  2026  000182  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  2027  000184  22DA               	addwfc	fsr2h,f,c
  2028  000186  50DF               	movf	indf2,w,c
  2029  000188  010F               	movlb	15	; () banked
  2030  00018A  6F27               	movwf	39,b	;volatile
  2031                           
  2032                           ; BSR set to: 15
  2033                           ;ecan.c: 186: TXB0D2 = tempCanMsg->frame.data2;
  2034  00018C  EE20 F008          	lfsr	2,8
  2035  000190  5027               	movf	CAN_transmit@tempCanMsg,w,c
  2036  000192  26D9               	addwf	fsr2l,f,c
  2037  000194  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  2038  000196  22DA               	addwfc	fsr2h,f,c
  2039  000198  50DF               	movf	indf2,w,c
  2040  00019A  010F               	movlb	15	; () banked
  2041  00019C  6F28               	movwf	40,b	;volatile
  2042                           
  2043                           ; BSR set to: 15
  2044                           ;ecan.c: 187: TXB0D3 = tempCanMsg->frame.data3;
  2045  00019E  EE20 F009          	lfsr	2,9
  2046  0001A2  5027               	movf	CAN_transmit@tempCanMsg,w,c
  2047  0001A4  26D9               	addwf	fsr2l,f,c
  2048  0001A6  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  2049  0001A8  22DA               	addwfc	fsr2h,f,c
  2050  0001AA  50DF               	movf	indf2,w,c
  2051  0001AC  010F               	movlb	15	; () banked
  2052  0001AE  6F29               	movwf	41,b	;volatile
  2053                           
  2054                           ; BSR set to: 15
  2055                           ;ecan.c: 188: TXB0D4 = tempCanMsg->frame.data4;
  2056  0001B0  EE20 F00A          	lfsr	2,10
  2057  0001B4  5027               	movf	CAN_transmit@tempCanMsg,w,c
  2058  0001B6  26D9               	addwf	fsr2l,f,c
  2059  0001B8  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  2060  0001BA  22DA               	addwfc	fsr2h,f,c
  2061  0001BC  50DF               	movf	indf2,w,c
  2062  0001BE  010F               	movlb	15	; () banked
  2063  0001C0  6F2A               	movwf	42,b	;volatile
  2064                           
  2065                           ; BSR set to: 15
  2066                           ;ecan.c: 189: TXB0D5 = tempCanMsg->frame.data5;
  2067  0001C2  EE20 F00B          	lfsr	2,11
  2068  0001C6  5027               	movf	CAN_transmit@tempCanMsg,w,c
  2069  0001C8  26D9               	addwf	fsr2l,f,c
  2070  0001CA  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  2071  0001CC  22DA               	addwfc	fsr2h,f,c
  2072  0001CE  50DF               	movf	indf2,w,c
  2073  0001D0  010F               	movlb	15	; () banked
  2074  0001D2  6F2B               	movwf	43,b	;volatile
  2075                           
  2076                           ; BSR set to: 15
  2077                           ;ecan.c: 190: TXB0D6 = tempCanMsg->frame.data6;
  2078  0001D4  EE20 F00C          	lfsr	2,12
  2079  0001D8  5027               	movf	CAN_transmit@tempCanMsg,w,c
  2080  0001DA  26D9               	addwf	fsr2l,f,c
  2081  0001DC  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  2082  0001DE  22DA               	addwfc	fsr2h,f,c
  2083  0001E0  50DF               	movf	indf2,w,c
  2084  0001E2  010F               	movlb	15	; () banked
  2085  0001E4  6F2C               	movwf	44,b	;volatile
  2086                           
  2087                           ; BSR set to: 15
  2088                           ;ecan.c: 191: TXB0D7 = tempCanMsg->frame.data7;
  2089  0001E6  EE20 F00D          	lfsr	2,13
  2090  0001EA  5027               	movf	CAN_transmit@tempCanMsg,w,c
  2091  0001EC  26D9               	addwf	fsr2l,f,c
  2092  0001EE  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  2093  0001F0  22DA               	addwfc	fsr2h,f,c
  2094  0001F2  50DF               	movf	indf2,w,c
  2095  0001F4  010F               	movlb	15	; () banked
  2096  0001F6  6F2D               	movwf	45,b	;volatile
  2097                           
  2098                           ; BSR set to: 15
  2099                           ;ecan.c: 193: TXB0CONbits.TXREQ = 1;
  2100  0001F8  010F               	movlb	15	; () banked
  2101  0001FA  8720               	bsf	32,3,b	;volatile
  2102                           
  2103                           ; BSR set to: 15
  2104                           ;ecan.c: 194: returnValue = 1;
  2105  0001FC  0E01               	movlw	1
  2106  0001FE  0100               	movlb	0	; () banked
  2107  000200  6F60               	movwf	CAN_transmit@returnValue& (0+255),b
  2108                           
  2109                           ;ecan.c: 195: } else if (TXB1CONbits.TXREQ != 1) {
  2110  000202  0012               	return	
  2111  000204                     l286:
  2112                           
  2113                           ; BSR set to: 15
  2114  000204  010F               	movlb	15	; () banked
  2115  000206  B710               	btfsc	16,3,b	;volatile
  2116  000208  D085               	goto	l288
  2117                           
  2118                           ; BSR set to: 15
  2119                           ;ecan.c: 197: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  2120  00020A  EE20 F001          	lfsr	2,1
  2121  00020E  5027               	movf	CAN_transmit@tempCanMsg,w,c
  2122  000210  26D9               	addwf	fsr2l,f,c
  2123  000212  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  2124  000214  22DA               	addwfc	fsr2h,f,c
  2125  000216  CFDE F015          	movff	postinc2,convertCANid2Reg@tempPassedInID
  2126  00021A  CFDE F016          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  2127  00021E  CFDE F017          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  2128  000222  CFDE F018          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  2129  000226  C027  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  2130  00022A  C028  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  2131  00022E  50DF               	movf	indf2,w,c
  2132  000230  6E19               	movwf	convertCANid2Reg@canIdType,c
  2133  000232  0E61               	movlw	low CAN_transmit@tempEIDH
  2134  000234  6E1A               	movwf	convertCANid2Reg@passedInEIDH,c
  2135  000236  0E00               	movlw	high CAN_transmit@tempEIDH
  2136  000238  6E1B               	movwf	convertCANid2Reg@passedInEIDH+1,c
  2137  00023A  0E62               	movlw	low CAN_transmit@tempEIDL
  2138  00023C  6E1C               	movwf	convertCANid2Reg@passedInEIDL,c
  2139  00023E  0E00               	movlw	high CAN_transmit@tempEIDL
  2140  000240  6E1D               	movwf	convertCANid2Reg@passedInEIDL+1,c
  2141  000242  0E63               	movlw	low CAN_transmit@tempSIDH
  2142  000244  6E1E               	movwf	convertCANid2Reg@passedInSIDH,c
  2143  000246  0E00               	movlw	high CAN_transmit@tempSIDH
  2144  000248  6E1F               	movwf	convertCANid2Reg@passedInSIDH+1,c
  2145  00024A  0E64               	movlw	low CAN_transmit@tempSIDL
  2146  00024C  6E20               	movwf	convertCANid2Reg@passedInSIDL,c
  2147  00024E  0E00               	movlw	high CAN_transmit@tempSIDL
  2148  000250  6E21               	movwf	convertCANid2Reg@passedInSIDL+1,c
  2149  000252  EC21  F003         	call	_convertCANid2Reg	;wreg free
  2150                           
  2151                           ;ecan.c: 199: TXB1EIDH = tempEIDH;
  2152  000256  C061  FF13         	movff	CAN_transmit@tempEIDH,3859	;volatile
  2153                           
  2154                           ;ecan.c: 200: TXB1EIDL = tempEIDL;
  2155  00025A  C062  FF14         	movff	CAN_transmit@tempEIDL,3860	;volatile
  2156                           
  2157                           ;ecan.c: 201: TXB1SIDH = tempSIDH;
  2158  00025E  C063  FF11         	movff	CAN_transmit@tempSIDH,3857	;volatile
  2159                           
  2160                           ;ecan.c: 202: TXB1SIDL = tempSIDL;
  2161  000262  C064  FF12         	movff	CAN_transmit@tempSIDL,3858	;volatile
  2162                           
  2163                           ;ecan.c: 203: TXB1DLC = tempCanMsg->frame.dlc;
  2164  000266  EE20 F005          	lfsr	2,5
  2165  00026A  5027               	movf	CAN_transmit@tempCanMsg,w,c
  2166  00026C  26D9               	addwf	fsr2l,f,c
  2167  00026E  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  2168  000270  22DA               	addwfc	fsr2h,f,c
  2169  000272  50DF               	movf	indf2,w,c
  2170  000274  010F               	movlb	15	; () banked
  2171  000276  6F15               	movwf	21,b	;volatile
  2172                           
  2173                           ; BSR set to: 15
  2174                           ;ecan.c: 204: TXB1D0 = tempCanMsg->frame.data0;
  2175  000278  EE20 F006          	lfsr	2,6
  2176  00027C  5027               	movf	CAN_transmit@tempCanMsg,w,c
  2177  00027E  26D9               	addwf	fsr2l,f,c
  2178  000280  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  2179  000282  22DA               	addwfc	fsr2h,f,c
  2180  000284  50DF               	movf	indf2,w,c
  2181  000286  010F               	movlb	15	; () banked
  2182  000288  6F16               	movwf	22,b	;volatile
  2183                           
  2184                           ; BSR set to: 15
  2185                           ;ecan.c: 205: TXB1D1 = tempCanMsg->frame.data1;
  2186  00028A  EE20 F007          	lfsr	2,7
  2187  00028E  5027               	movf	CAN_transmit@tempCanMsg,w,c
  2188  000290  26D9               	addwf	fsr2l,f,c
  2189  000292  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  2190  000294  22DA               	addwfc	fsr2h,f,c
  2191  000296  50DF               	movf	indf2,w,c
  2192  000298  010F               	movlb	15	; () banked
  2193  00029A  6F17               	movwf	23,b	;volatile
  2194                           
  2195                           ; BSR set to: 15
  2196                           ;ecan.c: 206: TXB1D2 = tempCanMsg->frame.data2;
  2197  00029C  EE20 F008          	lfsr	2,8
  2198  0002A0  5027               	movf	CAN_transmit@tempCanMsg,w,c
  2199  0002A2  26D9               	addwf	fsr2l,f,c
  2200  0002A4  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  2201  0002A6  22DA               	addwfc	fsr2h,f,c
  2202  0002A8  50DF               	movf	indf2,w,c
  2203  0002AA  010F               	movlb	15	; () banked
  2204  0002AC  6F18               	movwf	24,b	;volatile
  2205                           
  2206                           ; BSR set to: 15
  2207                           ;ecan.c: 207: TXB1D3 = tempCanMsg->frame.data3;
  2208  0002AE  EE20 F009          	lfsr	2,9
  2209  0002B2  5027               	movf	CAN_transmit@tempCanMsg,w,c
  2210  0002B4  26D9               	addwf	fsr2l,f,c
  2211  0002B6  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  2212  0002B8  22DA               	addwfc	fsr2h,f,c
  2213  0002BA  50DF               	movf	indf2,w,c
  2214  0002BC  010F               	movlb	15	; () banked
  2215  0002BE  6F19               	movwf	25,b	;volatile
  2216                           
  2217                           ; BSR set to: 15
  2218                           ;ecan.c: 208: TXB1D4 = tempCanMsg->frame.data4;
  2219  0002C0  EE20 F00A          	lfsr	2,10
  2220  0002C4  5027               	movf	CAN_transmit@tempCanMsg,w,c
  2221  0002C6  26D9               	addwf	fsr2l,f,c
  2222  0002C8  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  2223  0002CA  22DA               	addwfc	fsr2h,f,c
  2224  0002CC  50DF               	movf	indf2,w,c
  2225  0002CE  010F               	movlb	15	; () banked
  2226  0002D0  6F1A               	movwf	26,b	;volatile
  2227                           
  2228                           ; BSR set to: 15
  2229                           ;ecan.c: 209: TXB1D5 = tempCanMsg->frame.data5;
  2230  0002D2  EE20 F00B          	lfsr	2,11
  2231  0002D6  5027               	movf	CAN_transmit@tempCanMsg,w,c
  2232  0002D8  26D9               	addwf	fsr2l,f,c
  2233  0002DA  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  2234  0002DC  22DA               	addwfc	fsr2h,f,c
  2235  0002DE  50DF               	movf	indf2,w,c
  2236  0002E0  010F               	movlb	15	; () banked
  2237  0002E2  6F1B               	movwf	27,b	;volatile
  2238                           
  2239                           ; BSR set to: 15
  2240                           ;ecan.c: 210: TXB1D6 = tempCanMsg->frame.data6;
  2241  0002E4  EE20 F00C          	lfsr	2,12
  2242  0002E8  5027               	movf	CAN_transmit@tempCanMsg,w,c
  2243  0002EA  26D9               	addwf	fsr2l,f,c
  2244  0002EC  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  2245  0002EE  22DA               	addwfc	fsr2h,f,c
  2246  0002F0  50DF               	movf	indf2,w,c
  2247  0002F2  010F               	movlb	15	; () banked
  2248  0002F4  6F1C               	movwf	28,b	;volatile
  2249                           
  2250                           ; BSR set to: 15
  2251                           ;ecan.c: 211: TXB1D7 = tempCanMsg->frame.data7;
  2252  0002F6  EE20 F00D          	lfsr	2,13
  2253  0002FA  5027               	movf	CAN_transmit@tempCanMsg,w,c
  2254  0002FC  26D9               	addwf	fsr2l,f,c
  2255  0002FE  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  2256  000300  22DA               	addwfc	fsr2h,f,c
  2257  000302  50DF               	movf	indf2,w,c
  2258  000304  010F               	movlb	15	; () banked
  2259  000306  6F1D               	movwf	29,b	;volatile
  2260                           
  2261                           ; BSR set to: 15
  2262                           ;ecan.c: 213: TXB1CONbits.TXREQ = 1;
  2263  000308  010F               	movlb	15	; () banked
  2264  00030A  8710               	bsf	16,3,b	;volatile
  2265                           
  2266                           ; BSR set to: 15
  2267                           ;ecan.c: 214: returnValue = 1;
  2268  00030C  0E01               	movlw	1
  2269  00030E  0100               	movlb	0	; () banked
  2270  000310  6F60               	movwf	CAN_transmit@returnValue& (0+255),b
  2271                           
  2272                           ;ecan.c: 215: } else if (TXB2CONbits.TXREQ != 1) {
  2273  000312  0012               	return	
  2274  000314                     l288:
  2275                           
  2276                           ; BSR set to: 15
  2277  000314  010F               	movlb	15	; () banked
  2278  000316  B700               	btfsc	0,3,b	;volatile
  2279  000318  0012               	return	
  2280                           
  2281                           ; BSR set to: 15
  2282                           ;ecan.c: 217: convertCANid2Reg(tempCanMsg->frame.id, tempCanMsg->frame.idType, &tempEIDH
      +                          , &tempEIDL, &tempSIDH, &tempSIDL);
  2283  00031A  EE20 F001          	lfsr	2,1
  2284  00031E  5027               	movf	CAN_transmit@tempCanMsg,w,c
  2285  000320  26D9               	addwf	fsr2l,f,c
  2286  000322  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  2287  000324  22DA               	addwfc	fsr2h,f,c
  2288  000326  CFDE F015          	movff	postinc2,convertCANid2Reg@tempPassedInID
  2289  00032A  CFDE F016          	movff	postinc2,convertCANid2Reg@tempPassedInID+1
  2290  00032E  CFDE F017          	movff	postinc2,convertCANid2Reg@tempPassedInID+2
  2291  000332  CFDE F018          	movff	postinc2,convertCANid2Reg@tempPassedInID+3
  2292  000336  C027  FFD9         	movff	CAN_transmit@tempCanMsg,fsr2l
  2293  00033A  C028  FFDA         	movff	CAN_transmit@tempCanMsg+1,fsr2h
  2294  00033E  50DF               	movf	indf2,w,c
  2295  000340  6E19               	movwf	convertCANid2Reg@canIdType,c
  2296  000342  0E61               	movlw	low CAN_transmit@tempEIDH
  2297  000344  6E1A               	movwf	convertCANid2Reg@passedInEIDH,c
  2298  000346  0E00               	movlw	high CAN_transmit@tempEIDH
  2299  000348  6E1B               	movwf	convertCANid2Reg@passedInEIDH+1,c
  2300  00034A  0E62               	movlw	low CAN_transmit@tempEIDL
  2301  00034C  6E1C               	movwf	convertCANid2Reg@passedInEIDL,c
  2302  00034E  0E00               	movlw	high CAN_transmit@tempEIDL
  2303  000350  6E1D               	movwf	convertCANid2Reg@passedInEIDL+1,c
  2304  000352  0E63               	movlw	low CAN_transmit@tempSIDH
  2305  000354  6E1E               	movwf	convertCANid2Reg@passedInSIDH,c
  2306  000356  0E00               	movlw	high CAN_transmit@tempSIDH
  2307  000358  6E1F               	movwf	convertCANid2Reg@passedInSIDH+1,c
  2308  00035A  0E64               	movlw	low CAN_transmit@tempSIDL
  2309  00035C  6E20               	movwf	convertCANid2Reg@passedInSIDL,c
  2310  00035E  0E00               	movlw	high CAN_transmit@tempSIDL
  2311  000360  6E21               	movwf	convertCANid2Reg@passedInSIDL+1,c
  2312  000362  EC21  F003         	call	_convertCANid2Reg	;wreg free
  2313                           
  2314                           ;ecan.c: 219: TXB2EIDH = tempEIDH;
  2315  000366  C061  FF03         	movff	CAN_transmit@tempEIDH,3843	;volatile
  2316                           
  2317                           ;ecan.c: 220: TXB2EIDL = tempEIDL;
  2318  00036A  C062  FF04         	movff	CAN_transmit@tempEIDL,3844	;volatile
  2319                           
  2320                           ;ecan.c: 221: TXB2SIDH = tempSIDH;
  2321  00036E  C063  FF01         	movff	CAN_transmit@tempSIDH,3841	;volatile
  2322                           
  2323                           ;ecan.c: 222: TXB2SIDL = tempSIDL;
  2324  000372  C064  FF02         	movff	CAN_transmit@tempSIDL,3842	;volatile
  2325                           
  2326                           ;ecan.c: 223: TXB2DLC = tempCanMsg->frame.dlc;
  2327  000376  EE20 F005          	lfsr	2,5
  2328  00037A  5027               	movf	CAN_transmit@tempCanMsg,w,c
  2329  00037C  26D9               	addwf	fsr2l,f,c
  2330  00037E  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  2331  000380  22DA               	addwfc	fsr2h,f,c
  2332  000382  50DF               	movf	indf2,w,c
  2333  000384  010F               	movlb	15	; () banked
  2334  000386  6F05               	movwf	5,b	;volatile
  2335                           
  2336                           ; BSR set to: 15
  2337                           ;ecan.c: 224: TXB2D0 = tempCanMsg->frame.data0;
  2338  000388  EE20 F006          	lfsr	2,6
  2339  00038C  5027               	movf	CAN_transmit@tempCanMsg,w,c
  2340  00038E  26D9               	addwf	fsr2l,f,c
  2341  000390  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  2342  000392  22DA               	addwfc	fsr2h,f,c
  2343  000394  50DF               	movf	indf2,w,c
  2344  000396  010F               	movlb	15	; () banked
  2345  000398  6F06               	movwf	6,b	;volatile
  2346                           
  2347                           ; BSR set to: 15
  2348                           ;ecan.c: 225: TXB2D1 = tempCanMsg->frame.data1;
  2349  00039A  EE20 F007          	lfsr	2,7
  2350  00039E  5027               	movf	CAN_transmit@tempCanMsg,w,c
  2351  0003A0  26D9               	addwf	fsr2l,f,c
  2352  0003A2  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  2353  0003A4  22DA               	addwfc	fsr2h,f,c
  2354  0003A6  50DF               	movf	indf2,w,c
  2355  0003A8  010F               	movlb	15	; () banked
  2356  0003AA  6F07               	movwf	7,b	;volatile
  2357                           
  2358                           ; BSR set to: 15
  2359                           ;ecan.c: 226: TXB2D2 = tempCanMsg->frame.data2;
  2360  0003AC  EE20 F008          	lfsr	2,8
  2361  0003B0  5027               	movf	CAN_transmit@tempCanMsg,w,c
  2362  0003B2  26D9               	addwf	fsr2l,f,c
  2363  0003B4  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  2364  0003B6  22DA               	addwfc	fsr2h,f,c
  2365  0003B8  50DF               	movf	indf2,w,c
  2366  0003BA  010F               	movlb	15	; () banked
  2367  0003BC  6F08               	movwf	8,b	;volatile
  2368                           
  2369                           ; BSR set to: 15
  2370                           ;ecan.c: 227: TXB2D3 = tempCanMsg->frame.data3;
  2371  0003BE  EE20 F009          	lfsr	2,9
  2372  0003C2  5027               	movf	CAN_transmit@tempCanMsg,w,c
  2373  0003C4  26D9               	addwf	fsr2l,f,c
  2374  0003C6  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  2375  0003C8  22DA               	addwfc	fsr2h,f,c
  2376  0003CA  50DF               	movf	indf2,w,c
  2377  0003CC  010F               	movlb	15	; () banked
  2378  0003CE  6F09               	movwf	9,b	;volatile
  2379                           
  2380                           ; BSR set to: 15
  2381                           ;ecan.c: 228: TXB2D4 = tempCanMsg->frame.data4;
  2382  0003D0  EE20 F00A          	lfsr	2,10
  2383  0003D4  5027               	movf	CAN_transmit@tempCanMsg,w,c
  2384  0003D6  26D9               	addwf	fsr2l,f,c
  2385  0003D8  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  2386  0003DA  22DA               	addwfc	fsr2h,f,c
  2387  0003DC  50DF               	movf	indf2,w,c
  2388  0003DE  010F               	movlb	15	; () banked
  2389  0003E0  6F0A               	movwf	10,b	;volatile
  2390                           
  2391                           ; BSR set to: 15
  2392                           ;ecan.c: 229: TXB2D5 = tempCanMsg->frame.data5;
  2393  0003E2  EE20 F00B          	lfsr	2,11
  2394  0003E6  5027               	movf	CAN_transmit@tempCanMsg,w,c
  2395  0003E8  26D9               	addwf	fsr2l,f,c
  2396  0003EA  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  2397  0003EC  22DA               	addwfc	fsr2h,f,c
  2398  0003EE  50DF               	movf	indf2,w,c
  2399  0003F0  010F               	movlb	15	; () banked
  2400  0003F2  6F0B               	movwf	11,b	;volatile
  2401                           
  2402                           ; BSR set to: 15
  2403                           ;ecan.c: 230: TXB2D6 = tempCanMsg->frame.data6;
  2404  0003F4  EE20 F00C          	lfsr	2,12
  2405  0003F8  5027               	movf	CAN_transmit@tempCanMsg,w,c
  2406  0003FA  26D9               	addwf	fsr2l,f,c
  2407  0003FC  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  2408  0003FE  22DA               	addwfc	fsr2h,f,c
  2409  000400  50DF               	movf	indf2,w,c
  2410  000402  010F               	movlb	15	; () banked
  2411  000404  6F0C               	movwf	12,b	;volatile
  2412                           
  2413                           ; BSR set to: 15
  2414                           ;ecan.c: 231: TXB2D7 = tempCanMsg->frame.data7;
  2415  000406  EE20 F00D          	lfsr	2,13
  2416  00040A  5027               	movf	CAN_transmit@tempCanMsg,w,c
  2417  00040C  26D9               	addwf	fsr2l,f,c
  2418  00040E  5028               	movf	CAN_transmit@tempCanMsg+1,w,c
  2419  000410  22DA               	addwfc	fsr2h,f,c
  2420  000412  50DF               	movf	indf2,w,c
  2421  000414  010F               	movlb	15	; () banked
  2422  000416  6F0D               	movwf	13,b	;volatile
  2423                           
  2424                           ; BSR set to: 15
  2425                           ;ecan.c: 233: TXB2CONbits.TXREQ = 1;
  2426  000418  010F               	movlb	15	; () banked
  2427  00041A  8700               	bsf	0,3,b	;volatile
  2428                           
  2429                           ; BSR set to: 15
  2430                           ;ecan.c: 234: returnValue = 1;
  2431  00041C  0E01               	movlw	1
  2432  00041E  0100               	movlb	0	; () banked
  2433  000420  6F60               	movwf	CAN_transmit@returnValue& (0+255),b
  2434                           
  2435                           ; BSR set to: 0
  2436                           
  2437                           ; BSR set to: 0
  2438                           
  2439                           ; BSR set to: 0
  2440  000422  0012               	return	
  2441  000424                     __end_of_CAN_transmit:
  2442                           	opt stack 0
  2443                           tblptru	equ	0xFF8
  2444                           intcon	equ	0xFF2
  2445                           intcon2	equ	0xFF1
  2446                           intcon3	equ	0xFF0
  2447                           postinc0	equ	0xFEE
  2448                           wreg	equ	0xFE8
  2449                           indf2	equ	0xFDF
  2450                           postinc2	equ	0xFDE
  2451                           fsr2h	equ	0xFDA
  2452                           fsr2l	equ	0xFD9
  2453                           status	equ	0xFD8
  2454                           
  2455 ;; *************** function _convertCANid2Reg *****************
  2456 ;; Defined at:
  2457 ;;		line 400 in file "mcc_generated_files/ecan.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;  tempPassedIn    4   20[COMRAM] unsigned long 
  2460 ;;  canIdType       1   24[COMRAM] unsigned char 
  2461 ;;  passedInEIDH    2   25[COMRAM] PTR unsigned char 
  2462 ;;		 -> CAN_transmit@tempEIDH(1), 
  2463 ;;  passedInEIDL    2   27[COMRAM] PTR unsigned char 
  2464 ;;		 -> CAN_transmit@tempEIDL(1), 
  2465 ;;  passedInSIDH    2   29[COMRAM] PTR unsigned char 
  2466 ;;		 -> CAN_transmit@tempSIDH(1), 
  2467 ;;  passedInSIDL    2   31[COMRAM] PTR unsigned char 
  2468 ;;		 -> CAN_transmit@tempSIDL(1), 
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;  wipSIDL         1   37[COMRAM] unsigned char 
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  1    wreg      void 
  2473 ;; Registers used:
  2474 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2480 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2481 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2482 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2483 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2484 ;;Total ram usage:       18 bytes
  2485 ;; Hardware stack levels used:    1
  2486 ;; Hardware stack levels required when called:    4
  2487 ;; This function calls:
  2488 ;;		Nothing
  2489 ;; This function is called by:
  2490 ;;		_CAN_transmit
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           	psect	text17
  2495  000642                     __ptext17:
  2496                           	opt stack 0
  2497  000642                     _convertCANid2Reg:
  2498                           	opt stack 25
  2499                           
  2500                           ;ecan.c: 401: unsigned char wipSIDL = 0;
  2501                           
  2502                           ;incstack = 0
  2503  000642  0E00               	movlw	0
  2504  000644  6E26               	movwf	convertCANid2Reg@wipSIDL,c
  2505                           
  2506                           ;ecan.c: 403: if (canIdType == 2) {
  2507  000646  0E02               	movlw	2
  2508  000648  1819               	xorwf	convertCANid2Reg@canIdType,w,c
  2509  00064A  A4D8               	btfss	status,2,c
  2510  00064C  D081               	goto	l3011
  2511                           
  2512                           ;ecan.c: 406: *passedInEIDL = 0xFF & tempPassedInID;
  2513  00064E  C01C  FFD9         	movff	convertCANid2Reg@passedInEIDL,fsr2l
  2514  000652  C01D  FFDA         	movff	convertCANid2Reg@passedInEIDL+1,fsr2h
  2515  000656  C015  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  2516                           
  2517                           ;ecan.c: 407: tempPassedInID = tempPassedInID >> 8;
  2518  00065A  C015  F022         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  2519  00065E  C016  F023         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  2520  000662  C017  F024         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  2521  000666  C018  F025         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  2522  00066A  C023  F022         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  2523  00066E  C024  F023         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  2524  000672  C025  F024         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  2525  000676  6A25               	clrf	??_convertCANid2Reg+3,c
  2526  000678  C022  F015         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  2527  00067C  C023  F016         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  2528  000680  C024  F017         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  2529  000684  C025  F018         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  2530                           
  2531                           ;ecan.c: 410: *passedInEIDH = 0xFF & tempPassedInID;
  2532  000688  C01A  FFD9         	movff	convertCANid2Reg@passedInEIDH,fsr2l
  2533  00068C  C01B  FFDA         	movff	convertCANid2Reg@passedInEIDH+1,fsr2h
  2534  000690  C015  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  2535                           
  2536                           ;ecan.c: 411: tempPassedInID = tempPassedInID >> 8;
  2537  000694  C015  F022         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  2538  000698  C016  F023         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  2539  00069C  C017  F024         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  2540  0006A0  C018  F025         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  2541  0006A4  C023  F022         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  2542  0006A8  C024  F023         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  2543  0006AC  C025  F024         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  2544  0006B0  6A25               	clrf	??_convertCANid2Reg+3,c
  2545  0006B2  C022  F015         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  2546  0006B6  C023  F016         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  2547  0006BA  C024  F017         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  2548  0006BE  C025  F018         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  2549                           
  2550                           ;ecan.c: 415: wipSIDL = 0x03 & tempPassedInID;
  2551  0006C2  5015               	movf	convertCANid2Reg@tempPassedInID,w,c
  2552  0006C4  0B03               	andlw	3
  2553  0006C6  6E26               	movwf	convertCANid2Reg@wipSIDL,c
  2554                           
  2555                           ;ecan.c: 416: tempPassedInID = tempPassedInID << 3;
  2556  0006C8  C015  F022         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  2557  0006CC  C016  F023         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  2558  0006D0  C017  F024         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  2559  0006D4  C018  F025         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  2560  0006D8  0E03               	movlw	3
  2561  0006DA                     u1415:
  2562  0006DA  90D8               	bcf	status,0,c
  2563  0006DC  3622               	rlcf	??_convertCANid2Reg,f,c
  2564  0006DE  3623               	rlcf	??_convertCANid2Reg+1,f,c
  2565  0006E0  3624               	rlcf	??_convertCANid2Reg+2,f,c
  2566  0006E2  3625               	rlcf	??_convertCANid2Reg+3,f,c
  2567  0006E4  2EE8               	decfsz	wreg,f,c
  2568  0006E6  D7F9               	goto	u1415
  2569  0006E8  C022  F015         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  2570  0006EC  C023  F016         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  2571  0006F0  C024  F017         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  2572  0006F4  C025  F018         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  2573                           
  2574                           ;ecan.c: 417: wipSIDL = (0xE0 & tempPassedInID) + wipSIDL;
  2575  0006F8  5015               	movf	convertCANid2Reg@tempPassedInID,w,c
  2576  0006FA  0BE0               	andlw	224
  2577  0006FC  2426               	addwf	convertCANid2Reg@wipSIDL,w,c
  2578  0006FE  6E26               	movwf	convertCANid2Reg@wipSIDL,c
  2579                           
  2580                           ;ecan.c: 418: wipSIDL = wipSIDL + 0x08;
  2581  000700  5026               	movf	convertCANid2Reg@wipSIDL,w,c
  2582  000702  0F08               	addlw	8
  2583  000704  6E26               	movwf	convertCANid2Reg@wipSIDL,c
  2584                           
  2585                           ;ecan.c: 419: *passedInSIDL = 0xEB & wipSIDL;
  2586  000706  5026               	movf	convertCANid2Reg@wipSIDL,w,c
  2587  000708  0BEB               	andlw	235
  2588  00070A  C020  FFD9         	movff	convertCANid2Reg@passedInSIDL,fsr2l
  2589  00070E  C021  FFDA         	movff	convertCANid2Reg@passedInSIDL+1,fsr2h
  2590  000712  6EDF               	movwf	indf2,c
  2591                           
  2592                           ;ecan.c: 422: tempPassedInID = tempPassedInID >> 8;
  2593  000714  C015  F022         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  2594  000718  C016  F023         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  2595  00071C  C017  F024         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  2596  000720  C018  F025         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  2597  000724  C023  F022         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  2598  000728  C024  F023         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  2599  00072C  C025  F024         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  2600  000730  6A25               	clrf	??_convertCANid2Reg+3,c
  2601  000732  C022  F015         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  2602  000736  C023  F016         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  2603  00073A  C024  F017         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  2604  00073E  C025  F018         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  2605                           
  2606                           ;ecan.c: 423: *passedInSIDH = 0xFF & tempPassedInID;
  2607  000742  C01E  FFD9         	movff	convertCANid2Reg@passedInSIDH,fsr2l
  2608  000746  C01F  FFDA         	movff	convertCANid2Reg@passedInSIDH+1,fsr2h
  2609  00074A  C015  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  2610                           
  2611                           ;ecan.c: 424: } else
  2612  00074E  0012               	return	
  2613  000750                     l3011:
  2614                           
  2615                           ;ecan.c: 425: {
  2616                           ;ecan.c: 426: *passedInEIDH = 0;
  2617  000750  C01A  FFD9         	movff	convertCANid2Reg@passedInEIDH,fsr2l
  2618  000754  C01B  FFDA         	movff	convertCANid2Reg@passedInEIDH+1,fsr2h
  2619  000758  0E00               	movlw	0
  2620  00075A  6EDF               	movwf	indf2,c
  2621                           
  2622                           ;ecan.c: 427: *passedInEIDL = 0;
  2623  00075C  C01C  FFD9         	movff	convertCANid2Reg@passedInEIDL,fsr2l
  2624  000760  C01D  FFDA         	movff	convertCANid2Reg@passedInEIDL+1,fsr2h
  2625  000764  0E00               	movlw	0
  2626  000766  6EDF               	movwf	indf2,c
  2627                           
  2628                           ;ecan.c: 428: tempPassedInID = tempPassedInID << 5;
  2629  000768  C015  F022         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  2630  00076C  C016  F023         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  2631  000770  C017  F024         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  2632  000774  C018  F025         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  2633  000778  0E05               	movlw	5
  2634  00077A                     u1425:
  2635  00077A  90D8               	bcf	status,0,c
  2636  00077C  3622               	rlcf	??_convertCANid2Reg,f,c
  2637  00077E  3623               	rlcf	??_convertCANid2Reg+1,f,c
  2638  000780  3624               	rlcf	??_convertCANid2Reg+2,f,c
  2639  000782  3625               	rlcf	??_convertCANid2Reg+3,f,c
  2640  000784  2EE8               	decfsz	wreg,f,c
  2641  000786  D7F9               	goto	u1425
  2642  000788  C022  F015         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  2643  00078C  C023  F016         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  2644  000790  C024  F017         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  2645  000794  C025  F018         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  2646                           
  2647                           ;ecan.c: 429: *passedInSIDL = 0xFF & tempPassedInID;
  2648  000798  C020  FFD9         	movff	convertCANid2Reg@passedInSIDL,fsr2l
  2649  00079C  C021  FFDA         	movff	convertCANid2Reg@passedInSIDL+1,fsr2h
  2650  0007A0  C015  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  2651                           
  2652                           ;ecan.c: 430: tempPassedInID = tempPassedInID >> 8;
  2653  0007A4  C015  F022         	movff	convertCANid2Reg@tempPassedInID,??_convertCANid2Reg
  2654  0007A8  C016  F023         	movff	convertCANid2Reg@tempPassedInID+1,??_convertCANid2Reg+1
  2655  0007AC  C017  F024         	movff	convertCANid2Reg@tempPassedInID+2,??_convertCANid2Reg+2
  2656  0007B0  C018  F025         	movff	convertCANid2Reg@tempPassedInID+3,??_convertCANid2Reg+3
  2657  0007B4  C023  F022         	movff	??_convertCANid2Reg+1,??_convertCANid2Reg
  2658  0007B8  C024  F023         	movff	??_convertCANid2Reg+2,??_convertCANid2Reg+1
  2659  0007BC  C025  F024         	movff	??_convertCANid2Reg+3,??_convertCANid2Reg+2
  2660  0007C0  6A25               	clrf	??_convertCANid2Reg+3,c
  2661  0007C2  C022  F015         	movff	??_convertCANid2Reg,convertCANid2Reg@tempPassedInID
  2662  0007C6  C023  F016         	movff	??_convertCANid2Reg+1,convertCANid2Reg@tempPassedInID+1
  2663  0007CA  C024  F017         	movff	??_convertCANid2Reg+2,convertCANid2Reg@tempPassedInID+2
  2664  0007CE  C025  F018         	movff	??_convertCANid2Reg+3,convertCANid2Reg@tempPassedInID+3
  2665                           
  2666                           ;ecan.c: 431: *passedInSIDH = 0xFF & tempPassedInID;
  2667  0007D2  C01E  FFD9         	movff	convertCANid2Reg@passedInSIDH,fsr2l
  2668  0007D6  C01F  FFDA         	movff	convertCANid2Reg@passedInSIDH+1,fsr2h
  2669  0007DA  C015  FFDF         	movff	convertCANid2Reg@tempPassedInID,indf2
  2670  0007DE  0012               	return	
  2671  0007E0                     __end_of_convertCANid2Reg:
  2672                           	opt stack 0
  2673                           tblptru	equ	0xFF8
  2674                           intcon	equ	0xFF2
  2675                           intcon2	equ	0xFF1
  2676                           intcon3	equ	0xFF0
  2677                           postinc0	equ	0xFEE
  2678                           wreg	equ	0xFE8
  2679                           indf2	equ	0xFDF
  2680                           postinc2	equ	0xFDE
  2681                           fsr2h	equ	0xFDA
  2682                           fsr2l	equ	0xFD9
  2683                           status	equ	0xFD8
  2684                           
  2685 ;; *************** function _INTERRUPT_InterruptManager *****************
  2686 ;; Defined at:
  2687 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  2688 ;; Parameters:    Size  Location     Type
  2689 ;;		None
  2690 ;; Auto vars:     Size  Location     Type
  2691 ;;		None
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  1    wreg      void 
  2694 ;; Registers used:
  2695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2703 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2704 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2705 ;;Total ram usage:       14 bytes
  2706 ;; Hardware stack levels used:    1
  2707 ;; Hardware stack levels required when called:    3
  2708 ;; This function calls:
  2709 ;;		_CCP2_CaptureISR
  2710 ;;		_I2C_BusCollisionISR
  2711 ;;		_I2C_ISR
  2712 ;;		_INT0_ISR
  2713 ;;		_INT1_ISR
  2714 ;;		_TMR1_ISR
  2715 ;; This function is called by:
  2716 ;;		Interrupt level 2
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720                           	psect	intcode
  2721  000008                     __pintcode:
  2722                           	opt stack 0
  2723  000008                     _INTERRUPT_InterruptManager:
  2724                           	opt stack 24
  2725                           
  2726                           ;incstack = 0
  2727  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2728  00000A  CFFA F007          	movff	pclath,??_INTERRUPT_InterruptManager
  2729  00000E  CFFB F008          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2730  000012  CFE9 F009          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  2731  000016  CFEA F00A          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  2732  00001A  CFE1 F00B          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  2733  00001E  CFE2 F00C          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  2734  000022  CFD9 F00D          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  2735  000026  CFDA F00E          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  2736  00002A  CFF3 F00F          	movff	prodl,??_INTERRUPT_InterruptManager+8
  2737  00002E  CFF4 F010          	movff	prodh,??_INTERRUPT_InterruptManager+9
  2738  000032  CFF6 F011          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  2739  000036  CFF7 F012          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  2740  00003A  CFF8 F013          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  2741  00003E  CFF5 F014          	movff	tablat,??_INTERRUPT_InterruptManager+13
  2742                           
  2743                           ;interrupt_manager.c: 60: if(INTCONbits.INT0IE == 1 && INTCONbits.INT0IF == 1)
  2744  000042  B8F2               	btfsc	intcon,4,c	;volatile
  2745  000044  A2F2               	btfss	intcon,1,c	;volatile
  2746  000046  D003               	goto	i2l530
  2747                           
  2748                           ;interrupt_manager.c: 61: {
  2749                           ;interrupt_manager.c: 62: INT0_ISR();
  2750  000048  EC0F  F006         	call	_INT0_ISR	;wreg free
  2751                           
  2752                           ;interrupt_manager.c: 63: }
  2753  00004C  D024               	goto	i2l542
  2754  00004E                     i2l530:
  2755                           
  2756                           ;interrupt_manager.c: 64: else if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
  2757  00004E  B6F0               	btfsc	intcon3,3,c	;volatile
  2758  000050  A0F0               	btfss	intcon3,0,c	;volatile
  2759  000052  D003               	goto	i2l532
  2760                           
  2761                           ;interrupt_manager.c: 65: {
  2762                           ;interrupt_manager.c: 66: INT1_ISR();
  2763  000054  ECF6  F004         	call	_INT1_ISR	;wreg free
  2764                           
  2765                           ;interrupt_manager.c: 67: }
  2766  000058  D01E               	goto	i2l542
  2767  00005A                     i2l532:
  2768                           
  2769                           ;interrupt_manager.c: 68: else if(INTCONbits.PEIE == 1 && PIE2bits.BCLIE == 1 && PIR2bit
      +                          s.BCLIF == 1)
  2770  00005A  BCF2               	btfsc	intcon,6,c	;volatile
  2771  00005C  A6A0               	btfss	4000,3,c	;volatile
  2772  00005E  D005               	goto	i2l534
  2773  000060  A6A1               	btfss	4001,3,c	;volatile
  2774  000062  D003               	goto	i2l534
  2775                           
  2776                           ;interrupt_manager.c: 69: {
  2777                           ;interrupt_manager.c: 70: I2C_BusCollisionISR();
  2778  000064  EC20  F006         	call	_I2C_BusCollisionISR	;wreg free
  2779                           
  2780                           ;interrupt_manager.c: 71: }
  2781  000068  D016               	goto	i2l542
  2782  00006A                     i2l534:
  2783                           
  2784                           ;interrupt_manager.c: 72: else if(INTCONbits.PEIE == 1 && PIE1bits.SSPIE == 1 && PIR1bit
      +                          s.SSPIF == 1)
  2785  00006A  BCF2               	btfsc	intcon,6,c	;volatile
  2786  00006C  A69D               	btfss	3997,3,c	;volatile
  2787  00006E  D005               	goto	i2l536
  2788  000070  A69E               	btfss	3998,3,c	;volatile
  2789  000072  D003               	goto	i2l536
  2790                           
  2791                           ;interrupt_manager.c: 73: {
  2792                           ;interrupt_manager.c: 74: I2C_ISR();
  2793  000074  EC12  F002         	call	_I2C_ISR	;wreg free
  2794                           
  2795                           ;interrupt_manager.c: 75: }
  2796  000078  D00E               	goto	i2l542
  2797  00007A                     i2l536:
  2798                           
  2799                           ;interrupt_manager.c: 76: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bi
      +                          ts.TMR1IF == 1)
  2800  00007A  BCF2               	btfsc	intcon,6,c	;volatile
  2801  00007C  A09D               	btfss	3997,0,c	;volatile
  2802  00007E  D005               	goto	i2l538
  2803  000080  A09E               	btfss	3998,0,c	;volatile
  2804  000082  D003               	goto	i2l538
  2805                           
  2806                           ;interrupt_manager.c: 77: {
  2807                           ;interrupt_manager.c: 78: TMR1_ISR();
  2808  000084  ECD2  F004         	call	_TMR1_ISR	;wreg free
  2809                           
  2810                           ;interrupt_manager.c: 79: }
  2811  000088  D006               	goto	i2l542
  2812  00008A                     i2l538:
  2813                           
  2814                           ;interrupt_manager.c: 80: else if(INTCONbits.PEIE == 1 && PIE3bits.CCP2IE == 1 && PIR3bi
      +                          ts.CCP2IF == 1)
  2815  00008A  BCF2               	btfsc	intcon,6,c	;volatile
  2816  00008C  A4A3               	btfss	4003,2,c	;volatile
  2817  00008E  D003               	goto	i2l542
  2818  000090  B4A4               	btfsc	4004,2,c	;volatile
  2819                           
  2820                           ;interrupt_manager.c: 81: {
  2821                           ;interrupt_manager.c: 82: CCP2_CaptureISR();
  2822  000092  EC9F  F004         	call	_CCP2_CaptureISR	;wreg free
  2823  000096                     i2l542:
  2824  000096  C014  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  2825  00009A  C013  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  2826  00009E  C012  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  2827  0000A2  C011  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  2828  0000A6  C010  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  2829  0000AA  C00F  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  2830  0000AE  C00E  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  2831  0000B2  C00D  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  2832  0000B6  C00C  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  2833  0000BA  C00B  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  2834  0000BE  C00A  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  2835  0000C2  C009  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  2836  0000C6  C008  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2837  0000CA  C007  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2838  0000CE  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2839  0000D0  0011               	retfie		f
  2840  0000D2                     __end_of_INTERRUPT_InterruptManager:
  2841                           	opt stack 0
  2842                           pclatu	equ	0xFFB
  2843                           pclath	equ	0xFFA
  2844                           tblptru	equ	0xFF8
  2845                           tblptrh	equ	0xFF7
  2846                           tblptrl	equ	0xFF6
  2847                           tablat	equ	0xFF5
  2848                           prodh	equ	0xFF4
  2849                           prodl	equ	0xFF3
  2850                           intcon	equ	0xFF2
  2851                           intcon2	equ	0xFF1
  2852                           intcon3	equ	0xFF0
  2853                           postinc0	equ	0xFEE
  2854                           fsr0h	equ	0xFEA
  2855                           fsr0l	equ	0xFE9
  2856                           wreg	equ	0xFE8
  2857                           fsr1h	equ	0xFE2
  2858                           fsr1l	equ	0xFE1
  2859                           indf2	equ	0xFDF
  2860                           postinc2	equ	0xFDE
  2861                           fsr2h	equ	0xFDA
  2862                           fsr2l	equ	0xFD9
  2863                           status	equ	0xFD8
  2864                           
  2865 ;; *************** function _TMR1_ISR *****************
  2866 ;; Defined at:
  2867 ;;		line 155 in file "mcc_generated_files/tmr1.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;		None
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;		None
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  1    wreg      void 
  2874 ;; Registers used:
  2875 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2885 ;;Total ram usage:        0 bytes
  2886 ;; Hardware stack levels used:    1
  2887 ;; Hardware stack levels required when called:    1
  2888 ;; This function calls:
  2889 ;;		Absolute function
  2890 ;;		_TMR1_DefaultInterruptHandler
  2891 ;; This function is called by:
  2892 ;;		_INTERRUPT_InterruptManager
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           	psect	text19
  2897  0009A4                     __ptext19:
  2898                           	opt stack 0
  2899  0009A4                     _TMR1_ISR:
  2900                           	opt stack 25
  2901                           
  2902                           ;tmr1.c: 159: PIR1bits.TMR1IF = 0;
  2903                           
  2904                           ;incstack = 0
  2905  0009A4  909E               	bcf	3998,0,c	;volatile
  2906                           
  2907                           ;tmr1.c: 161: TMR1H = (timer1ReloadVal >> 8);
  2908  0009A6  5049               	movf	_timer1ReloadVal+1,w,c	;volatile
  2909  0009A8  6ECF               	movwf	4047,c	;volatile
  2910                           
  2911                           ;tmr1.c: 162: TMR1L = timer1ReloadVal;
  2912  0009AA  C048  FFCE         	movff	_timer1ReloadVal,4046	;volatile
  2913                           
  2914                           ;tmr1.c: 163: if(timer1ReloadVal != 0xFFFF) timer1ReloadVal++;
  2915  0009AE  2848               	incf	_timer1ReloadVal,w,c	;volatile
  2916  0009B0  E103               	bnz	i2u111_40
  2917  0009B2  2849               	incf	_timer1ReloadVal+1,w,c	;volatile
  2918  0009B4  B4D8               	btfsc	status,2,c
  2919  0009B6  D003               	goto	i2l2779
  2920  0009B8                     i2u111_40:
  2921  0009B8  4A48               	infsnz	_timer1ReloadVal,f,c	;volatile
  2922  0009BA  2A49               	incf	_timer1ReloadVal+1,f,c	;volatile
  2923  0009BC  D004               	goto	i2l2781
  2924  0009BE                     i2l2779:
  2925                           
  2926                           ;tmr1.c: 164: else timer1ReloadVal = 0x0;
  2927  0009BE  0E00               	movlw	0
  2928  0009C0  6E49               	movwf	_timer1ReloadVal+1,c	;volatile
  2929  0009C2  0E00               	movlw	0
  2930  0009C4  6E48               	movwf	_timer1ReloadVal,c	;volatile
  2931  0009C6                     i2l2781:
  2932                           
  2933                           ;tmr1.c: 166: if(TMR1_InterruptHandler)
  2934  0009C6  0100               	movlb	0	; () banked
  2935  0009C8  518D               	movf	_TMR1_InterruptHandler& (0+255),w,b
  2936  0009CA  0100               	movlb	0	; () banked
  2937  0009CC  118E               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  2938  0009CE  B4D8               	btfsc	status,2,c
  2939  0009D0  0012               	return	
  2940                           
  2941                           ; BSR set to: 0
  2942                           ;tmr1.c: 167: {
  2943                           ;tmr1.c: 168: TMR1_InterruptHandler();
  2944  0009D2  D801               	call	i2u113_48
  2945  0009D4  0012               	return	
  2946  0009D6                     i2u113_48:
  2947  0009D6  0005               	push	
  2948  0009D8  0100               	movlb	0	; () banked
  2949  0009DA  6EFA               	movwf	pclath,c
  2950  0009DC  518D               	movf	_TMR1_InterruptHandler& (0+255),w,b
  2951  0009DE  6EFD               	movwf	tosl,c
  2952  0009E0  518E               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  2953  0009E2  6EFE               	movwf	tosh,c
  2954  0009E4  50F8               	movf	tblptru,w,c
  2955  0009E6  6EFF               	movwf	tosu,c
  2956  0009E8  50FA               	movf	pclath,w,c
  2957  0009EA  0012               	return		;indir
  2958  0009EC                     __end_of_TMR1_ISR:
  2959                           	opt stack 0
  2960                           tosu	equ	0xFFF
  2961                           tosh	equ	0xFFE
  2962                           tosl	equ	0xFFD
  2963                           pclatu	equ	0xFFB
  2964                           pclath	equ	0xFFA
  2965                           tblptru	equ	0xFF8
  2966                           tblptrh	equ	0xFF7
  2967                           tblptrl	equ	0xFF6
  2968                           tablat	equ	0xFF5
  2969                           prodh	equ	0xFF4
  2970                           prodl	equ	0xFF3
  2971                           intcon	equ	0xFF2
  2972                           intcon2	equ	0xFF1
  2973                           intcon3	equ	0xFF0
  2974                           postinc0	equ	0xFEE
  2975                           fsr0h	equ	0xFEA
  2976                           fsr0l	equ	0xFE9
  2977                           wreg	equ	0xFE8
  2978                           fsr1h	equ	0xFE2
  2979                           fsr1l	equ	0xFE1
  2980                           indf2	equ	0xFDF
  2981                           postinc2	equ	0xFDE
  2982                           fsr2h	equ	0xFDA
  2983                           fsr2l	equ	0xFD9
  2984                           status	equ	0xFD8
  2985                           
  2986 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  2987 ;; Defined at:
  2988 ;;		line 177 in file "mcc_generated_files/tmr1.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;		None
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;		None
  2993 ;; Return value:  Size  Location     Type
  2994 ;;                  1    wreg      void 
  2995 ;; Registers used:
  2996 ;;		None
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3006 ;;Total ram usage:        0 bytes
  3007 ;; Hardware stack levels used:    1
  3008 ;; This function calls:
  3009 ;;		Nothing
  3010 ;; This function is called by:
  3011 ;;		_TMR1_Initialize
  3012 ;;		_TMR1_ISR
  3013 ;; This function uses a non-reentrant model
  3014 ;;
  3015                           
  3016                           	psect	text20
  3017  000C3A                     __ptext20:
  3018                           	opt stack 0
  3019  000C3A                     _TMR1_DefaultInterruptHandler:
  3020                           	opt stack 25
  3021                           
  3022                           ;incstack = 0
  3023  000C3A  0012               	return		;funcret
  3024  000C3C                     __end_of_TMR1_DefaultInterruptHandler:
  3025                           	opt stack 0
  3026                           tosu	equ	0xFFF
  3027                           tosh	equ	0xFFE
  3028                           tosl	equ	0xFFD
  3029                           pclatu	equ	0xFFB
  3030                           pclath	equ	0xFFA
  3031                           tblptru	equ	0xFF8
  3032                           tblptrh	equ	0xFF7
  3033                           tblptrl	equ	0xFF6
  3034                           tablat	equ	0xFF5
  3035                           prodh	equ	0xFF4
  3036                           prodl	equ	0xFF3
  3037                           intcon	equ	0xFF2
  3038                           intcon2	equ	0xFF1
  3039                           intcon3	equ	0xFF0
  3040                           postinc0	equ	0xFEE
  3041                           fsr0h	equ	0xFEA
  3042                           fsr0l	equ	0xFE9
  3043                           wreg	equ	0xFE8
  3044                           fsr1h	equ	0xFE2
  3045                           fsr1l	equ	0xFE1
  3046                           indf2	equ	0xFDF
  3047                           postinc2	equ	0xFDE
  3048                           fsr2h	equ	0xFDA
  3049                           fsr2l	equ	0xFD9
  3050                           status	equ	0xFD8
  3051                           
  3052 ;; *************** function _INT1_ISR *****************
  3053 ;; Defined at:
  3054 ;;		line 53 in file "mcc_generated_files/ext_int.c"
  3055 ;; Parameters:    Size  Location     Type
  3056 ;;		None
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;		None
  3059 ;; Return value:  Size  Location     Type
  3060 ;;                  1    wreg      void 
  3061 ;; Registers used:
  3062 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3072 ;;Total ram usage:        0 bytes
  3073 ;; Hardware stack levels used:    1
  3074 ;; Hardware stack levels required when called:    2
  3075 ;; This function calls:
  3076 ;;		_INT1_CallBack
  3077 ;;		_TMR1_ReadTimer
  3078 ;; This function is called by:
  3079 ;;		_INTERRUPT_InterruptManager
  3080 ;; This function uses a non-reentrant model
  3081 ;;
  3082                           
  3083                           	psect	text21
  3084  0009EC                     __ptext21:
  3085                           	opt stack 0
  3086  0009EC                     _INT1_ISR:
  3087                           	opt stack 24
  3088                           
  3089                           ;ext_int.c: 57: if(ext_int1_timing == 0) {
  3090                           
  3091                           ;incstack = 0
  3092  0009EC  503F               	movf	_ext_int1_timing,w,c	;volatile
  3093  0009EE  A4D8               	btfss	status,2,c
  3094  0009F0  D009               	goto	i2l2623
  3095                           
  3096                           ;ext_int.c: 58: ext_int1_timer = TMR1_ReadTimer();
  3097  0009F2  ECC3  F005         	call	_TMR1_ReadTimer	;wreg free
  3098  0009F6  C001  F030         	movff	?_TMR1_ReadTimer,_ext_int1_timer	;volatile
  3099  0009FA  C002  F031         	movff	?_TMR1_ReadTimer+1,_ext_int1_timer+1	;volatile
  3100                           
  3101                           ;ext_int.c: 59: ext_int1_timing = 1;
  3102  0009FE  0E01               	movlw	1
  3103  000A00  6E3F               	movwf	_ext_int1_timing,c	;volatile
  3104                           
  3105                           ;ext_int.c: 60: }
  3106  000A02  D00C               	goto	i2l2631
  3107  000A04                     i2l2623:
  3108                           
  3109                           ;ext_int.c: 61: else {
  3110                           ;ext_int.c: 65: ext_int1_timer = 0;
  3111  000A04  0E00               	movlw	0
  3112  000A06  6E31               	movwf	_ext_int1_timer+1,c	;volatile
  3113  000A08  0E00               	movlw	0
  3114  000A0A  6E30               	movwf	_ext_int1_timer,c	;volatile
  3115                           
  3116                           ;ext_int.c: 66: ext_int1_timing = 0;
  3117  000A0C  0E00               	movlw	0
  3118  000A0E  6E3F               	movwf	_ext_int1_timing,c	;volatile
  3119                           
  3120                           ;ext_int.c: 67: if(PORTBbits.RB1 == 1) {
  3121  000A10  A281               	btfss	3969,1,c	;volatile
  3122  000A12  D002               	goto	i2l2629
  3123                           
  3124                           ;ext_int.c: 68: ext_int1_cur_state = 1;
  3125  000A14  0E01               	movlw	1
  3126  000A16  D001               	goto	L1
  3127  000A18                     i2l2629:
  3128                           
  3129                           ;ext_int.c: 70: else {
  3130                           ;ext_int.c: 71: ext_int1_cur_state = 0;
  3131  000A18  0E00               	movlw	0
  3132  000A1A                     L1:
  3133  000A1A  6E3D               	movwf	_ext_int1_cur_state,c	;volatile
  3134  000A1C                     i2l2631:
  3135                           
  3136                           ;ext_int.c: 72: }
  3137                           ;ext_int.c: 74: }
  3138                           ;ext_int.c: 75: if(RA1 == 1) RA1 = 0;
  3139  000A1C  A280               	btfss	3968,1,c	;volatile
  3140  000A1E  D002               	goto	i2l790
  3141  000A20  9280               	bcf	3968,1,c	;volatile
  3142  000A22  D001               	goto	i2l791
  3143  000A24                     i2l790:
  3144                           
  3145                           ;ext_int.c: 76: else RA1 = 1;
  3146  000A24  8280               	bsf	3968,1,c	;volatile
  3147  000A26                     i2l791:
  3148                           
  3149                           ;ext_int.c: 79: (INTCON3bits.INT1IF = 0);
  3150  000A26  90F0               	bcf	intcon3,0,c	;volatile
  3151                           
  3152                           ;ext_int.c: 82: INT1_CallBack();
  3153  000A28  EC9D  F005         	call	_INT1_CallBack	;wreg free
  3154  000A2C  0012               	return		;funcret
  3155  000A2E                     __end_of_INT1_ISR:
  3156                           	opt stack 0
  3157                           tosu	equ	0xFFF
  3158                           tosh	equ	0xFFE
  3159                           tosl	equ	0xFFD
  3160                           pclatu	equ	0xFFB
  3161                           pclath	equ	0xFFA
  3162                           tblptru	equ	0xFF8
  3163                           tblptrh	equ	0xFF7
  3164                           tblptrl	equ	0xFF6
  3165                           tablat	equ	0xFF5
  3166                           prodh	equ	0xFF4
  3167                           prodl	equ	0xFF3
  3168                           intcon	equ	0xFF2
  3169                           intcon2	equ	0xFF1
  3170                           intcon3	equ	0xFF0
  3171                           postinc0	equ	0xFEE
  3172                           fsr0h	equ	0xFEA
  3173                           fsr0l	equ	0xFE9
  3174                           wreg	equ	0xFE8
  3175                           fsr1h	equ	0xFE2
  3176                           fsr1l	equ	0xFE1
  3177                           indf2	equ	0xFDF
  3178                           postinc2	equ	0xFDE
  3179                           fsr2h	equ	0xFDA
  3180                           fsr2l	equ	0xFD9
  3181                           status	equ	0xFD8
  3182                           
  3183 ;; *************** function _TMR1_ReadTimer *****************
  3184 ;; Defined at:
  3185 ;;		line 107 in file "mcc_generated_files/tmr1.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;		None
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;  readVal         2    4[COMRAM] unsigned int 
  3190 ;; Return value:  Size  Location     Type
  3191 ;;                  2    0[COMRAM] unsigned int 
  3192 ;; Registers used:
  3193 ;;		wreg, status,2, status,0
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3199 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3200 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3201 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3202 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3203 ;;Total ram usage:        6 bytes
  3204 ;; Hardware stack levels used:    1
  3205 ;; This function calls:
  3206 ;;		Nothing
  3207 ;; This function is called by:
  3208 ;;		_INT1_ISR
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           	psect	text22
  3213  000B86                     __ptext22:
  3214                           	opt stack 0
  3215  000B86                     _TMR1_ReadTimer:
  3216                           	opt stack 25
  3217                           
  3218                           ;tmr1.c: 109: uint16_t readVal;
  3219                           ;tmr1.c: 111: readVal = (TMR1H << 8) | TMR1L;
  3220                           
  3221                           ;incstack = 0
  3222  000B86  50CE               	movf	4046,w,c	;volatile
  3223  000B88  CFCF F003          	movff	4047,??_TMR1_ReadTimer	;volatile
  3224  000B8C  6A04               	clrf	(??_TMR1_ReadTimer+1)& (0+255),c
  3225  000B8E  C003  F004         	movff	??_TMR1_ReadTimer,??_TMR1_ReadTimer+1
  3226  000B92  6A03               	clrf	??_TMR1_ReadTimer,c
  3227  000B94  1003               	iorwf	??_TMR1_ReadTimer,w,c
  3228  000B96  6E05               	movwf	TMR1_ReadTimer@readVal,c
  3229  000B98  5004               	movf	??_TMR1_ReadTimer+1,w,c
  3230  000B9A  6E06               	movwf	TMR1_ReadTimer@readVal+1,c
  3231                           
  3232                           ;tmr1.c: 113: return readVal;
  3233  000B9C  C005  F001         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
  3234  000BA0  C006  F002         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
  3235  000BA4  0012               	return	
  3236  000BA6                     __end_of_TMR1_ReadTimer:
  3237                           	opt stack 0
  3238                           tosu	equ	0xFFF
  3239                           tosh	equ	0xFFE
  3240                           tosl	equ	0xFFD
  3241                           pclatu	equ	0xFFB
  3242                           pclath	equ	0xFFA
  3243                           tblptru	equ	0xFF8
  3244                           tblptrh	equ	0xFF7
  3245                           tblptrl	equ	0xFF6
  3246                           tablat	equ	0xFF5
  3247                           prodh	equ	0xFF4
  3248                           prodl	equ	0xFF3
  3249                           intcon	equ	0xFF2
  3250                           intcon2	equ	0xFF1
  3251                           intcon3	equ	0xFF0
  3252                           postinc0	equ	0xFEE
  3253                           fsr0h	equ	0xFEA
  3254                           fsr0l	equ	0xFE9
  3255                           wreg	equ	0xFE8
  3256                           fsr1h	equ	0xFE2
  3257                           fsr1l	equ	0xFE1
  3258                           indf2	equ	0xFDF
  3259                           postinc2	equ	0xFDE
  3260                           fsr2h	equ	0xFDA
  3261                           fsr2l	equ	0xFD9
  3262                           status	equ	0xFD8
  3263                           
  3264 ;; *************** function _INT1_CallBack *****************
  3265 ;; Defined at:
  3266 ;;		line 88 in file "mcc_generated_files/ext_int.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;		None
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;		None
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  1    wreg      void 
  3273 ;; Registers used:
  3274 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3284 ;;Total ram usage:        0 bytes
  3285 ;; Hardware stack levels used:    1
  3286 ;; Hardware stack levels required when called:    1
  3287 ;; This function calls:
  3288 ;;		Absolute function
  3289 ;;		_INT1_DefaultInterruptHandler
  3290 ;; This function is called by:
  3291 ;;		_INT1_ISR
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295                           	psect	text23
  3296  000B3A                     __ptext23:
  3297                           	opt stack 0
  3298  000B3A                     _INT1_CallBack:
  3299                           	opt stack 24
  3300                           
  3301                           ;ext_int.c: 92: if(INT1_InterruptHandler)
  3302                           
  3303                           ;incstack = 0
  3304  000B3A  0100               	movlb	0	; () banked
  3305  000B3C  518B               	movf	_INT1_InterruptHandler& (0+255),w,b
  3306  000B3E  0100               	movlb	0	; () banked
  3307  000B40  118C               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
  3308  000B42  B4D8               	btfsc	status,2,c
  3309  000B44  0012               	return	
  3310                           
  3311                           ; BSR set to: 0
  3312                           ;ext_int.c: 93: {
  3313                           ;ext_int.c: 94: INT1_InterruptHandler();
  3314  000B46  D801               	call	i2u87_48
  3315  000B48  0012               	return	
  3316  000B4A                     i2u87_48:
  3317  000B4A  0005               	push	
  3318  000B4C  0100               	movlb	0	; () banked
  3319  000B4E  6EFA               	movwf	pclath,c
  3320  000B50  518B               	movf	_INT1_InterruptHandler& (0+255),w,b
  3321  000B52  6EFD               	movwf	tosl,c
  3322  000B54  518C               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
  3323  000B56  6EFE               	movwf	tosh,c
  3324  000B58  50F8               	movf	tblptru,w,c
  3325  000B5A  6EFF               	movwf	tosu,c
  3326  000B5C  50FA               	movf	pclath,w,c
  3327  000B5E  0012               	return		;indir
  3328  000B60                     __end_of_INT1_CallBack:
  3329                           	opt stack 0
  3330                           tosu	equ	0xFFF
  3331                           tosh	equ	0xFFE
  3332                           tosl	equ	0xFFD
  3333                           pclatu	equ	0xFFB
  3334                           pclath	equ	0xFFA
  3335                           tblptru	equ	0xFF8
  3336                           tblptrh	equ	0xFF7
  3337                           tblptrl	equ	0xFF6
  3338                           tablat	equ	0xFF5
  3339                           prodh	equ	0xFF4
  3340                           prodl	equ	0xFF3
  3341                           intcon	equ	0xFF2
  3342                           intcon2	equ	0xFF1
  3343                           intcon3	equ	0xFF0
  3344                           postinc0	equ	0xFEE
  3345                           fsr0h	equ	0xFEA
  3346                           fsr0l	equ	0xFE9
  3347                           wreg	equ	0xFE8
  3348                           fsr1h	equ	0xFE2
  3349                           fsr1l	equ	0xFE1
  3350                           indf2	equ	0xFDF
  3351                           postinc2	equ	0xFDE
  3352                           fsr2h	equ	0xFDA
  3353                           fsr2l	equ	0xFD9
  3354                           status	equ	0xFD8
  3355                           
  3356 ;; *************** function _INT1_DefaultInterruptHandler *****************
  3357 ;; Defined at:
  3358 ;;		line 108 in file "mcc_generated_files/ext_int.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;		None
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;		None
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  1    wreg      void 
  3365 ;; Registers used:
  3366 ;;		None
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3376 ;;Total ram usage:        0 bytes
  3377 ;; Hardware stack levels used:    1
  3378 ;; This function calls:
  3379 ;;		Nothing
  3380 ;; This function is called by:
  3381 ;;		_EXT_INT_Initialize
  3382 ;;		_INT1_CallBack
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386                           	psect	text24
  3387  000C3C                     __ptext24:
  3388                           	opt stack 0
  3389  000C3C                     _INT1_DefaultInterruptHandler:
  3390                           	opt stack 24
  3391                           
  3392                           ;incstack = 0
  3393  000C3C  0012               	return		;funcret
  3394  000C3E                     __end_of_INT1_DefaultInterruptHandler:
  3395                           	opt stack 0
  3396                           tosu	equ	0xFFF
  3397                           tosh	equ	0xFFE
  3398                           tosl	equ	0xFFD
  3399                           pclatu	equ	0xFFB
  3400                           pclath	equ	0xFFA
  3401                           tblptru	equ	0xFF8
  3402                           tblptrh	equ	0xFF7
  3403                           tblptrl	equ	0xFF6
  3404                           tablat	equ	0xFF5
  3405                           prodh	equ	0xFF4
  3406                           prodl	equ	0xFF3
  3407                           intcon	equ	0xFF2
  3408                           intcon2	equ	0xFF1
  3409                           intcon3	equ	0xFF0
  3410                           postinc0	equ	0xFEE
  3411                           fsr0h	equ	0xFEA
  3412                           fsr0l	equ	0xFE9
  3413                           wreg	equ	0xFE8
  3414                           fsr1h	equ	0xFE2
  3415                           fsr1l	equ	0xFE1
  3416                           indf2	equ	0xFDF
  3417                           postinc2	equ	0xFDE
  3418                           fsr2h	equ	0xFDA
  3419                           fsr2l	equ	0xFD9
  3420                           status	equ	0xFD8
  3421                           
  3422 ;; *************** function _INT0_ISR *****************
  3423 ;; Defined at:
  3424 ;;		line 115 in file "mcc_generated_files/ext_int.c"
  3425 ;; Parameters:    Size  Location     Type
  3426 ;;		None
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;		None
  3429 ;; Return value:  Size  Location     Type
  3430 ;;                  1    wreg      void 
  3431 ;; Registers used:
  3432 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3433 ;; Tracked objects:
  3434 ;;		On entry : 0/0
  3435 ;;		On exit  : 0/0
  3436 ;;		Unchanged: 0/0
  3437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3442 ;;Total ram usage:        0 bytes
  3443 ;; Hardware stack levels used:    1
  3444 ;; Hardware stack levels required when called:    2
  3445 ;; This function calls:
  3446 ;;		_INT0_CallBack
  3447 ;; This function is called by:
  3448 ;;		_INTERRUPT_InterruptManager
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           	psect	text25
  3453  000C1E                     __ptext25:
  3454                           	opt stack 0
  3455  000C1E                     _INT0_ISR:
  3456                           	opt stack 24
  3457                           
  3458                           ;ext_int.c: 121: (INTCONbits.INT0IF = 0);
  3459                           
  3460                           ;incstack = 0
  3461  000C1E  92F2               	bcf	intcon,1,c	;volatile
  3462                           
  3463                           ;ext_int.c: 124: INT0_CallBack();
  3464  000C20  ECB0  F005         	call	_INT0_CallBack	;wreg free
  3465  000C24  0012               	return		;funcret
  3466  000C26                     __end_of_INT0_ISR:
  3467                           	opt stack 0
  3468                           tosu	equ	0xFFF
  3469                           tosh	equ	0xFFE
  3470                           tosl	equ	0xFFD
  3471                           pclatu	equ	0xFFB
  3472                           pclath	equ	0xFFA
  3473                           tblptru	equ	0xFF8
  3474                           tblptrh	equ	0xFF7
  3475                           tblptrl	equ	0xFF6
  3476                           tablat	equ	0xFF5
  3477                           prodh	equ	0xFF4
  3478                           prodl	equ	0xFF3
  3479                           intcon	equ	0xFF2
  3480                           intcon2	equ	0xFF1
  3481                           intcon3	equ	0xFF0
  3482                           postinc0	equ	0xFEE
  3483                           fsr0h	equ	0xFEA
  3484                           fsr0l	equ	0xFE9
  3485                           wreg	equ	0xFE8
  3486                           fsr1h	equ	0xFE2
  3487                           fsr1l	equ	0xFE1
  3488                           indf2	equ	0xFDF
  3489                           postinc2	equ	0xFDE
  3490                           fsr2h	equ	0xFDA
  3491                           fsr2l	equ	0xFD9
  3492                           status	equ	0xFD8
  3493                           
  3494 ;; *************** function _INT0_CallBack *****************
  3495 ;; Defined at:
  3496 ;;		line 130 in file "mcc_generated_files/ext_int.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;		None
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;		None
  3501 ;; Return value:  Size  Location     Type
  3502 ;;                  1    wreg      void 
  3503 ;; Registers used:
  3504 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3505 ;; Tracked objects:
  3506 ;;		On entry : 0/0
  3507 ;;		On exit  : 0/0
  3508 ;;		Unchanged: 0/0
  3509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3514 ;;Total ram usage:        0 bytes
  3515 ;; Hardware stack levels used:    1
  3516 ;; Hardware stack levels required when called:    1
  3517 ;; This function calls:
  3518 ;;		Absolute function
  3519 ;;		_INT0_DefaultInterruptHandler
  3520 ;; This function is called by:
  3521 ;;		_INT0_ISR
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           
  3525                           	psect	text26
  3526  000B60                     __ptext26:
  3527                           	opt stack 0
  3528  000B60                     _INT0_CallBack:
  3529                           	opt stack 24
  3530                           
  3531                           ;ext_int.c: 133: if(INT0_InterruptHandler)
  3532                           
  3533                           ;incstack = 0
  3534  000B60  0100               	movlb	0	; () banked
  3535  000B62  5189               	movf	_INT0_InterruptHandler& (0+255),w,b
  3536  000B64  0100               	movlb	0	; () banked
  3537  000B66  118A               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
  3538  000B68  B4D8               	btfsc	status,2,c
  3539  000B6A  0012               	return	
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;ext_int.c: 134: {
  3543                           ;ext_int.c: 135: INT0_InterruptHandler();
  3544  000B6C  D801               	call	i2u89_48
  3545  000B6E  0012               	return	
  3546  000B70                     i2u89_48:
  3547  000B70  0005               	push	
  3548  000B72  0100               	movlb	0	; () banked
  3549  000B74  6EFA               	movwf	pclath,c
  3550  000B76  5189               	movf	_INT0_InterruptHandler& (0+255),w,b
  3551  000B78  6EFD               	movwf	tosl,c
  3552  000B7A  518A               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
  3553  000B7C  6EFE               	movwf	tosh,c
  3554  000B7E  50F8               	movf	tblptru,w,c
  3555  000B80  6EFF               	movwf	tosu,c
  3556  000B82  50FA               	movf	pclath,w,c
  3557  000B84  0012               	return		;indir
  3558  000B86                     __end_of_INT0_CallBack:
  3559                           	opt stack 0
  3560                           tosu	equ	0xFFF
  3561                           tosh	equ	0xFFE
  3562                           tosl	equ	0xFFD
  3563                           pclatu	equ	0xFFB
  3564                           pclath	equ	0xFFA
  3565                           tblptru	equ	0xFF8
  3566                           tblptrh	equ	0xFF7
  3567                           tblptrl	equ	0xFF6
  3568                           tablat	equ	0xFF5
  3569                           prodh	equ	0xFF4
  3570                           prodl	equ	0xFF3
  3571                           intcon	equ	0xFF2
  3572                           intcon2	equ	0xFF1
  3573                           intcon3	equ	0xFF0
  3574                           postinc0	equ	0xFEE
  3575                           fsr0h	equ	0xFEA
  3576                           fsr0l	equ	0xFE9
  3577                           wreg	equ	0xFE8
  3578                           fsr1h	equ	0xFE2
  3579                           fsr1l	equ	0xFE1
  3580                           indf2	equ	0xFDF
  3581                           postinc2	equ	0xFDE
  3582                           fsr2h	equ	0xFDA
  3583                           fsr2l	equ	0xFD9
  3584                           status	equ	0xFD8
  3585                           
  3586 ;; *************** function _INT0_DefaultInterruptHandler *****************
  3587 ;; Defined at:
  3588 ;;		line 149 in file "mcc_generated_files/ext_int.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;		None
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;		None
  3593 ;; Return value:  Size  Location     Type
  3594 ;;                  1    wreg      void 
  3595 ;; Registers used:
  3596 ;;		None
  3597 ;; Tracked objects:
  3598 ;;		On entry : 0/0
  3599 ;;		On exit  : 0/0
  3600 ;;		Unchanged: 0/0
  3601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3606 ;;Total ram usage:        0 bytes
  3607 ;; Hardware stack levels used:    1
  3608 ;; This function calls:
  3609 ;;		Nothing
  3610 ;; This function is called by:
  3611 ;;		_EXT_INT_Initialize
  3612 ;;		_INT0_CallBack
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615                           
  3616                           	psect	text27
  3617  000C3E                     __ptext27:
  3618                           	opt stack 0
  3619  000C3E                     _INT0_DefaultInterruptHandler:
  3620                           	opt stack 24
  3621                           
  3622                           ;incstack = 0
  3623  000C3E  0012               	return		;funcret
  3624  000C40                     __end_of_INT0_DefaultInterruptHandler:
  3625                           	opt stack 0
  3626                           tosu	equ	0xFFF
  3627                           tosh	equ	0xFFE
  3628                           tosl	equ	0xFFD
  3629                           pclatu	equ	0xFFB
  3630                           pclath	equ	0xFFA
  3631                           tblptru	equ	0xFF8
  3632                           tblptrh	equ	0xFF7
  3633                           tblptrl	equ	0xFF6
  3634                           tablat	equ	0xFF5
  3635                           prodh	equ	0xFF4
  3636                           prodl	equ	0xFF3
  3637                           intcon	equ	0xFF2
  3638                           intcon2	equ	0xFF1
  3639                           intcon3	equ	0xFF0
  3640                           postinc0	equ	0xFEE
  3641                           fsr0h	equ	0xFEA
  3642                           fsr0l	equ	0xFE9
  3643                           wreg	equ	0xFE8
  3644                           fsr1h	equ	0xFE2
  3645                           fsr1l	equ	0xFE1
  3646                           indf2	equ	0xFDF
  3647                           postinc2	equ	0xFDE
  3648                           fsr2h	equ	0xFDA
  3649                           fsr2l	equ	0xFD9
  3650                           status	equ	0xFD8
  3651                           
  3652 ;; *************** function _I2C_ISR *****************
  3653 ;; Defined at:
  3654 ;;		line 231 in file "mcc_generated_files/i2c.c"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;		None
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;		None
  3659 ;; Return value:  Size  Location     Type
  3660 ;;                  1    wreg      void 
  3661 ;; Registers used:
  3662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3663 ;; Tracked objects:
  3664 ;;		On entry : 0/0
  3665 ;;		On exit  : 0/0
  3666 ;;		Unchanged: 0/0
  3667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3670 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3671 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3672 ;;Total ram usage:        2 bytes
  3673 ;; Hardware stack levels used:    1
  3674 ;; Hardware stack levels required when called:    1
  3675 ;; This function calls:
  3676 ;;		_I2C_FunctionComplete
  3677 ;;		_I2C_Stop
  3678 ;; This function is called by:
  3679 ;;		_INTERRUPT_InterruptManager
  3680 ;; This function uses a non-reentrant model
  3681 ;;
  3682                           
  3683                           	psect	text28
  3684  000424                     __ptext28:
  3685                           	opt stack 0
  3686  000424                     _I2C_ISR:
  3687                           	opt stack 25
  3688                           
  3689                           ;i2c.c: 234: static uint8_t *pi2c_buf_ptr;
  3690                           ;i2c.c: 235: static uint16_t i2c_address = 0;
  3691                           ;i2c.c: 236: static uint8_t i2c_bytes_left = 0;
  3692                           ;i2c.c: 237: static uint8_t i2c_10bit_address_restart = 0;
  3693                           ;i2c.c: 239: PIR1bits.SSPIF = 0;
  3694                           
  3695                           ;incstack = 0
  3696  000424  969E               	bcf	3998,3,c	;volatile
  3697                           
  3698                           ;i2c.c: 243: if(SSPCON1bits.WCOL)
  3699  000426  AEC6               	btfss	4038,7,c	;volatile
  3700  000428  D0E9               	goto	i2l2767
  3701                           
  3702                           ;i2c.c: 244: {
  3703                           ;i2c.c: 246: SSPCON1bits.WCOL = 0;
  3704  00042A  9EC6               	bcf	4038,7,c	;volatile
  3705                           
  3706                           ;i2c.c: 248: *(p_i2c_current->pTrFlag) = I2C_MESSAGE_FAIL;
  3707  00042C  0E00               	movlw	0
  3708  00042E  6E43               	movwf	_i2c_state,c
  3709                           
  3710                           ;i2c.c: 251: p_i2c_current = (0);
  3711  000430  0E00               	movlw	0
  3712  000432  6E34               	movwf	_p_i2c_current,c
  3713  000434  0E00               	movlw	0
  3714  000436  6E35               	movwf	_p_i2c_current+1,c
  3715                           
  3716                           ;i2c.c: 253: return;
  3717  000438  0012               	return	
  3718  00043A                     i2l664:
  3719                           
  3720                           ;i2c.c: 261: if(i2c_object.trStatus.s.empty != 1)
  3721  00043A  B22D               	btfsc	_i2c_object+4,1,c
  3722  00043C  0012               	return	
  3723                           
  3724                           ;i2c.c: 262: {
  3725                           ;i2c.c: 264: p_i2c_current = i2c_object.pTrHead;
  3726  00043E  C02B  F034         	movff	_i2c_object+2,_p_i2c_current
  3727  000442  C02C  F035         	movff	_i2c_object+3,_p_i2c_current+1
  3728                           
  3729                           ;i2c.c: 265: i2c_trb_count = i2c_object.pTrHead->count;
  3730  000446  C02B  FFD9         	movff	_i2c_object+2,fsr2l
  3731  00044A  C02C  FFDA         	movff	_i2c_object+3,fsr2h
  3732  00044E  50DF               	movf	indf2,w,c
  3733  000450  6E42               	movwf	_i2c_trb_count,c
  3734                           
  3735                           ;i2c.c: 266: p_i2c_trb_current = i2c_object.pTrHead->ptrb_list;
  3736  000452  EE20 F001          	lfsr	2,1
  3737  000456  502B               	movf	_i2c_object+2,w,c
  3738  000458  26D9               	addwf	fsr2l,f,c
  3739  00045A  502C               	movf	_i2c_object+3,w,c
  3740  00045C  22DA               	addwfc	fsr2h,f,c
  3741  00045E  CFDE F036          	movff	postinc2,_p_i2c_trb_current
  3742  000462  CFDD F037          	movff	postdec2,_p_i2c_trb_current+1
  3743                           
  3744                           ;i2c.c: 268: i2c_object.pTrHead++;
  3745  000466  0E06               	movlw	6
  3746  000468  262B               	addwf	_i2c_object+2,f,c
  3747  00046A  0E00               	movlw	0
  3748  00046C  222C               	addwfc	_i2c_object+3,f,c
  3749                           
  3750                           ;i2c.c: 271: if(i2c_object.pTrHead == (i2c_tr_queue + 1))
  3751  00046E  0E89               	movlw	low (_i2c_tr_queue+6)
  3752  000470  182B               	xorwf	_i2c_object+2,w,c
  3753  000472  E108               	bnz	i2l2659
  3754  000474  0E00               	movlw	high (_i2c_tr_queue+6)
  3755  000476  182C               	xorwf	_i2c_object+3,w,c
  3756  000478  A4D8               	btfss	status,2,c
  3757  00047A  D004               	goto	i2l2659
  3758                           
  3759                           ;i2c.c: 272: {
  3760                           ;i2c.c: 274: i2c_object.pTrHead = i2c_tr_queue;
  3761  00047C  0E83               	movlw	low _i2c_tr_queue
  3762  00047E  6E2B               	movwf	_i2c_object+2,c
  3763  000480  0E00               	movlw	high _i2c_tr_queue
  3764  000482  6E2C               	movwf	_i2c_object+3,c
  3765  000484                     i2l2659:
  3766                           
  3767                           ;i2c.c: 275: }
  3768                           ;i2c.c: 279: i2c_object.trStatus.s.full = 0;
  3769  000484  902D               	bcf	_i2c_object+4,0,c
  3770                           
  3771                           ;i2c.c: 282: if(i2c_object.pTrHead == i2c_object.pTrTail)
  3772  000486  5029               	movf	_i2c_object,w,c
  3773  000488  182B               	xorwf	_i2c_object+2,w,c
  3774  00048A  E104               	bnz	i2l667
  3775  00048C  502A               	movf	_i2c_object+1,w,c
  3776  00048E  182C               	xorwf	_i2c_object+3,w,c
  3777  000490  B4D8               	btfsc	status,2,c
  3778                           
  3779                           ;i2c.c: 283: {
  3780                           ;i2c.c: 285: i2c_object.trStatus.s.empty = 1;
  3781  000492  822D               	bsf	_i2c_object+4,1,c
  3782  000494                     i2l667:
  3783                           
  3784                           ;i2c.c: 286: }
  3785                           ;i2c.c: 289: SSPCON2bits.SEN = 1;
  3786  000494  80C5               	bsf	4037,0,c	;volatile
  3787                           
  3788                           ;i2c.c: 292: i2c_state = S_MASTER_SEND_ADDR;
  3789  000496  0E02               	movlw	2
  3790  000498  6E43               	movwf	_i2c_state,c
  3791                           
  3792                           ;i2c.c: 293: }
  3793                           ;i2c.c: 295: break;
  3794  00049A  0012               	return	
  3795  00049C                     i2l669:
  3796                           
  3797                           ;i2c.c: 302: SSPCON2bits.RSEN = 1;
  3798  00049C  82C5               	bsf	4037,1,c	;volatile
  3799                           
  3800                           ;i2c.c: 305: i2c_state = S_MASTER_SEND_ADDR;
  3801  00049E  0E02               	movlw	2
  3802  0004A0  6E43               	movwf	_i2c_state,c
  3803                           
  3804                           ;i2c.c: 307: break;
  3805  0004A2  0012               	return	
  3806  0004A4                     i2l670:
  3807                           
  3808                           ;i2c.c: 311: if(SSPCON2bits.ACKSTAT)
  3809  0004A4  ACC5               	btfss	4037,6,c	;volatile
  3810  0004A6  D005               	goto	i2l2671
  3811                           
  3812                           ;i2c.c: 312: {
  3813                           ;i2c.c: 313: i2c_object.i2cErrors++;
  3814  0004A8  2A2F               	incf	_i2c_object+6,f,c
  3815                           
  3816                           ;i2c.c: 314: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  3817  0004AA  0E04               	movlw	4
  3818  0004AC  EC13  F006         	call	_I2C_Stop
  3819                           
  3820                           ;i2c.c: 315: }
  3821  0004B0  0012               	return	
  3822  0004B2                     i2l2671:
  3823                           
  3824                           ;i2c.c: 316: else
  3825                           ;i2c.c: 317: {
  3826                           ;i2c.c: 319: SSPBUF = (i2c_address >> 1) & 0x00FF;
  3827  0004B2  90D8               	bcf	status,0,c
  3828  0004B4  3047               	rrcf	I2C_ISR@i2c_address+1,w,c
  3829  0004B6  6E02               	movwf	(??_I2C_ISR+1)& (0+255),c
  3830  0004B8  3046               	rrcf	I2C_ISR@i2c_address,w,c
  3831  0004BA  6E01               	movwf	??_I2C_ISR& (0+255),c
  3832  0004BC  5001               	movf	??_I2C_ISR,w,c
  3833  0004BE  6EC9               	movwf	4041,c	;volatile
  3834                           
  3835                           ;i2c.c: 322: if(i2c_address & 0x01)
  3836  0004C0  A046               	btfss	I2C_ISR@i2c_address,0,c
  3837  0004C2  D003               	goto	i2l2677
  3838                           
  3839                           ;i2c.c: 323: {
  3840                           ;i2c.c: 326: i2c_state = S_MASTER_10BIT_RESTART;
  3841  0004C4  0E0B               	movlw	11
  3842  0004C6  6E43               	movwf	_i2c_state,c
  3843                           
  3844                           ;i2c.c: 327: }
  3845  0004C8  0012               	return	
  3846  0004CA                     i2l2677:
  3847                           
  3848                           ;i2c.c: 328: else
  3849                           ;i2c.c: 329: {
  3850                           ;i2c.c: 331: i2c_state = S_MASTER_SEND_DATA;
  3851  0004CA  0E03               	movlw	3
  3852  0004CC  6E43               	movwf	_i2c_state,c
  3853                           
  3854                           ;i2c.c: 332: }
  3855                           ;i2c.c: 333: }
  3856                           ;i2c.c: 335: break;
  3857  0004CE  0012               	return	
  3858  0004D0                     i2l675:
  3859                           
  3860                           ;i2c.c: 339: if(SSPCON2bits.ACKSTAT)
  3861  0004D0  ACC5               	btfss	4037,6,c	;volatile
  3862  0004D2  D005               	goto	i2l676
  3863                           
  3864                           ;i2c.c: 340: {
  3865                           ;i2c.c: 341: i2c_object.i2cErrors++;
  3866  0004D4  2A2F               	incf	_i2c_object+6,f,c
  3867                           
  3868                           ;i2c.c: 342: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  3869  0004D6  0E04               	movlw	4
  3870  0004D8  EC13  F006         	call	_I2C_Stop
  3871                           
  3872                           ;i2c.c: 343: }
  3873  0004DC  0012               	return	
  3874  0004DE                     i2l676:
  3875                           
  3876                           ;i2c.c: 344: else
  3877                           ;i2c.c: 345: {
  3878                           ;i2c.c: 348: SSPCON2bits.RSEN = 1;
  3879  0004DE  82C5               	bsf	4037,1,c	;volatile
  3880                           
  3881                           ;i2c.c: 352: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  3882  0004E0  C046  F001         	movff	I2C_ISR@i2c_address,??_I2C_ISR
  3883  0004E4  C047  F002         	movff	I2C_ISR@i2c_address+1,??_I2C_ISR+1
  3884  0004E8  C002  F001         	movff	??_I2C_ISR+1,??_I2C_ISR
  3885  0004EC  6A02               	clrf	??_I2C_ISR+1,c
  3886  0004EE  0E06               	movlw	6
  3887  0004F0  1601               	andwf	??_I2C_ISR,f,c
  3888  0004F2  0E00               	movlw	0
  3889  0004F4  1602               	andwf	??_I2C_ISR+1,f,c
  3890  0004F6  0EF0               	movlw	240
  3891  0004F8  1001               	iorwf	??_I2C_ISR,w,c
  3892  0004FA  6E46               	movwf	I2C_ISR@i2c_address,c
  3893  0004FC  5002               	movf	??_I2C_ISR+1,w,c
  3894  0004FE  6E47               	movwf	I2C_ISR@i2c_address+1,c
  3895                           
  3896                           ;i2c.c: 355: i2c_address |= 0x0001;
  3897  000500  8046               	bsf	I2C_ISR@i2c_address,0,c
  3898                           
  3899                           ;i2c.c: 358: i2c_10bit_address_restart = 1;
  3900  000502  0E01               	movlw	1
  3901  000504  6E40               	movwf	I2C_ISR@i2c_10bit_address_restart,c
  3902                           
  3903                           ;i2c.c: 361: i2c_state = S_MASTER_SEND_ADDR;
  3904  000506  0E02               	movlw	2
  3905  000508  6E43               	movwf	_i2c_state,c
  3906                           
  3907                           ;i2c.c: 362: }
  3908                           ;i2c.c: 364: break;
  3909  00050A  0012               	return	
  3910  00050C                     i2l2691:
  3911                           
  3912                           ;i2c.c: 379: if(i2c_10bit_address_restart != 1)
  3913  00050C  0440               	decf	I2C_ISR@i2c_10bit_address_restart,w,c
  3914  00050E  B4D8               	btfsc	status,2,c
  3915  000510  D01A               	goto	i2l680
  3916                           
  3917                           ;i2c.c: 380: {
  3918                           ;i2c.c: 382: i2c_address = p_i2c_trb_current->address;
  3919  000512  C036  FFD9         	movff	_p_i2c_trb_current,fsr2l
  3920  000516  C037  FFDA         	movff	_p_i2c_trb_current+1,fsr2h
  3921  00051A  CFDE F046          	movff	postinc2,I2C_ISR@i2c_address
  3922  00051E  CFDD F047          	movff	postdec2,I2C_ISR@i2c_address+1
  3923                           
  3924                           ;i2c.c: 383: pi2c_buf_ptr = p_i2c_trb_current->pbuffer;
  3925  000522  EE20 F003          	lfsr	2,3
  3926  000526  5036               	movf	_p_i2c_trb_current,w,c
  3927  000528  26D9               	addwf	fsr2l,f,c
  3928  00052A  5037               	movf	_p_i2c_trb_current+1,w,c
  3929  00052C  22DA               	addwfc	fsr2h,f,c
  3930  00052E  CFDE F032          	movff	postinc2,I2C_ISR@pi2c_buf_ptr
  3931  000532  CFDD F033          	movff	postdec2,I2C_ISR@pi2c_buf_ptr+1
  3932                           
  3933                           ;i2c.c: 384: i2c_bytes_left = p_i2c_trb_current->length;
  3934  000536  EE20 F002          	lfsr	2,2
  3935  00053A  5036               	movf	_p_i2c_trb_current,w,c
  3936  00053C  26D9               	addwf	fsr2l,f,c
  3937  00053E  5037               	movf	_p_i2c_trb_current+1,w,c
  3938  000540  22DA               	addwfc	fsr2h,f,c
  3939  000542  50DF               	movf	indf2,w,c
  3940  000544  6E41               	movwf	I2C_ISR@i2c_bytes_left,c
  3941  000546                     i2l680:
  3942                           
  3943                           ;i2c.c: 407: else
  3944                           ;i2c.c: 408: {
  3945                           ;i2c.c: 410: SSPBUF = i2c_address;
  3946  000546  C046  FFC9         	movff	I2C_ISR@i2c_address,4041	;volatile
  3947                           
  3948                           ;i2c.c: 411: if(i2c_address & 0x01)
  3949  00054A  A046               	btfss	I2C_ISR@i2c_address,0,c
  3950  00054C  D003               	goto	i2l2711
  3951                           
  3952                           ;i2c.c: 412: {
  3953                           ;i2c.c: 414: i2c_state = S_MASTER_ACK_ADDR;
  3954  00054E  0E05               	movlw	5
  3955  000550  6E43               	movwf	_i2c_state,c
  3956                           
  3957                           ;i2c.c: 415: }
  3958  000552  0012               	return	
  3959  000554                     i2l2711:
  3960                           
  3961                           ;i2c.c: 416: else
  3962                           ;i2c.c: 417: {
  3963                           ;i2c.c: 419: i2c_state = S_MASTER_SEND_DATA;
  3964  000554  0E03               	movlw	3
  3965  000556  6E43               	movwf	_i2c_state,c
  3966                           
  3967                           ;i2c.c: 420: }
  3968                           ;i2c.c: 421: }
  3969                           ;i2c.c: 422: break;
  3970  000558  0012               	return	
  3971  00055A                     i2l686:
  3972                           
  3973                           ;i2c.c: 427: if(SSPCON2bits.ACKSTAT)
  3974  00055A  ACC5               	btfss	4037,6,c	;volatile
  3975  00055C  D006               	goto	i2l2719
  3976                           
  3977                           ;i2c.c: 428: {
  3978                           ;i2c.c: 430: i2c_object.i2cErrors++;
  3979  00055E  2A2F               	incf	_i2c_object+6,f,c
  3980                           
  3981                           ;i2c.c: 433: SSPCON2bits.ACKSTAT = 0;
  3982  000560  9CC5               	bcf	4037,6,c	;volatile
  3983                           
  3984                           ;i2c.c: 436: I2C_Stop(I2C_DATA_NO_ACK);
  3985  000562  0E05               	movlw	5
  3986  000564  EC13  F006         	call	_I2C_Stop
  3987                           
  3988                           ;i2c.c: 438: }
  3989  000568  0012               	return	
  3990  00056A                     i2l2719:
  3991                           
  3992                           ;i2c.c: 439: else
  3993                           ;i2c.c: 440: {
  3994                           ;i2c.c: 442: if(i2c_bytes_left-- == 0U)
  3995  00056A  0641               	decf	I2C_ISR@i2c_bytes_left,f,c
  3996  00056C  2841               	incf	I2C_ISR@i2c_bytes_left,w,c
  3997  00056E  A4D8               	btfss	status,2,c
  3998  000570  D00E               	goto	i2l2729
  3999                           
  4000                           ;i2c.c: 443: {
  4001                           ;i2c.c: 447: p_i2c_trb_current++;
  4002  000572  0E06               	movlw	6
  4003  000574  2636               	addwf	_p_i2c_trb_current,f,c
  4004  000576  0E00               	movlw	0
  4005  000578  2237               	addwfc	_p_i2c_trb_current+1,f,c
  4006                           
  4007                           ;i2c.c: 450: if(--i2c_trb_count == 0)
  4008  00057A  2E42               	decfsz	_i2c_trb_count,f,c
  4009  00057C  D004               	goto	i2l690
  4010                           
  4011                           ;i2c.c: 451: {
  4012                           ;i2c.c: 452: I2C_Stop(I2C_MESSAGE_COMPLETE);
  4013  00057E  0E00               	movlw	0
  4014  000580  EC13  F006         	call	_I2C_Stop
  4015                           
  4016                           ;i2c.c: 453: }
  4017  000584  0012               	return	
  4018  000586                     i2l690:
  4019                           
  4020                           ;i2c.c: 454: else
  4021                           ;i2c.c: 455: {
  4022                           ;i2c.c: 462: SSPCON2bits.RSEN = 1;
  4023  000586  82C5               	bsf	4037,1,c	;volatile
  4024                           
  4025                           ;i2c.c: 465: i2c_state = S_MASTER_SEND_ADDR;
  4026  000588  0E02               	movlw	2
  4027  00058A  6E43               	movwf	_i2c_state,c
  4028                           
  4029                           ;i2c.c: 467: }
  4030                           ;i2c.c: 468: }
  4031  00058C  0012               	return	
  4032  00058E                     i2l2729:
  4033                           
  4034                           ;i2c.c: 469: else
  4035                           ;i2c.c: 470: {
  4036                           ;i2c.c: 472: SSPBUF = *pi2c_buf_ptr++;
  4037  00058E  C032  FFD9         	movff	I2C_ISR@pi2c_buf_ptr,fsr2l
  4038  000592  C033  FFDA         	movff	I2C_ISR@pi2c_buf_ptr+1,fsr2h
  4039  000596  50DF               	movf	indf2,w,c
  4040  000598  6EC9               	movwf	4041,c	;volatile
  4041  00059A  4A32               	infsnz	I2C_ISR@pi2c_buf_ptr,f,c
  4042  00059C  2A33               	incf	I2C_ISR@pi2c_buf_ptr+1,f,c
  4043                           
  4044                           ;i2c.c: 473: }
  4045                           ;i2c.c: 474: }
  4046                           ;i2c.c: 475: break;
  4047  00059E  0012               	return	
  4048  0005A0                     i2l693:
  4049                           
  4050                           ;i2c.c: 480: if(SSPCON2bits.ACKSTAT)
  4051  0005A0  ACC5               	btfss	4037,6,c	;volatile
  4052  0005A2  D006               	goto	i2l694
  4053                           
  4054                           ;i2c.c: 481: {
  4055                           ;i2c.c: 484: i2c_object.i2cErrors++;
  4056  0005A4  2A2F               	incf	_i2c_object+6,f,c
  4057                           
  4058                           ;i2c.c: 487: I2C_Stop(I2C_MESSAGE_ADDRESS_NO_ACK);
  4059  0005A6  0E04               	movlw	4
  4060  0005A8  EC13  F006         	call	_I2C_Stop
  4061                           
  4062                           ;i2c.c: 490: SSPCON2bits.ACKSTAT = 0;
  4063  0005AC  9CC5               	bcf	4037,6,c	;volatile
  4064                           
  4065                           ;i2c.c: 491: }
  4066  0005AE  0012               	return	
  4067  0005B0                     i2l694:
  4068                           
  4069                           ;i2c.c: 492: else
  4070                           ;i2c.c: 493: {
  4071                           ;i2c.c: 494: SSPCON2bits.RCEN = 1;
  4072  0005B0  86C5               	bsf	4037,3,c	;volatile
  4073                           
  4074                           ;i2c.c: 495: i2c_state = S_MASTER_ACK_RCV_DATA;
  4075  0005B2  0E08               	movlw	8
  4076  0005B4  6E43               	movwf	_i2c_state,c
  4077                           
  4078                           ;i2c.c: 496: }
  4079                           ;i2c.c: 497: break;
  4080  0005B6  0012               	return	
  4081  0005B8                     i2l2741:
  4082                           
  4083                           ;i2c.c: 504: i2c_state = S_MASTER_ACK_RCV_DATA;
  4084  0005B8  0E08               	movlw	8
  4085  0005BA  6E43               	movwf	_i2c_state,c
  4086                           
  4087                           ;i2c.c: 507: SSPCON2bits.RCEN = 1;
  4088  0005BC  86C5               	bsf	4037,3,c	;volatile
  4089                           
  4090                           ;i2c.c: 509: break;
  4091  0005BE  0012               	return	
  4092  0005C0                     i2l2745:
  4093                           
  4094                           ;i2c.c: 514: *pi2c_buf_ptr++ = SSPBUF;
  4095  0005C0  C032  FFD9         	movff	I2C_ISR@pi2c_buf_ptr,fsr2l
  4096  0005C4  C033  FFDA         	movff	I2C_ISR@pi2c_buf_ptr+1,fsr2h
  4097  0005C8  CFC9 FFDF          	movff	4041,indf2	;volatile
  4098  0005CC  4A32               	infsnz	I2C_ISR@pi2c_buf_ptr,f,c
  4099  0005CE  2A33               	incf	I2C_ISR@pi2c_buf_ptr+1,f,c
  4100                           
  4101                           ;i2c.c: 517: if(--i2c_bytes_left)
  4102  0005D0  0E01               	movlw	1
  4103  0005D2  5E41               	subwf	I2C_ISR@i2c_bytes_left,f,c
  4104  0005D4  B4D8               	btfsc	status,2,c
  4105  0005D6  D004               	goto	i2l698
  4106                           
  4107                           ;i2c.c: 518: {
  4108                           ;i2c.c: 524: SSPCON2bits.ACKDT = 0;
  4109  0005D8  9AC5               	bcf	4037,5,c	;volatile
  4110                           
  4111                           ;i2c.c: 527: i2c_state = S_MASTER_RCV_DATA;
  4112  0005DA  0E06               	movlw	6
  4113  0005DC  6E43               	movwf	_i2c_state,c
  4114                           
  4115                           ;i2c.c: 528: }
  4116  0005DE  D003               	goto	i2l2757
  4117  0005E0                     i2l698:
  4118                           
  4119                           ;i2c.c: 529: else
  4120                           ;i2c.c: 530: {
  4121                           ;i2c.c: 534: SSPCON2bits.ACKDT = 1;
  4122  0005E0  8AC5               	bsf	4037,5,c	;volatile
  4123                           
  4124                           ;i2c.c: 536: I2C_FunctionComplete();
  4125  0005E2  ECE0  F005         	call	_I2C_FunctionComplete	;wreg free
  4126  0005E6                     i2l2757:
  4127                           
  4128                           ;i2c.c: 537: }
  4129                           ;i2c.c: 540: SSPCON2bits.ACKEN = 1;
  4130  0005E6  88C5               	bsf	4037,4,c	;volatile
  4131                           
  4132                           ;i2c.c: 541: break;
  4133  0005E8  0012               	return	
  4134  0005EA                     i2l2759:
  4135                           
  4136                           ;i2c.c: 544: case S_MASTER_SEND_STOP:
  4137                           ;i2c.c: 547: I2C_Stop(I2C_MESSAGE_COMPLETE);
  4138  0005EA  0E00               	movlw	0
  4139  0005EC  EC13  F006         	call	_I2C_Stop
  4140                           
  4141                           ;i2c.c: 548: break;
  4142  0005F0  0012               	return	
  4143  0005F2                     i2l2761:
  4144                           
  4145                           ;i2c.c: 554: i2c_object.i2cErrors++;
  4146  0005F2  2A2F               	incf	_i2c_object+6,f,c
  4147                           
  4148                           ;i2c.c: 555: I2C_Stop(I2C_LOST_STATE);
  4149  0005F4  0E06               	movlw	6
  4150  0005F6  EC13  F006         	call	_I2C_Stop
  4151                           
  4152                           ;i2c.c: 558: }
  4153                           
  4154                           ;i2c.c: 556: break;
  4155  0005FA  0012               	return	
  4156  0005FC                     i2l2767:
  4157  0005FC  5043               	movf	_i2c_state,w,c
  4158                           
  4159                           ; Switch size 1, requested type "space"
  4160                           ; Number of cases is 11, Range of values is 0 to 11
  4161                           ; switch strategies available:
  4162                           ; Name         Instructions Cycles
  4163                           ; simple_byte           34    18 (average)
  4164                           ;	Chosen strategy is simple_byte
  4165  0005FE  0A00               	xorlw	0	; case 0
  4166  000600  B4D8               	btfsc	status,2,c
  4167  000602  D71B               	goto	i2l664
  4168  000604  0A01               	xorlw	1	; case 1
  4169  000606  B4D8               	btfsc	status,2,c
  4170  000608  D749               	goto	i2l669
  4171  00060A  0A03               	xorlw	3	; case 2
  4172  00060C  B4D8               	btfsc	status,2,c
  4173  00060E  D77E               	goto	i2l2691
  4174  000610  0A01               	xorlw	1	; case 3
  4175  000612  B4D8               	btfsc	status,2,c
  4176  000614  D7A2               	goto	i2l686
  4177  000616  0A07               	xorlw	7	; case 4
  4178  000618  B4D8               	btfsc	status,2,c
  4179  00061A  D7E7               	goto	i2l2759
  4180  00061C  0A01               	xorlw	1	; case 5
  4181  00061E  B4D8               	btfsc	status,2,c
  4182  000620  D7BF               	goto	i2l693
  4183  000622  0A03               	xorlw	3	; case 6
  4184  000624  B4D8               	btfsc	status,2,c
  4185  000626  D7C8               	goto	i2l2741
  4186  000628  0A01               	xorlw	1	; case 7
  4187  00062A  B4D8               	btfsc	status,2,c
  4188  00062C  D7DE               	goto	i2l2759
  4189  00062E  0A0F               	xorlw	15	; case 8
  4190  000630  B4D8               	btfsc	status,2,c
  4191  000632  D7C6               	goto	i2l2745
  4192  000634  0A02               	xorlw	2	; case 10
  4193  000636  B4D8               	btfsc	status,2,c
  4194  000638  D735               	goto	i2l670
  4195  00063A  0A01               	xorlw	1	; case 11
  4196  00063C  B4D8               	btfsc	status,2,c
  4197  00063E  D748               	goto	i2l675
  4198  000640  D7D8               	goto	i2l2761
  4199  000642                     __end_of_I2C_ISR:
  4200                           	opt stack 0
  4201                           tosu	equ	0xFFF
  4202                           tosh	equ	0xFFE
  4203                           tosl	equ	0xFFD
  4204                           pclatu	equ	0xFFB
  4205                           pclath	equ	0xFFA
  4206                           tblptru	equ	0xFF8
  4207                           tblptrh	equ	0xFF7
  4208                           tblptrl	equ	0xFF6
  4209                           tablat	equ	0xFF5
  4210                           prodh	equ	0xFF4
  4211                           prodl	equ	0xFF3
  4212                           intcon	equ	0xFF2
  4213                           intcon2	equ	0xFF1
  4214                           intcon3	equ	0xFF0
  4215                           postinc0	equ	0xFEE
  4216                           fsr0h	equ	0xFEA
  4217                           fsr0l	equ	0xFE9
  4218                           wreg	equ	0xFE8
  4219                           fsr1h	equ	0xFE2
  4220                           fsr1l	equ	0xFE1
  4221                           indf2	equ	0xFDF
  4222                           postinc2	equ	0xFDE
  4223                           postdec2	equ	0xFDD
  4224                           fsr2h	equ	0xFDA
  4225                           fsr2l	equ	0xFD9
  4226                           status	equ	0xFD8
  4227                           
  4228 ;; *************** function _I2C_Stop *****************
  4229 ;; Defined at:
  4230 ;;		line 579 in file "mcc_generated_files/i2c.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;  completion_c    1    wreg     enum E15091
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;  completion_c    1    0[COMRAM] enum E15091
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  1    wreg      void 
  4237 ;; Registers used:
  4238 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4248 ;;Total ram usage:        0 bytes
  4249 ;; Hardware stack levels used:    1
  4250 ;; This function calls:
  4251 ;;		Nothing
  4252 ;; This function is called by:
  4253 ;;		_I2C_ISR
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           	psect	text29
  4258  000C26                     __ptext29:
  4259                           	opt stack 0
  4260  000C26                     _I2C_Stop:
  4261                           	opt stack 25
  4262                           
  4263                           ;i2c.c: 582: SSPCON2bits.PEN = 1;
  4264                           
  4265                           ;incstack = 0
  4266  000C26  84C5               	bsf	4037,2,c	;volatile
  4267                           
  4268                           ;i2c.c: 589: }
  4269                           ;i2c.c: 592: i2c_state = S_MASTER_IDLE;
  4270  000C28  0E00               	movlw	0
  4271  000C2A  6E43               	movwf	_i2c_state,c
  4272  000C2C  0012               	return		;funcret
  4273  000C2E                     __end_of_I2C_Stop:
  4274                           	opt stack 0
  4275                           tosu	equ	0xFFF
  4276                           tosh	equ	0xFFE
  4277                           tosl	equ	0xFFD
  4278                           pclatu	equ	0xFFB
  4279                           pclath	equ	0xFFA
  4280                           tblptru	equ	0xFF8
  4281                           tblptrh	equ	0xFF7
  4282                           tblptrl	equ	0xFF6
  4283                           tablat	equ	0xFF5
  4284                           prodh	equ	0xFF4
  4285                           prodl	equ	0xFF3
  4286                           intcon	equ	0xFF2
  4287                           intcon2	equ	0xFF1
  4288                           intcon3	equ	0xFF0
  4289                           postinc0	equ	0xFEE
  4290                           fsr0h	equ	0xFEA
  4291                           fsr0l	equ	0xFE9
  4292                           wreg	equ	0xFE8
  4293                           fsr1h	equ	0xFE2
  4294                           fsr1l	equ	0xFE1
  4295                           indf2	equ	0xFDF
  4296                           postinc2	equ	0xFDE
  4297                           postdec2	equ	0xFDD
  4298                           fsr2h	equ	0xFDA
  4299                           fsr2l	equ	0xFD9
  4300                           status	equ	0xFD8
  4301                           
  4302 ;; *************** function _I2C_FunctionComplete *****************
  4303 ;; Defined at:
  4304 ;;		line 561 in file "mcc_generated_files/i2c.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;		None
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;		None
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  1    wreg      void 
  4311 ;; Registers used:
  4312 ;;		wreg, status,2, status,0
  4313 ;; Tracked objects:
  4314 ;;		On entry : 0/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4322 ;;Total ram usage:        0 bytes
  4323 ;; Hardware stack levels used:    1
  4324 ;; This function calls:
  4325 ;;		Nothing
  4326 ;; This function is called by:
  4327 ;;		_I2C_ISR
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331                           	psect	text30
  4332  000BC0                     __ptext30:
  4333                           	opt stack 0
  4334  000BC0                     _I2C_FunctionComplete:
  4335                           	opt stack 25
  4336                           
  4337                           ;i2c.c: 565: p_i2c_trb_current++;
  4338                           
  4339                           ;incstack = 0
  4340  000BC0  0E06               	movlw	6
  4341  000BC2  2636               	addwf	_p_i2c_trb_current,f,c
  4342  000BC4  0E00               	movlw	0
  4343  000BC6  2237               	addwfc	_p_i2c_trb_current+1,f,c
  4344                           
  4345                           ;i2c.c: 568: if(--i2c_trb_count == 0)
  4346  000BC8  2E42               	decfsz	_i2c_trb_count,f,c
  4347  000BCA  D003               	goto	i2l2483
  4348                           
  4349                           ;i2c.c: 569: {
  4350                           ;i2c.c: 570: i2c_state = S_MASTER_SEND_STOP;
  4351  000BCC  0E04               	movlw	4
  4352  000BCE  6E43               	movwf	_i2c_state,c
  4353                           
  4354                           ;i2c.c: 571: }
  4355  000BD0  0012               	return	
  4356  000BD2                     i2l2483:
  4357                           
  4358                           ;i2c.c: 572: else
  4359                           ;i2c.c: 573: {
  4360                           ;i2c.c: 574: i2c_state = S_MASTER_RESTART;
  4361  000BD2  0E01               	movlw	1
  4362  000BD4  6E43               	movwf	_i2c_state,c
  4363  000BD6  0012               	return	
  4364  000BD8                     __end_of_I2C_FunctionComplete:
  4365                           	opt stack 0
  4366                           tosu	equ	0xFFF
  4367                           tosh	equ	0xFFE
  4368                           tosl	equ	0xFFD
  4369                           pclatu	equ	0xFFB
  4370                           pclath	equ	0xFFA
  4371                           tblptru	equ	0xFF8
  4372                           tblptrh	equ	0xFF7
  4373                           tblptrl	equ	0xFF6
  4374                           tablat	equ	0xFF5
  4375                           prodh	equ	0xFF4
  4376                           prodl	equ	0xFF3
  4377                           intcon	equ	0xFF2
  4378                           intcon2	equ	0xFF1
  4379                           intcon3	equ	0xFF0
  4380                           postinc0	equ	0xFEE
  4381                           fsr0h	equ	0xFEA
  4382                           fsr0l	equ	0xFE9
  4383                           wreg	equ	0xFE8
  4384                           fsr1h	equ	0xFE2
  4385                           fsr1l	equ	0xFE1
  4386                           indf2	equ	0xFDF
  4387                           postinc2	equ	0xFDE
  4388                           postdec2	equ	0xFDD
  4389                           fsr2h	equ	0xFDA
  4390                           fsr2l	equ	0xFD9
  4391                           status	equ	0xFD8
  4392                           
  4393 ;; *************** function _I2C_BusCollisionISR *****************
  4394 ;; Defined at:
  4395 ;;		line 726 in file "mcc_generated_files/i2c.c"
  4396 ;; Parameters:    Size  Location     Type
  4397 ;;		None
  4398 ;; Auto vars:     Size  Location     Type
  4399 ;;		None
  4400 ;; Return value:  Size  Location     Type
  4401 ;;                  1    wreg      void 
  4402 ;; Registers used:
  4403 ;;		None
  4404 ;; Tracked objects:
  4405 ;;		On entry : 0/0
  4406 ;;		On exit  : 0/0
  4407 ;;		Unchanged: 0/0
  4408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4413 ;;Total ram usage:        0 bytes
  4414 ;; Hardware stack levels used:    1
  4415 ;; This function calls:
  4416 ;;		Nothing
  4417 ;; This function is called by:
  4418 ;;		_INTERRUPT_InterruptManager
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421                           
  4422                           	psect	text31
  4423  000C40                     __ptext31:
  4424                           	opt stack 0
  4425  000C40                     _I2C_BusCollisionISR:
  4426                           	opt stack 26
  4427                           
  4428                           ;incstack = 0
  4429  000C40  0012               	return		;funcret
  4430  000C42                     __end_of_I2C_BusCollisionISR:
  4431                           	opt stack 0
  4432                           tosu	equ	0xFFF
  4433                           tosh	equ	0xFFE
  4434                           tosl	equ	0xFFD
  4435                           pclatu	equ	0xFFB
  4436                           pclath	equ	0xFFA
  4437                           tblptru	equ	0xFF8
  4438                           tblptrh	equ	0xFF7
  4439                           tblptrl	equ	0xFF6
  4440                           tablat	equ	0xFF5
  4441                           prodh	equ	0xFF4
  4442                           prodl	equ	0xFF3
  4443                           intcon	equ	0xFF2
  4444                           intcon2	equ	0xFF1
  4445                           intcon3	equ	0xFF0
  4446                           postinc0	equ	0xFEE
  4447                           fsr0h	equ	0xFEA
  4448                           fsr0l	equ	0xFE9
  4449                           wreg	equ	0xFE8
  4450                           fsr1h	equ	0xFE2
  4451                           fsr1l	equ	0xFE1
  4452                           indf2	equ	0xFDF
  4453                           postinc2	equ	0xFDE
  4454                           postdec2	equ	0xFDD
  4455                           fsr2h	equ	0xFDA
  4456                           fsr2l	equ	0xFD9
  4457                           status	equ	0xFD8
  4458                           
  4459 ;; *************** function _CCP2_CaptureISR *****************
  4460 ;; Defined at:
  4461 ;;		line 80 in file "mcc_generated_files/ccp2.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;		None
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;  module          2    2[COMRAM] struct CCPR2Reg_tag
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  1    wreg      void 
  4468 ;; Registers used:
  4469 ;;		wreg, status,2, status,0
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4476 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4477 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4478 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4479 ;;Total ram usage:        4 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; This function calls:
  4482 ;;		Nothing
  4483 ;; This function is called by:
  4484 ;;		_INTERRUPT_InterruptManager
  4485 ;; This function uses a non-reentrant model
  4486 ;;
  4487                           
  4488                           	psect	text32
  4489  00093E                     __ptext32:
  4490                           	opt stack 0
  4491  00093E                     _CCP2_CaptureISR:
  4492                           	opt stack 26
  4493                           
  4494                           ;ccp2.c: 82: CCP_PERIOD_REG_T module;
  4495                           ;ccp2.c: 85: PIR3bits.CCP2IF = 0;
  4496                           
  4497                           ;incstack = 0
  4498  00093E  94A4               	bcf	4004,2,c	;volatile
  4499                           
  4500                           ;ccp2.c: 88: module.ccpr2l = CCPR2L;
  4501  000940  CF51 F003          	movff	3921,CCP2_CaptureISR@module	;volatile
  4502                           
  4503                           ;ccp2.c: 89: module.ccpr2h = CCPR2H;
  4504  000944  CF52 F004          	movff	3922,CCP2_CaptureISR@module+1	;volatile
  4505                           
  4506                           ;ccp2.c: 92: if(prev_reading >= module.ccpr2_16Bit) time_diff = 0xFFFF - (prev_reading -
      +                           module.ccpr2_16Bit);
  4507  000948  5003               	movf	CCP2_CaptureISR@module,w,c
  4508  00094A  5C38               	subwf	_prev_reading,w,c	;volatile
  4509  00094C  5004               	movf	CCP2_CaptureISR@module+1,w,c
  4510  00094E  5839               	subwfb	_prev_reading+1,w,c	;volatile
  4511  000950  A0D8               	btfss	status,0,c
  4512  000952  D015               	goto	i2l1757
  4513  000954  C003  F001         	movff	CCP2_CaptureISR@module,??_CCP2_CaptureISR
  4514  000958  C004  F002         	movff	CCP2_CaptureISR@module+1,??_CCP2_CaptureISR+1
  4515  00095C  1E01               	comf	??_CCP2_CaptureISR,f,c
  4516  00095E  1E02               	comf	??_CCP2_CaptureISR+1,f,c
  4517  000960  4A01               	infsnz	??_CCP2_CaptureISR,f,c
  4518  000962  2A02               	incf	??_CCP2_CaptureISR+1,f,c
  4519  000964  5038               	movf	_prev_reading,w,c	;volatile
  4520  000966  2601               	addwf	??_CCP2_CaptureISR,f,c
  4521  000968  5039               	movf	_prev_reading+1,w,c	;volatile
  4522  00096A  2202               	addwfc	??_CCP2_CaptureISR+1,f,c
  4523  00096C  1E01               	comf	??_CCP2_CaptureISR,f,c
  4524  00096E  1E02               	comf	??_CCP2_CaptureISR+1,f,c
  4525  000970  4A01               	infsnz	??_CCP2_CaptureISR,f,c
  4526  000972  2A02               	incf	??_CCP2_CaptureISR+1,f,c
  4527  000974  0EFF               	movlw	255
  4528  000976  2401               	addwf	??_CCP2_CaptureISR,w,c
  4529  000978  6E3A               	movwf	_time_diff,c	;volatile
  4530  00097A  0EFF               	movlw	255
  4531  00097C  D00C               	goto	L2
  4532  00097E                     i2l1757:
  4533                           
  4534                           ;ccp2.c: 93: else time_diff = module.ccpr2_16Bit - prev_reading;
  4535  00097E  C038  F001         	movff	_prev_reading,??_CCP2_CaptureISR	;volatile
  4536  000982  C039  F002         	movff	_prev_reading+1,??_CCP2_CaptureISR+1	;volatile
  4537  000986  1E01               	comf	??_CCP2_CaptureISR,f,c
  4538  000988  1E02               	comf	??_CCP2_CaptureISR+1,f,c
  4539  00098A  4A01               	infsnz	??_CCP2_CaptureISR,f,c
  4540  00098C  2A02               	incf	??_CCP2_CaptureISR+1,f,c
  4541  00098E  5003               	movf	CCP2_CaptureISR@module,w,c
  4542  000990  2401               	addwf	??_CCP2_CaptureISR,w,c
  4543  000992  6E3A               	movwf	_time_diff,c	;volatile
  4544  000994  5004               	movf	CCP2_CaptureISR@module+1,w,c
  4545  000996                     L2:
  4546  000996  2002               	addwfc	??_CCP2_CaptureISR+1,w,c
  4547  000998  6E3B               	movwf	_time_diff+1,c	;volatile
  4548                           
  4549                           ;ccp2.c: 100: prev_reading = module.ccpr2_16Bit;
  4550  00099A  C003  F038         	movff	CCP2_CaptureISR@module,_prev_reading	;volatile
  4551  00099E  C004  F039         	movff	CCP2_CaptureISR@module+1,_prev_reading+1	;volatile
  4552  0009A2  0012               	return		;funcret
  4553  0009A4                     __end_of_CCP2_CaptureISR:
  4554                           	opt stack 0
  4555  0000                     tosu	equ	0xFFF
  4556                           tosh	equ	0xFFE
  4557                           tosl	equ	0xFFD
  4558                           pclatu	equ	0xFFB
  4559                           pclath	equ	0xFFA
  4560                           tblptru	equ	0xFF8
  4561                           tblptrh	equ	0xFF7
  4562                           tblptrl	equ	0xFF6
  4563                           tablat	equ	0xFF5
  4564                           prodh	equ	0xFF4
  4565                           prodl	equ	0xFF3
  4566                           intcon	equ	0xFF2
  4567                           intcon2	equ	0xFF1
  4568                           intcon3	equ	0xFF0
  4569                           postinc0	equ	0xFEE
  4570                           fsr0h	equ	0xFEA
  4571                           fsr0l	equ	0xFE9
  4572                           wreg	equ	0xFE8
  4573                           fsr1h	equ	0xFE2
  4574                           fsr1l	equ	0xFE1
  4575                           indf2	equ	0xFDF
  4576                           postinc2	equ	0xFDE
  4577                           postdec2	equ	0xFDD
  4578                           fsr2h	equ	0xFDA
  4579                           fsr2l	equ	0xFD9
  4580                           status	equ	0xFD8
  4581                           tosu	equ	0xFFF
  4582                           tosh	equ	0xFFE
  4583                           tosl	equ	0xFFD
  4584                           pclatu	equ	0xFFB
  4585                           pclath	equ	0xFFA
  4586                           tblptru	equ	0xFF8
  4587                           tblptrh	equ	0xFF7
  4588                           tblptrl	equ	0xFF6
  4589                           tablat	equ	0xFF5
  4590                           prodh	equ	0xFF4
  4591                           prodl	equ	0xFF3
  4592                           intcon	equ	0xFF2
  4593                           intcon2	equ	0xFF1
  4594                           intcon3	equ	0xFF0
  4595                           postinc0	equ	0xFEE
  4596                           fsr0h	equ	0xFEA
  4597                           fsr0l	equ	0xFE9
  4598                           wreg	equ	0xFE8
  4599                           fsr1h	equ	0xFE2
  4600                           fsr1l	equ	0xFE1
  4601                           indf2	equ	0xFDF
  4602                           postinc2	equ	0xFDE
  4603                           postdec2	equ	0xFDD
  4604                           fsr2h	equ	0xFDA
  4605                           fsr2l	equ	0xFD9
  4606                           status	equ	0xFD8
  4607                           
  4608                           	psect	text33
  4609  000000                     __ptext33:
  4610                           	opt stack 0
  4611                           tosu	equ	0xFFF
  4612                           tosh	equ	0xFFE
  4613                           tosl	equ	0xFFD
  4614                           pclatu	equ	0xFFB
  4615                           pclath	equ	0xFFA
  4616                           tblptru	equ	0xFF8
  4617                           tblptrh	equ	0xFF7
  4618                           tblptrl	equ	0xFF6
  4619                           tablat	equ	0xFF5
  4620                           prodh	equ	0xFF4
  4621                           prodl	equ	0xFF3
  4622                           intcon	equ	0xFF2
  4623                           intcon2	equ	0xFF1
  4624                           intcon3	equ	0xFF0
  4625                           postinc0	equ	0xFEE
  4626                           fsr0h	equ	0xFEA
  4627                           fsr0l	equ	0xFE9
  4628                           wreg	equ	0xFE8
  4629                           fsr1h	equ	0xFE2
  4630                           fsr1l	equ	0xFE1
  4631                           indf2	equ	0xFDF
  4632                           postinc2	equ	0xFDE
  4633                           postdec2	equ	0xFDD
  4634                           fsr2h	equ	0xFDA
  4635                           fsr2l	equ	0xFD9
  4636                           status	equ	0xFD8
  4637                           
  4638                           	psect	rparam
  4639  0000                     tosu	equ	0xFFF
  4640                           tosh	equ	0xFFE
  4641                           tosl	equ	0xFFD
  4642                           pclatu	equ	0xFFB
  4643                           pclath	equ	0xFFA
  4644                           tblptru	equ	0xFF8
  4645                           tblptrh	equ	0xFF7
  4646                           tblptrl	equ	0xFF6
  4647                           tablat	equ	0xFF5
  4648                           prodh	equ	0xFF4
  4649                           prodl	equ	0xFF3
  4650                           intcon	equ	0xFF2
  4651                           intcon2	equ	0xFF1
  4652                           intcon3	equ	0xFF0
  4653                           postinc0	equ	0xFEE
  4654                           fsr0h	equ	0xFEA
  4655                           fsr0l	equ	0xFE9
  4656                           wreg	equ	0xFE8
  4657                           fsr1h	equ	0xFE2
  4658                           fsr1l	equ	0xFE1
  4659                           indf2	equ	0xFDF
  4660                           postinc2	equ	0xFDE
  4661                           postdec2	equ	0xFDD
  4662                           fsr2h	equ	0xFDA
  4663                           fsr2l	equ	0xFD9
  4664                           status	equ	0xFD8
  4665                           
  4666                           	psect	temp
  4667  00004A                     btemp:
  4668                           	opt stack 0
  4669  00004A                     	ds	1
  4670  0000                     int$flags	set	btemp
  4671                           tosu	equ	0xFFF
  4672                           tosh	equ	0xFFE
  4673                           tosl	equ	0xFFD
  4674                           pclatu	equ	0xFFB
  4675                           pclath	equ	0xFFA
  4676                           tblptru	equ	0xFF8
  4677                           tblptrh	equ	0xFF7
  4678                           tblptrl	equ	0xFF6
  4679                           tablat	equ	0xFF5
  4680                           prodh	equ	0xFF4
  4681                           prodl	equ	0xFF3
  4682                           intcon	equ	0xFF2
  4683                           intcon2	equ	0xFF1
  4684                           intcon3	equ	0xFF0
  4685                           postinc0	equ	0xFEE
  4686                           fsr0h	equ	0xFEA
  4687                           fsr0l	equ	0xFE9
  4688                           wreg	equ	0xFE8
  4689                           fsr1h	equ	0xFE2
  4690                           fsr1l	equ	0xFE1
  4691                           indf2	equ	0xFDF
  4692                           postinc2	equ	0xFDE
  4693                           postdec2	equ	0xFDD
  4694                           fsr2h	equ	0xFDA
  4695                           fsr2l	equ	0xFD9
  4696                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         51
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      73
    BANK0           160     21      47
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    i2c_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c_tr_queue.pTrFlag	PTR enum E15091 size(2) Largest target is 0

    i2c_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C_MasterRead@trBlock(BANK0[6]), I2C_MasterWrite@trBlock(BANK0[6]), 

    INT0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    I2C_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 0

    I2C_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0

    i2c_object.pTrTail.pTrFlag	PTR enum E15091 size(2) Largest target is 0

    i2c_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(BANK0[6]), I2C_MasterWrite@trBlock(BANK0[6]), 

    F15203.pbuffer	PTR unsigned char  size(2) Largest target is 0

    F15198.pbuffer	PTR unsigned char  size(2) Largest target is 0

    I2C_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    p_i2c_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 0

    p_i2c_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(BANK0[6]), I2C_MasterWrite@trBlock(BANK0[6]), NULL(NULL[0]), 

    i2c_object.pTrHead.pTrFlag	PTR enum E15091 size(2) Largest target is 0

    i2c_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(BANK0[6]), I2C_MasterWrite@trBlock(BANK0[6]), 

    S1702$pbuffer	PTR unsigned char  size(2) Largest target is 0

    p_i2c_current.pbuffer	PTR unsigned char  size(2) Largest target is 0

    S1714$pTrFlag	PTR enum E15091 size(2) Largest target is 0

    p_i2c_current.pTrFlag	PTR enum E15091 size(2) Largest target is 0

    S1714$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(BANK0[6]), I2C_MasterWrite@trBlock(BANK0[6]), 

    p_i2c_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C_MasterRead@trBlock(BANK0[6]), I2C_MasterWrite@trBlock(BANK0[6]), 

    p_i2c_current	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(BANK0[6]), NULL(NULL[0]), 

    S1725$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(BANK0[6]), 

    i2c_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(BANK0[6]), 

    S1725$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(BANK0[6]), 

    i2c_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c_tr_queue(BANK0[6]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), 

    convertCANid2Reg@passedInSIDH	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempSIDH(BANK0[1]), 

    convertCANid2Reg@passedInSIDL	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempSIDL(BANK0[1]), 

    convertCANid2Reg@passedInEIDH	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempEIDH(BANK0[1]), 

    convertCANid2Reg@passedInEIDL	PTR unsigned char  size(2) Largest target is 1
		 -> CAN_transmit@tempEIDL(BANK0[1]), 

    CAN_transmit@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> main@test(BANK0[14]), 


Critical Paths under _main in COMRAM

    _main->_CAN_transmit
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _CAN_transmit->_convertCANid2Reg

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INT1_ISR->_TMR1_ReadTimer

Critical Paths under _main in BANK0

    _main->_CAN_transmit

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0    5113
                                              5 BANK0     16    16      0
                       _CAN_transmit
             _INT1_GetInterruptState
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     363
                     _ADC_Initialize
                    _CCP2_Initialize
                    _ECAN_Initialize
                 _EXT_INT_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     121
                                             22 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     121
                                             20 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     242
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2     121
                                             20 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2     121
                                             20 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ECAN_Initialize                                      1     1      0       0
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CCP2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INT1_GetInterruptState                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CAN_transmit                                         7     5      2    4361
                                             38 COMRAM     2     0      2
                                              0 BANK0      5     5      0
                   _convertCANid2Reg
 ---------------------------------------------------------------------------------
 (2) _convertCANid2Reg                                    18     5     13    2425
                                             20 COMRAM    18     5     13
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0      98
                                              6 COMRAM    14    14      0
                    _CCP2_CaptureISR
                _I2C_BusCollisionISR
                            _I2C_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0      23
                      _INT1_CallBack
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_ReadTimer                                       6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _INT1_CallBack                                        0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT0_CallBack                                        0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_ISR                                              2     2      0       0
                                              0 COMRAM     2     2      0
               _I2C_FunctionComplete
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C_Stop                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_FunctionComplete                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_BusCollisionISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _CCP2_CaptureISR                                      4     4      0      75
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_transmit
     _convertCANid2Reg
   _INT1_GetInterruptState
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP2_Initialize
     _ECAN_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _CCP2_CaptureISR
   _I2C_BusCollisionISR
   _I2C_ISR
     _I2C_FunctionComplete
     _I2C_Stop
   _INT0_ISR
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *
     _TMR1_ReadTimer
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     15      2F       5       29.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     28      49       1       77.7%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      78       6        0.0%
DATA                 0      0      78       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Wed Jan 03 19:12:21 2018

                   I2C_ISR@i2c_bytes_left 0041                  __size_of_ECAN_Initialize 00EE  
                             __CFG_BORV$3 000000                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                                       l286 0204  
                                     l288 0314                                       l848 090A  
                            __CFG_CPB$OFF 000000                                       _RA1 007C01  
                                     _RB4 007C0C                              __CFG_CPD$OFF 000000  
              ??_INT0_SetInterruptHandler 0017                           __end_of_I2C_ISR 0642  
                         _timer1ReloadVal 0048                                       tosl 000FFD  
                                     wreg 000FE8                             _INT0_CallBack 0B60  
                 ?_INT1_GetInterruptState 0001                             _INT1_CallBack 0B3A  
                                    l3011 0750                                      l3161 08E8  
                                    l3167 0902                                      l2973 07E4  
                                    l2985 08C0                                      _LATA 000F89  
                                    _LATB 000F8A                                      u1415 06DA  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    u1425 077A                                      _LATE 000F8D  
                  ??_I2C_FunctionComplete 0001                                      _WPUB 000F5B  
                             main@message 0066                   __end_of_CCP2_Initialize 0BC0  
                                    _main 08CE              convertCANid2Reg@passedInEIDH 001A  
            convertCANid2Reg@passedInEIDL 001C                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 004A              convertCANid2Reg@passedInSIDH 001E  
            convertCANid2Reg@passedInSIDL 0020                          __end_of_I2C_Stop 0C2E  
                 CAN_transmit@returnValue 0060                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00D2  
                           __CFG_IESO$OFF 000000                             __CFG_FOSC$HS1 000000  
              ??_TMR1_SetInterruptHandler 0017                             __CFG_MCLRE$ON 000000  
                            ___param_bank 000000                          __end_of_INT0_ISR 0C26  
                        __end_of_INT1_ISR 0A2E            __size_of_OSCILLATOR_Initialize 0012  
           __end_of_OSCILLATOR_Initialize 0C00                                     ?_main 0001  
                                   _EEADR 000F74                           _TMR1_StartTimer 0C2E  
                                   _T1CON 000FCD                             _i2c_trb_count 0042  
                                   i2l530 004E                                     i2l532 005A  
                                   i2l534 006A                                     i2l542 0096  
                                   i2l536 007A                                     i2l538 008A  
                                   i2l670 04A4                                     i2l680 0546  
                                   i2l664 043A                                     i2l690 0586  
                                   i2l675 04D0                                     i2l667 0494  
                                   i2l676 04DE                                     i2l693 05A0  
                                   i2l669 049C                                     i2l694 05B0  
                                   i2l686 055A                                     i2l790 0A24  
                                   i2l791 0A26                                     i2l698 05E0  
                                   _TMR1H 000FCF                                     _TMR1L 000FCE  
                                   _TRISA 000F92                                     _TRISB 000F93  
                          ?_INT0_CallBack 0001                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
          __end_of_INT1_GetInterruptState 0C3A                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                        __end_of_TMR1_ISR 09EC                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          ?_INT1_CallBack 0001                          ?_CCP2_CaptureISR 0001  
                          __CFG_EBTRB$OFF 000000                      __end_of_CAN_transmit 0424  
          ??_INT1_DefaultInterruptHandler 0001                  _INT1_SetInterruptHandler 0C0A  
                 __end_of_TMR1_Initialize 0A68                                     pclath 000FFA  
                                   tablat 000FF5                                     status 000FD8  
                    CAN_transmit@tempEIDH 0061                      CAN_transmit@tempEIDL 0062  
                    CAN_transmit@tempSIDH 0063                      CAN_transmit@tempSIDL 0064  
                              _i2c_object 0029                           __initialization 0AC8  
                            __end_of_main 093E                                 ??_I2C_ISR 0001  
             ?_INTERRUPT_InterruptManager 0001                                    ??_main 0029  
                           __activetblptr 000002                            __CFG_RETEN$OFF 000000  
                       ??_ECAN_Initialize 0015                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                                  _CANCON 000F6F                                    _ADRESH 000FC4  
                                  _EEADRH 000F75                                    _ADRESL 000FC3  
                                  _EEDATA 000F73                                    _CCPR2H 000F52  
                                  _CCPR2L 000F51                                    _EECON2 000F7E  
                                  _ANCON0 000F5D                                    _ANCON1 000F5C  
                                  _T1GCON 000FAA                           __CFG_BBSIZ$BB2K 000000  
                          __CFG_WDTEN$OFF 000000                                    i2l2711 0554  
                                  i2l2631 0A1C                                    i2l2623 0A04  
                                  i2l2483 0BD2                                    i2l1757 097E  
                                  i2l2741 05B8                                    i2l2629 0A18  
                                  i2l2719 056A                                    i2l2671 04B2  
                                  i2l2761 05F2                                    i2l2745 05C0  
                                  i2l2729 058E                                    i2l2691 050C  
                                  i2l2659 0484                                    i2l2757 05E6  
                                  i2l2677 04CA                                    i2l2781 09C6  
                                  i2l2759 05EA                                    i2l2767 05FC  
                                  i2l2779 09BE                                    _TABLAT 000FF5  
                                  _OSCCON 000FD3                                    _RXB0D0 000F66  
                                  _RXB0D1 000F67                                    _RXB0D2 000F68  
                                  _RXB0D3 000F69                                    _RXB0D4 000F6A  
                                  _RXB1D0 000F36                                    _RXB0D5 000F6B  
                                  _RXB1D1 000F37                                    _RXB0D6 000F6C  
                                  _RXB1D2 000F38                                    _RXB0D7 000F6D  
                                  _RXB1D3 000F39                                    _RXB1D4 000F3A  
                                  _RXB1D5 000F3B                                    _RXB1D6 000F3C  
                                  _RXB1D7 000F3D                                    _TXB0D0 000F26  
                                  _TXB0D1 000F27                                    _TXB0D2 000F28  
                                  _TXB0D3 000F29                                    _TXB0D4 000F2A  
                                  _TXB1D0 000F16                                    _TXB0D5 000F2B  
                                  _TXB1D1 000F17                                    _TXB0D6 000F2C  
                                  _TXB1D2 000F18                                    _TXB0D7 000F2D  
                                  _TXB1D3 000F19                                    _TXB1D4 000F1A  
                                  _TXB2D0 000F06                                    _TXB1D5 000F1B  
                                  _TXB2D1 000F07                                    _TXB1D6 000F1C  
                                  _TXB2D2 000F08                                    _TXB1D7 000F1D  
                                  _TXB2D3 000F09                                    _TXB2D4 000F0A  
                                  _TXB2D5 000F0B                                    _TXB2D6 000F0C  
                                  _TXB2D7 000F0D                                    _SSPADD 000FC8  
                                  _SSPBUF 000FC9                          ?_CCP2_Initialize 0001  
                      _ext_int0_cur_state 003C                            __CFG_XINST$OFF 000000  
    __end_of_TMR1_DefaultInterruptHandler 0C3C     __size_of_TMR1_DefaultInterruptHandler 0002  
            _TMR1_DefaultInterruptHandler 0C3A                   __end_of_TMR1_StartTimer 0C32  
                          __CFG_STVREN$ON 000000                        _ext_int1_cur_state 003D  
                                  clear_0 0ACE                                    clear_1 0ADA  
                 __size_of_I2C_Initialize 002A                           ??_INT0_CallBack 0001  
                         ??_INT1_CallBack 0001                                 ?_I2C_Stop 0001  
               __size_of_convertCANid2Reg 019E                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
INT0_SetInterruptHandler@InterruptHandler 0015  INT1_SetInterruptHandler@InterruptHandler 0015  
TMR1_SetInterruptHandler@InterruptHandler 0015             __size_of_INTERRUPT_Initialize 0004  
                        ?_TMR1_Initialize 0001                         _SYSTEM_Initialize 0AEE  
                              __accesstop 0060                   __end_of__initialization 0AE0  
                               ?_INT0_ISR 0001                                 ?_INT1_ISR 0001  
                      ?_SYSTEM_Initialize 0001                             ___rparam_used 000001  
                          __pcstackCOMRAM 0001                       ??_SYSTEM_Initialize 0019  
                               ?_TMR1_ISR 0001             ?_TMR1_DefaultInterruptHandler 0001  
                   __size_of_CAN_transmit 034E               __size_of_EXT_INT_Initialize 0026  
                              ??_I2C_Stop 0001                   __size_of_TMR1_ReadTimer 0020  
               __end_of_SYSTEM_Initialize 0B14                                __pbssBANK0 0075  
                         __CFG_PLLCFG$OFF 000000                     _INT0_InterruptHandler 0089  
                              ??_INT0_ISR 0001                                ??_INT1_ISR 0007  
                              __pnvCOMRAM 0048              __size_of_I2C_BusCollisionISR 0002  
                          main@int1_state 0065                              _CAN_transmit 00D6  
                        ?_TMR1_StartTimer 0001                                ??_TMR1_ISR 0001  
                                 _CCP2CON 000F50                                   _I2C_ISR 0424  
                                 _ECANCON 000F72                                   _CANSTAT 000F6E  
                                 _BRGCON1 000E43                                   _BRGCON2 000E44  
                                 _BRGCON3 000E45                   __size_of_ADC_Initialize 0016  
              ??_INT1_SetInterruptHandler 0017                          __CFG_CANMX$PORTB 000000  
                                 _REFOCON 000F9A                                   _OSCCON2 000FD2  
                                 _TBLPTRH 000FF7                                   _TBLPTRL 000FF6  
                                 _TBLPTRU 000FF8                                   _RXB0DLC 000F65  
                                 _RXB1DLC 000F35                                   _OSCTUNE 000F9B  
                 I2C_Stop@completion_code 0001                                   i2u87_48 0B4A  
                                 i2u89_48 0B70                                   _TXB0DLC 000F25  
                                 _TXB1DLC 000F15                                   _TXB2DLC 000F05  
                                 _SSPCON1 000FC6                                   _SSPSTAT 000FC7  
           __size_of_I2C_FunctionComplete 0018         __size_of_INT0_SetInterruptHandler 000A  
               ?_INT0_SetInterruptHandler 0015                           __CFG_PWRTEN$OFF 000000  
                                 __Hparam 0000                                   __Lparam 0000  
                         _ECAN_Initialize 07E0                                   __pcinit 0AC8  
                          _I2C_Initialize 0A9E                                   __ramtop 0F00  
                                 __ptext0 08CE                                   __ptext1 0AEE  
                                 __ptext2 0A2E                                   __ptext3 0C2E  
                                 __ptext4 0C00                                   __ptext5 0A68  
                                 __ptext6 0BEE                                   __ptext7 0C32  
                                 __ptext8 0A9E                                   __ptext9 0B14  
          ??_TMR1_DefaultInterruptHandler 0001                                 _T1CONbits 000FCD  
                   _OSCILLATOR_Initialize 0BEE         __size_of_TMR1_SetInterruptHandler 000A  
                        _convertCANid2Reg 0642                  ??_PIN_MANAGER_Initialize 0015  
               ?_TMR1_SetInterruptHandler 0015                         __CFG_MSSPMSK$MSK7 000000  
              __size_of_SYSTEM_Initialize 0026                      end_of_initialization 0AE0  
                           __Lmediumconst 0000                  __size_of_CCP2_CaptureISR 0066  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                    __end_of_I2C_Initialize 0AC8  
                   _INT1_InterruptHandler 008B                                 _PORTBbits 000F81  
                      I2C_ISR@i2c_address 0046                            _TMR1_ReadTimer 0B86  
                  CAN_transmit@tempCanMsg 0027                         __size_of_I2C_Stop 0008  
                       __CFG_SOSCSEL$HIGH 000000          I2C_ISR@i2c_10bit_address_restart 0040  
                 __end_of_ECAN_Initialize 08CE                         __size_of_INT0_ISR 0008  
                       __size_of_INT1_ISR 0042                         _p_i2c_trb_current 0036  
                __size_of_CCP2_Initialize 001A              __end_of_INTERRUPT_Initialize 0C36  
                         ?_I2C_Initialize 0001      __end_of_INT0_DefaultInterruptHandler 0C40  
   __size_of_INT0_DefaultInterruptHandler 0002              _INT0_DefaultInterruptHandler 0C3E  
                ??_INT1_GetInterruptState 0015                              _i2c_tr_queue 0083  
                       __size_of_TMR1_ISR 0048                            _ADC_Initialize 0BD8  
                  ?_OSCILLATOR_Initialize 0001                    __end_of_TMR1_ReadTimer 0BA6  
                   __end_of_INT0_CallBack 0B86                       _I2C_BusCollisionISR 0C40  
                     start_initialization 0AC8           __size_of_PIN_MANAGER_Initialize 0036  
                   __end_of_INT1_CallBack 0B60                                 _i2c_state 0043  
                    ?_I2C_BusCollisionISR 0001                  __size_of_TMR1_Initialize 003A  
                       ??_CCP2_CaptureISR 0001                               _CCPTMRSbits 000F99  
                  __end_of_ADC_Initialize 0BEE                                  ?_I2C_ISR 0001  
              __end_of_EXT_INT_Initialize 0B3A             ?_INT0_DefaultInterruptHandler 0001  
                         ?_TMR1_ReadTimer 0001                               __pbssCOMRAM 0029  
        __end_of_INT0_SetInterruptHandler 0C1E                             __pcstackBANK0 0060  
                         _ext_int0_timing 003E                     ??_I2C_BusCollisionISR 0001  
                         _ext_int1_timing 003F                                 __pnvBANK0 0089  
                          _read_available 0044                          ?_ECAN_Initialize 0001  
                  _PIN_MANAGER_Initialize 0A68                  __end_of_convertCANid2Reg 07E0  
                               __pintcode 0008          __end_of_TMR1_SetInterruptHandler 0C0A  
                         ?_ADC_Initialize 0001              __end_of_I2C_FunctionComplete 0BD8  
            ??_INTERRUPT_InterruptManager 0007           __size_of_INT1_GetInterruptState 0004  
                       ??_CCP2_Initialize 0015                  __size_of_TMR1_StartTimer 0004  
                             _COMSTATbits 000F71                                 _cycle_num 0045  
                                _I2C_Stop 0C26            convertCANid2Reg@tempPassedInID 0015  
                           _p_i2c_current 0034                      _INTERRUPT_Initialize 0C32  
                                _INT0_ISR 0C1E                                  _INT1_ISR 09EC  
       __size_of_INT1_SetInterruptHandler 000A                 ?_INT1_SetInterruptHandler 0015  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _PIE3bits 000FA3                                  _PIE5bits 000F76  
                                i2u111_40 09B8                                  i2u113_48 09D6  
     __size_of_INTERRUPT_InterruptManager 00CA                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  _PIR3bits 000FA4  
                                _PIR4bits 000FB7                                  _PIR5bits 000F77  
                                _RXB0EIDH 000F63                                  _RXB0EIDL 000F64  
                                _RXB1EIDH 000F33                                  _RXB1EIDL 000F34  
                                _RCONbits 000FD0                                  _RXB0SIDH 000F61  
                                _RXB0SIDL 000F62                                  _RXB1SIDH 000F31  
                                _RXF0EIDH 000EE2                                  _RXB1SIDL 000F32  
                                _RXF0EIDL 000EE3                                  _RXF1EIDH 000EE6  
                                _RXF1EIDL 000EE7                                 _time_diff 003A  
                                _RXF2EIDH 000EEA                                  _RXF2EIDL 000EEB  
                                _RXF3EIDH 000EEE                                  _RXF3EIDL 000EEF  
                                _RXF4EIDH 000EF2                                  _RXF4EIDL 000EF3  
                                _RXF5EIDH 000EF6                                  _RXF5EIDL 000EF7  
                                _RXF0SIDH 000EE0                                  _RXF0SIDL 000EE1  
                                _TXB0EIDH 000F23                                  _RXF1SIDH 000EE4  
                                _TXB0EIDL 000F24                                  _RXF1SIDL 000EE5  
                                _TXB1EIDH 000F13                                  _RXF2SIDH 000EE8  
                                _TXB1EIDL 000F14                                  _RXF2SIDL 000EE9  
                                _TXB2EIDH 000F03                                  _RXF3SIDH 000EEC  
                                _TXB2EIDL 000F04                                  _RXF3SIDL 000EED  
                                _RXF4SIDH 000EF0                                  _RXF4SIDL 000EF1  
                                _RXF5SIDH 000EF4                                  _RXF5SIDL 000EF5  
                                _TMR1_ISR 09A4                                  _RXM0EIDH 000EFA  
                                _RXM0EIDL 000EFB                                  _TXB0SIDH 000F21  
                                _RXM1EIDH 000EFE                                  _TXB0SIDL 000F22  
                                _RXM1EIDL 000EFF                       I2C_ISR@pi2c_buf_ptr 0032  
                                _TXB1SIDH 000F11                                  _TXB1SIDL 000F12  
                                _TXB2SIDH 000F01                                  _TXB2SIDL 000F02  
                                _RXM0SIDH 000EF8                                  _RXM0SIDL 000EF9  
                                _RXM1SIDH 000EFC                                  _RXM1SIDL 000EFD  
                        __size_of_I2C_ISR 021E                         ??_TMR1_Initialize 0017  
                              _ADCON0bits 000FC2            ??_INT0_DefaultInterruptHandler 0001  
                             _INTCON2bits 000FF1                               _INTCON3bits 000FF0  
                   ?_INTERRUPT_Initialize 0001                  _INT0_SetInterruptHandler 0C14  
                  _INT1_GetInterruptState 0C36                                _EECON1bits 000F7F  
                        ??_I2C_Initialize 0015                                  __Hrparam 0000  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                   TMR1_ReadTimer@readVal 0005                 convertCANid2Reg@canIdType 0019  
                 ??_OSCILLATOR_Initialize 0015                                _CIOCONbits 000F70  
                _TMR1_SetInterruptHandler 0C00                     _TMR1_InterruptHandler 008D  
                          _ext_int0_timer 0075                   convertCANid2Reg@wipSIDL 0026  
                          _ext_int1_timer 0030                                  __ptext10 0C0A  
                                __ptext11 0C14                                  __ptext20 0C3A  
                                __ptext12 07E0                                  __ptext21 09EC  
                                __ptext13 0BA6                                _T1GCONbits 000FAA  
                                __ptext30 0BC0                                  __ptext22 0B86  
                                __ptext14 0BD8                                  __ptext31 0C40  
                                __ptext23 0B3A                                  __ptext15 0C36  
                                __ptext32 093E                                  __ptext24 0C3C  
                                __ptext16 00D6                                  __ptext33 0000  
                                __ptext25 0C1E                                  __ptext17 0642  
                                __ptext26 0B60                                  __ptext27 0C3E  
                                __ptext19 09A4                                  __ptext28 0424  
                                __ptext29 0C26                         ??_TMR1_StartTimer 0015  
                         _CCP2_CaptureISR 093E                             __size_of_main 0070  
                    _I2C_FunctionComplete 0BC0                             ?_CAN_transmit 0027  
                        ??_TMR1_ReadTimer 0003                                  int$flags 004A  
      __end_of_INTERRUPT_InterruptManager 00D2                _INTERRUPT_InterruptManager 0008  
                                main@test 0067                       __CFG_INTOSCSEL$HIGH 000000  
    __end_of_INT1_DefaultInterruptHandler 0C3E     __size_of_INT1_DefaultInterruptHandler 0002  
            _INT1_DefaultInterruptHandler 0C3C                               _RXB0CONbits 000F60  
                             _RXB1CONbits 000F30                                _INTCONbits 000FF2  
                  ??_INTERRUPT_Initialize 0015                        _EXT_INT_Initialize 0B14  
                                intlevel2 0000                     ?_I2C_FunctionComplete 0001  
                 ?_PIN_MANAGER_Initialize 0001                     I2C_MasterRead@trBlock 0077  
                     ?_EXT_INT_Initialize 0001                               _TXB0CONbits 000F20  
                             _TXB1CONbits 000F10                               _TXB2CONbits 000F00  
                        ??_ADC_Initialize 0015                    __size_of_INT0_CallBack 0026  
                          ??_CAN_transmit 0029                         ?_convertCANid2Reg 0015  
                         _CCP2_Initialize 0BA6                              _prev_reading 0038  
                  __size_of_INT1_CallBack 0026                        __CFG_WDTPS$1048576 000000  
                      ??_convertCANid2Reg 0022                      ??_EXT_INT_Initialize 0017  
                  I2C_MasterWrite@trBlock 007D                     CCP2_CaptureISR@module 0003  
           ?_INT1_DefaultInterruptHandler 0001          __end_of_INT1_SetInterruptHandler 0C14  
                 __end_of_CCP2_CaptureISR 09A4                               _SSPCON1bits 000FC6  
                             _SSPCON2bits 000FC5               __end_of_I2C_BusCollisionISR 0C42  
          __end_of_PIN_MANAGER_Initialize 0A9E                       __CFG_BORPWR$ZPBORMV 000000  
                         _TMR1_Initialize 0A2E  
